{"version":3,"sources":["components/Alert.js","utils/Icon.js","utils/Request.js","screens/contents/SmartObject/List.js","components/Action.js","screens/contents/SmartObject/Detail.js","screens/contents/SmartObject/New.js","Theme.js","screens/contents/Authorization/List.js","screens/contents/Process/List.js","utils/Source.js","components/IconList.js","screens/contents/Process/New.js","screens/contents/Process/Detail.js","screens/contents/Routine/List.js","screens/contents/Routine/New.js","screens/contents/Routine/Detail.js","screens/contents/Module/List.js","screens/contents/Module/Detail.js","screens/contents/Configuration/List.js","screens/contents/Widget/List.js","screens/contents/Widget/New.js","screens/contents/Widget/Detail.js","screens/contents/User/List.js","screens/contents/User/New.js","screens/contents/User/NewPassword.js","components/Sidebar.js","screens/Main.js","screens/GetStarted.js","screens/Authentification.js","App.js","index.js"],"names":["Alert","props","Snackbar","open","autoHideDuration","onClose","severity","elevation","variant","Icon","reference","size","Icons","SelectIcon","style","scale","fontSize","Object","entries","Request","this","method","data","url","a","authorization","localStorage","getItem","server","fetch","headers","body","JSON","stringify","result","json","error","message","Smartobject","state","page","enabled","smartobjects","get","setState","code","loading","Paper","display","padding","alignContent","justifyContent","alignItems","alignSelf","Typography","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","slice","map","smartobject","to","id","textDecoration","color","hover","cursor","getIcon","status","icon","Moment","lastUse","format","name","flexDirection","width","height","marginTop","marginBottom","textAlign","IconButton","borderRadius","Add","TablePagination","count","length","rowsPerPage","rowsPerPageOptions","onChangePage","event","React","Component","Action","action","value","default","tmp","type","marginRight","minWidth","TextField","placeholder","onChange","updateAction","currentTarget","FormControl","InputLabel","Select","target","label","values","MenuItem","toUpperCase","triangle","onChangeComplete","hex","Slider","defaultValue","valueLabelDisplay","orientation","min","max","step","DetailSmartObject","match","params","profiles","referenceSettings","valueSettings","executeInformation","resultProfile","resultSmartobject","history","push","delete","settings","index","argument","undefined","post","componentDidMount","profile","idProfile","module","Divider","paddingBottom","setting","onClick","navigator","clipboard","writeText","margin","FileCopy","deleteSmartobjectSettings","Delete","nativeEvent","insertSmartobjectSettings","actions","maxWidth","Button","executeAction","gridRowGap","gridTemplateColumns","bind","Close","parse","forEach","pprofile","ListItem","FormControlLabel","control","Switch","checked","deleteProfile","insertProfile","NewSmartobject","types","resultType","pModule","key","setModule","updateSettings","add","Save","responsiveFontSizes","createMuiTheme","palette","primary","main","Colors","secondary","typography","fontFamily","shape","Security","selectProfile","authorizations","onSelectProfile","Theme","success","warning","info","pAuthorization","secure","marginLeft","backgroundColor","background","paper","ListItemText","sort","b","filter","button","updateSecure","paddingLeft","paddingRight","getColor","Process","processs","_process","src","process","description","espace","Source","query","resultModule","resultProcess","sources","includes","mode","inputs","input","name_enable","name_disable","IconList","icons","resultJSON","Grid","container","spacing","item","xs","search","onSelect","New","popup","espaces","inputReference","inputName","inputType","inputMode","isChecked","source","arrSources","getSource","resultSource","resultEspace","fSource","fAction","enable","nameEnable","nameDisable","modeArgument","pIndex","arguments","InputProps","endAdornment","InputAdornment","position","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Checkbox","setInput","disabled","defaultChecked","removeModeArgument","removeSource","fullWidth","setSource","setAction","confirmationModule","set","NewProcess","referenceInput","nameInput","typeInput","modeInput","idsource","startIcon","Autorenew","Check","deleteProcessInput","insertProcessInput","object","deleteSource","addSource","Routine","routines","put","routine","flex","updateStatus","PlayArrow","Pause","Edit","duplicate","top","left","transform","NewRoutine","modalTrigger","modalEffect","watch","triggers","effects","statement","expected","trigger","effect","updateName","updateIcon","borderStyle","borderWidth","borderColor","paddingTop","updateWatch","Card","textTransform","removeTrigger","reset","removeEffect","save","Modal","Fade","in","addTrigger","addEffect","Module","modules","pmodule","md5","Detail","hashId","_module","Configuration","pageSmartobject","pageModule","Widget","widgets","widget","contents","rank","content","split","_content","fontWeight","NewWidget","image","contentSources","widgetReference","resultConfiguration","find","contentSource","tmpsettings","pindex","multiline","deleteContent","insertSource","setType","insertContent","pContent","native","update","setContent","users","user","login","updateProfile","Settings","password","confirmationPassword","NewPassword","changePassword","Sidebar","isMobile","Drawer","anchor","ListItemIcon","DevicesOther","Category","Extension","DeviceHub","AccountTree","Https","Person","onDisconnect","ExitToApp","Main","mediaQueries","mediaMatch","window","matchMedia","matches","addListener","e","basename","exact","path","SmartObject","NewSmartObject","DetailModule","DetailRoutine","DetailWidget","ListProcess","DetailProcess","User","NewUser","Authorization","GetStarted","authentification","confirmePassword","onFinish","lineHeight","noValidate","autoComplete","inputProps","maxLength","register","Authentification","getStarted","customAddress","address","service","replace","checkServer","setItem","token","removeItem","ok","onSubmit","preventDefault","autoFocus","on","disconnect","App","ThemeProvider","theme","CssBaseline","Box","userSelect","outline","WebkitTapHighlightColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.889f9e96.chunk.js","sourcesContent":["import MuiAlert from '@material-ui/lab/Alert'\r\nimport { Snackbar } from '@material-ui/core'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <Snackbar open={props.open} autoHideDuration={6000} onClose={() => props.onClose()}>\r\n            <MuiAlert severity={props.severity} elevation={6} variant=\"filled\" {...props} />\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default Alert","import * as Icons from '@material-ui/icons'\r\n\r\nclass Icon {\r\n\r\n    static getIcon(reference, size) {\r\n        if(Icons[reference]) {\r\n            let SelectIcon = Icons[reference]\r\n            return  <SelectIcon style={{scale: 4,fontSize: size ? size : null}}/>\r\n        } else {\r\n            let SelectIcon = Icons[\"Error\"]\r\n            return  <SelectIcon/>\r\n        }\r\n    }\r\n\r\n    static getAll() {\r\n        return Object.entries(Icons) \r\n    }\r\n\r\n}\r\n\r\nexport default Icon","class Request {\r\n\r\n    constructor() {\r\n        this.method = 'GET'\r\n    }\r\n\r\n    post(data) {\r\n        this.method = 'POST'\r\n        this.data = data\r\n        return this\r\n    }\r\n\r\n    get() {\r\n        this.method = 'GET'\r\n        return this\r\n    }\r\n\r\n    delete() {\r\n        this.method = 'DELETE'\r\n        return this\r\n    }\r\n\r\n    put(data) {\r\n        this.method = 'PUT'\r\n        this.data = data\r\n        return this\r\n    }\r\n\r\n    async fetch(url) {\r\n        let authorization = localStorage.getItem(\"authorization\")\r\n        let server = localStorage.getItem(\"server\")\r\n        try {\r\n            let result = await fetch(server + url, {\r\n                method: this.method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': authorization\r\n                },\r\n                body: this.method == 'POST' || this.method == 'PUT' ? JSON.stringify(this.data) : null\r\n            })\r\n            return await result.json()\r\n        } catch (error) {\r\n            return {\r\n                error: true,\r\n                message: \"An error has occurred\"\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Request","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'moment'\r\nimport { Add } from '@material-ui/icons'\r\nimport { Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton  } from '@material-ui/core'\r\nimport Icon from '../../../utils/Icon'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Smartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            smartobjects: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n            let result = await new Request().get().fetch(\"/api/smartobjects\")\r\n            if (result.error) {\r\n                this.setState({\r\n                    enabled: true,\r\n                    message: result.code + \" : \" + result.message\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    smartobjects: result.data\r\n                })\r\n            }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <div>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='body1'>\r\n                                                    Reference\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Typography variant='body1'>\r\n                                                    Status\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Typography variant='body1'>\r\n                                                    Last use\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.smartobjects.slice(this.state.page * 10, (this.state.page + 1) * 10).map((smartobject) => (\r\n                                            <Link to={\"/smartobject/\" + smartobject.id} style={{ textDecoration: 'none', color: 'white', display:'contents' }}>\r\n                                                <TableRow hover key={smartobject.name} style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {smartobject.reference}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {Icon.getIcon(smartobject.status.icon)}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {Moment(smartobject.lastUse).format(\"hh:mm DD/MM\") }\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </Link>\r\n\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                                    <Link to=\"/smartobject/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.smartobjects.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Smartobject","import React from 'react'\r\nimport { TextField, Paper, Typography, Slider, FormControl, Select, MenuItem, InputLabel } from '@material-ui/core'\r\nimport { TwitterPicker } from 'react-color'\r\n\r\nclass Action extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            action: this.props.action,\r\n            setState: this.props.setState,\r\n            value: this.props.action.default\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"argument-\" + action.id] = value\r\n        this.state.setState(tmp)\r\n        this.setState({\r\n            value: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        switch (this.state.action.type) {\r\n            case 'text':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\r\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\r\n                    </div>\r\n                )\r\n            case 'number':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\r\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\r\n                    </div>\r\n                )\r\n            case 'select':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10 }} >\r\n                        <FormControl variant=\"outlined\" style={{ width: '150px' }} >\r\n                            <InputLabel>{this.state.action.id}</InputLabel>\r\n                            <Select  onChange={(event) => { this.updateAction(this.state.action, event.target.value) }} label={this.state.action.id} >\r\n                                {\r\n                                    this.state.action.values.map(value => {\r\n                                        return <MenuItem value={value} >{value}</MenuItem>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                )\r\n            case 'colorpicker':\r\n                return (\r\n                    <Paper elevation={3} style={{ alignItems: 'center', display: 'flex', padding: 10, marginRight: 5 }} >\r\n                        <Typography variant='body1' style={{ textAlign: 'start', marginBottom: 5, marginRight: 10 }}>\r\n                            {this.state.action.id.toUpperCase()}\r\n                        </Typography>\r\n                        <TwitterPicker\r\n                            triangle='hide'\r\n                            color={this.state.value}\r\n                            onChangeComplete={(color) => { this.updateAction(this.state.action, color.hex) }}\r\n                        />\r\n                    </Paper>\r\n                )\r\n            case 'slider':\r\n                return (\r\n                    <Paper elevation={3} style={{ alignItems: 'center', display: 'flex', padding: 10, marginRight: 5 }} >\r\n                        <Typography variant='body1' style={{ textAlign: 'start', marginBottom: 5 }}>\r\n                            {this.state.action.id.toUpperCase()}\r\n                        </Typography>\r\n                        <Slider\r\n                            defaultValue={0}\r\n                            valueLabelDisplay=\"auto\"\r\n                            orientation={this.props.orientation ? this.props.orientation : 'horizontal'}\r\n                            min={this.state.action.min}\r\n                            max={this.state.action.max}\r\n                            step={this.state.action.step}\r\n                            onChange={(event, value) => { this.updateAction(this.state.action, value) }}\r\n                        />\r\n                    </Paper>\r\n                )\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Action","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\nimport { Paper, Typography, TableContainer, TableBody, Divider, ListItem, TableCell, TableRow, Button, TextField, FormControlLabel, IconButton, Switch } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { FileCopy, Delete, Close, Add } from '@material-ui/icons'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass DetailSmartObject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            smartobject: null,\r\n            profiles: [],\r\n            enabled: false,\r\n            message: \"\",\r\n            referenceSettings: \"\",\r\n            valueSettings: \"\",\r\n            executeInformation: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects/\" + this.state.id)\r\n        if (resultProfile.error || resultSmartobject.error) {\r\n            this.props.history.push('/smartobject')\r\n        } else {\r\n            this.setState({ smartobject: resultSmartobject.data, profiles: resultProfile.data })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/smartobject')\r\n        }\r\n    }\r\n\r\n    async executeAction(action, settings) {\r\n        let tmp = {}\r\n        for (let index = 0; index < settings.length; index++) {\r\n            let argument = settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmp[argument.id] = value\r\n        }\r\n        let result = await new Request().post({ settings: tmp }).fetch(\"/api/smartobjects/\" + this.state.id + \"/actions/\" + action)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({ executeInformation: JSON.stringify(result.data) })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteSmartobjectSettings(settings) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + settings.smartobject + \"/settings/\" + settings.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertSmartobjectSettings(id, reference, value) {\r\n        let result = await new Request().post({ reference: reference, value: value }).fetch(\"/api/smartobjects/\" + id + \"/settings\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ referenceSettings: \"\", valueSettings: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProfile(smartobject, profile) {\r\n        let result = await new Request().post({idProfile: profile.id, }).fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(smartobject, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.smartobject) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                {this.state.smartobject.reference}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.smartobject.module}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Configuration\r\n                            </Typography>\r\n                            <div style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'row' }}>\r\n                                <TableContainer component={Paper} >\r\n                                    <TableBody>\r\n                                        {this.state.smartobject.settings.map((setting) => (\r\n                                            <TableRow key={setting.id} >\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1'>\r\n                                                        {setting.reference}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ width: '70%' }}>\r\n                                                    <Typography variant='subtitle1'>\r\n                                                        {setting.value.slice(0, 50) + (setting.value.length > 50 ? \" (...)\" : \"\")}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\r\n                                                    <IconButton onClick={() => { navigator.clipboard.writeText(setting.value) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <FileCopy />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\r\n                                                    <IconButton onClick={() => { this.deleteSmartobjectSettings(setting) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        <TableRow key={\"-1\"} >\r\n                                            <TableCell align=\"left\">\r\n                                                <TextField value={this.state.referenceSettings} onChange={(event) => { this.setState({ referenceSettings: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\r\n                                                </TextField>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <TextField value={this.state.valueSettings} onChange={(event) => { this.setState({ valueSettings: event.nativeEvent.target.value }) }} placeholder='Value' style={{ width: '100%' }}>\r\n                                                </TextField>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{ padding: 4 }}>\r\n                                                <IconButton onClick={() => { this.insertSmartobjectSettings(this.state.smartobject.id, this.state.referenceSettings, this.state.valueSettings) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                {\"Action\"}\r\n                            </Typography>\r\n                            {\r\n                                this.state.smartobject.actions.map(action => {\r\n                                    return (\r\n                                        <Paper style={{ padding: 10, marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', width: '100%', maxWidth: '100%' }}>\r\n                                            <Button onClick={() => { this.executeAction(action.id, action.settings) }} variant='outlined' style={{ width: '250px', height: '100%' }} >\r\n                                                {action.name}\r\n                                            </Button>\r\n                                            \r\n                                            {\r\n                                                action.settings.length > 0 ?\r\n                                                    <div style={{ display: 'grid', gridRowGap:'10px', gridTemplateColumns: 'repeat(5,min-content)' , marginTop: 10, marginBottom: 10 }}>\r\n                                                        {\r\n                                                            action.settings.map(setting => {\r\n                                                                return <Action orientation='vertical' setState={this.setState.bind(this)} action={setting} />\r\n                                                            })\r\n                                                        }\r\n                                                    </div> : null\r\n                                            }\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map(profile => {\r\n                                    let state = false\r\n                                    this.state.smartobject.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={\r\n                                                <Switch\r\n                                                    checked={state}\r\n                                                    onChange={() => { \r\n                                                        state ? this.deleteProfile(this.state.smartobject,profile) : this.insertProfile(this.state.smartobject,profile)\r\n                                                    }}\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            } label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        { this.state.message }\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default DetailSmartObject","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewSmartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            module: false,\r\n            reference: \"\",\r\n            enabled: false,\r\n            message: \"\",\r\n            types: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultType = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        if (resultType.error) {\r\n            this.setState({ enabled: true, message: resultType.code + \" : \" + resultType.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                types: resultType.data\r\n            })\r\n        }\r\n    }\r\n\r\n    setModule(id) {\r\n        this.state.types.forEach(pModule => {\r\n            if (pModule.id === id) {\r\n                this.setState({\r\n                    module: pModule\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    updateSettings(key, value) {\r\n        let tmp = {}\r\n        tmp[\"settings-\" + key] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    async add() {\r\n        if (this.state.reference === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : reference is empty\" })\r\n        } else if (this.state.module.name === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : type not selected\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.module.settings.length; index++) {\r\n                let setting = this.state.module.settings[index];\r\n                settings.push({\r\n                    reference: setting.id,\r\n                    value: this.state[\"settings-\" + setting.name] ? this.state[\"settings-\" + setting.name] : \"\"\r\n                })\r\n            }\r\n            let result = await new Request().post({ module: this.state.module.id, reference: this.state.reference, settings: settings }).fetch(\"/api/smartobjects\")\r\n            if (result.error) {\r\n                this.setState({\r\n                    enabled: true,\r\n                    message: result.code + \" : \" + result.message\r\n                })\r\n            } else {\r\n                this.props.history.push('/smartobject')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'row', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }} style={{ width: '150px', marginRight: 10 }} label=\"Reference\" variant=\"outlined\" />\r\n                            <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px' }} >\r\n                                <InputLabel>Module</InputLabel>\r\n                                <Select value={this.state.module.id} onChange={(event) => { this.setModule(event.target.value) }} label=\"Connexion\" >\r\n                                    {\r\n                                        this.state.types.map(pModule => {\r\n                                            return <MenuItem value={pModule.id} >{pModule.name}</MenuItem>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.module ?\r\n                            this.state.module.settings.length === 0 ?\r\n                                null\r\n                                :\r\n                                <div style={{ display: 'flex', flexDirection: 'column', padding: 10 }}>\r\n                                    <Typography variant='body1' style={{ fontSize: 20 }}>Configuration</Typography>\r\n                                    {\r\n                                        this.state.module.settings.map(settings => {\r\n                                            return (\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.updateSettings(settings.name, event.nativeEvent.target.value) }}\r\n                                                    style={{ width: '300px', marginTop: 10 }}\r\n                                                    label={settings.name}\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            : null\r\n                    }\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSmartobject","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\r\nimport * as Colors from '@material-ui/core/colors'\r\n\r\nexport default responsiveFontSizes(createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: Colors.pink[600],\r\n    },\r\n    secondary: {\r\n      main: Colors.lightBlue[500],\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    \"fontWeightLight\": 400,\r\n    \"fontWeightRegular\": 500,\r\n    \"fontWeightMedium\": 600\r\n  },\r\n  shape: {\r\n    borderRadius: 4\r\n  }\r\n}))","import React from 'react'\r\nimport { Typography, Button, ListItemText, ListItem, Divider, List, Paper } from '@material-ui/core'\r\nimport Theme from '../../../Theme'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Security extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            profiles: [],\r\n            selectProfile: '',\r\n            authorizations: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            if (this.state.selectProfile === \"\") {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    profiles: result.data,\r\n                    selectProfile: result.data[0].id\r\n                })\r\n                this.onSelectProfile(result.data[0].id)\r\n            } else {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    profiles: result.data\r\n                })\r\n                this.onSelectProfile(this.state.selectProfile)\r\n            }\r\n        }\r\n    }\r\n\r\n    getColor(type) {\r\n        switch (type) {\r\n            default:\r\n            case 'GET':\r\n                return Theme.palette.success.main\r\n            case 'POST':\r\n                return Theme.palette.error.main\r\n            case 'PUT':\r\n                return Theme.palette.warning.main\r\n            case 'DELETE':\r\n                return Theme.palette.info.main\r\n        }\r\n    }\r\n\r\n    async onSelectProfile(id) {\r\n        this.setState({\r\n            selectProfile: id\r\n        })\r\n        let result = await new Request().get().fetch(\"/api/profiles/\" + id + \"/authorizations\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                authorizations: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async updateSecure(profile, pAuthorization, secure) {\r\n        let result = await new Request().post({ authorization: pAuthorization, secure: secure }).fetch(\"/api/profiles/\" + profile + \"/authorizations\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper style={{ padding: 10, marginBottom: 10, flexDirection: 'row', display: 'flex' }}>\r\n                    {\r\n                        this.state.profiles.map(profile => {\r\n                            return (\r\n                                <Button style={{ marginLeft: 5, marginRight: 5 }} onClick={() => { this.onSelectProfile(profile.id) }} variant={this.state.selectProfile === profile.id ? 'contained' : 'outlined'} >\r\n                                    {\r\n                                        profile.name\r\n                                    }\r\n                                </Button>\r\n                            )\r\n                        })\r\n                    }\r\n                </Paper>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\r\n                        <ListItem >\r\n                            <ListItemText >\r\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.error.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    Refusé\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        {\r\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 0 }).map(authorization => {\r\n                                return (\r\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 1) }}>\r\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\r\n                                                    {authorization.method}\r\n                                                </Typography>\r\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\r\n                                                    {authorization.reference}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\r\n                        <ListItem >\r\n                            <ListItemText >\r\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.success.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    Authorisé\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        {\r\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 1 }).map(authorization => {\r\n                                return (\r\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 0) }} >\r\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\r\n                                                    {authorization.method}\r\n                                                </Typography>\r\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\r\n                                                    {authorization.reference}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Security","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Add } from '@material-ui/icons'\r\nimport { Typography, TablePagination, TableRow, Table, TableCell, TableHead, TableContainer, TableBody, Paper, IconButton } from '@material-ui/core'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Process extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            processs: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/process\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ processs: result.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.processs.slice(this.state.page * 10, (this.state.page + 1) * 10).map((_process) => (\r\n                                <Link to={\"/process/\" + _process.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                    <TableRow hover key={_process.name} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + _process.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {_process.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {_process.description}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {_process.espace.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Link>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/process/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Add />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.processs.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Process","import Request from './Request'\r\n\r\nclass Source {\r\n\r\n    static async getSource(query = []) {\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects\")\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultProcess = await new Request().get().fetch(\"/api/process\")\r\n        if (resultProcess.error) {\r\n            return resultProcess\r\n        } else if (resultModule.error) {\r\n            return resultModule\r\n        } else if (resultSmartobject.error) {\r\n            return resultSmartobject\r\n        } else {\r\n            let sources = []\r\n            if (query.includes(\"smartobject\")) {\r\n                resultSmartobject.data.forEach(smartobject => {\r\n                    let actions = []\r\n                    smartobject.actions.forEach(action => {\r\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\r\n                    })\r\n                    sources.push({ id: smartobject.id, name: \"Smartobject \" + smartobject.reference, actions: actions, type: 'smartobject' })\r\n                })\r\n            }\r\n            if (query.includes(\"module\")) {\r\n                resultModule.data.forEach(pModule => {\r\n                    let actions = []\r\n                    pModule.actions.forEach(action => {\r\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\r\n                    })\r\n                    sources.push({ id: pModule.id, name: \"Module \" + pModule.name, actions: actions, type: 'module' })\r\n                })\r\n            }\r\n            if (query.includes(\"process\")) {\r\n                resultProcess.data.forEach(process => {\r\n                    let actions = []\r\n                    if (process.mode == \"simple\") {\r\n                        actions.push({\r\n                            id: \"auto\",\r\n                            name: process.name,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                    } else {\r\n                        actions.push({\r\n                            id: \"enable\",\r\n                            name: process.name_enable,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                        actions.push({\r\n                            id: \"disable\",\r\n                            name: process.name_disable,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                    }\r\n                    sources.push({ id: process.id, name: \"Processus \" + process.reference, actions: actions, type: 'process' })\r\n                })\r\n            }\r\n            return { data: sources, error: false, code: '', message: '' }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Source","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nclass IconList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            icons: [],\r\n            mode: 'normal'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let result = await fetch(process.env.PUBLIC_URL + '/ressource/icon.json')\r\n            let resultJSON = await result.json()\r\n            this.setState({ icons: resultJSON })\r\n        } catch (error) {\r\n            this.setState({ icons: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={1} style={{ width: '32vw', height: '32vw',  padding: 10, marginRight: 10 }}>\r\n                <Grid item xs={6} >\r\n                    <Paper onClick={() => { this.setState({ mode: 'normal' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star.svg\"} />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={6} >\r\n                    <Paper onClick={() => { this.setState({ mode: 'outline' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star-outline.svg\"} />\r\n                    </Paper>\r\n                </Grid>\r\n                {\r\n\r\n                    this.state.icons.filter(icon => {\r\n                        if (icon.search(\"outline\") != -1 && this.state.mode == \"outline\") {\r\n                            return true\r\n                        } else if (icon.search(\"outline\") == -1 && this.state.mode == \"normal\") {\r\n                            return true\r\n                        } else {\r\n                            return false\r\n                        }\r\n                    }).map(icon => {\r\n                        return (\r\n                            <Grid item xs >\r\n                                <Paper onClick={() => {this.props.onSelect && this.props.onSelect(icon)}} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                                    <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + icon + \".svg\"} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default IconList","import React from 'react'\r\n\r\nimport { Popover, InputAdornment, Checkbox, Typography, Paper, Grid, InputLabel, MenuItem, FormControl, Select, TableBody, TableContainer, TextField, TableCell, Table, TableRow, Switch, Button, IconButton } from '@material-ui/core'\r\n\r\nimport { Delete, List } from '@material-ui/icons'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\nimport IconList from '../../../components/IconList'\r\n\r\nclass New extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            popup: false,\r\n            message: \"\",\r\n            espaces: [],\r\n            reference: '',\r\n            icon: '',\r\n            description: '',\r\n            name: '',\r\n            name_disable: '',\r\n            name_enable: '',\r\n            mode: 'simple',\r\n            module: null,\r\n            espace: false,\r\n            inputReference: \"\",\r\n            inputName: \"\",\r\n            inputType: null,\r\n            inputMode: false,\r\n            inputs: [],\r\n            sources: [],\r\n            isChecked: false,\r\n            action: null,\r\n            source: null,\r\n            arrSources: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\r\n        let resultEspace = await new Request().get().fetch(\"/api/espace\")\r\n        if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else if (resultEspace.error) {\r\n            this.setState({ enabled: true, message: resultEspace.code + \" : \" + resultEspace.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                espaces: resultEspace.data,\r\n                sources: resultSource.data\r\n            })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        let fSource = false\r\n        this.state.sources.forEach(source => {\r\n            if (source.id === id) { fSource = source }\r\n        })\r\n        this.setState({ source: fSource })\r\n    }\r\n\r\n    setAction(id) {\r\n        let fAction = false\r\n        this.state.source.actions.forEach(action => {\r\n            if (action.id === id) { fAction = action }\r\n        })\r\n        this.setState({ action: fAction })\r\n    }\r\n\r\n    setInput() {\r\n        if (this.state.inputReference === \"\") {\r\n            this.setState({ enabled: true, message: \"Reference is missing\" })\r\n            return\r\n        }\r\n        if (this.state.inputType === \"\") {\r\n            this.setState({ enabled: true, message: \"Type is missing\" })\r\n            return\r\n        }\r\n        if (this.state.inputName === \"\") {\r\n            this.setState({ enabled: true, message: \"Name is missing\" })\r\n            return\r\n        }\r\n        let inputs = this.state.inputs\r\n        inputs.push({\r\n            name: this.state.inputName,\r\n            type: this.state.inputType,\r\n            reference: this.state.inputReference,\r\n            enable: this.state.inputMode ? 1 : 0\r\n        })\r\n        this.setState({ inputs: inputs, inputName: \"\", inputType: null, inputReference: \"\", inputMode: false })\r\n    }\r\n\r\n    async set() {\r\n        if (this.state.reference === \"\") {\r\n            this.setState({ enabled: true, message: \"Reference is missing\" })\r\n            return\r\n        }\r\n        if (this.state.icon === \"\") {\r\n            this.setState({ enabled: true, message: \"Icon is missing\" })\r\n            return\r\n        }\r\n        if (this.state.description === \"\") {\r\n            this.setState({ enabled: true, message: \"Description is missing\" })\r\n            return\r\n        }\r\n        if (this.state.espace === false) {\r\n            this.setState({ enabled: true, message: \"Espace is missing\" })\r\n            return\r\n        }\r\n        let body = {\r\n            description: this.state.description,\r\n            nameEnable: this.state.name_enable,\r\n            nameDisable: this.state.name_disable,\r\n            name: this.state.name,\r\n            espace: this.state.espace,\r\n            sources: this.state.arrSources,\r\n            reference: this.state.reference,\r\n            icon: this.state.icon,\r\n            mode: this.state.mode,\r\n            inputs: this.state.inputs\r\n        }\r\n        let result = await new Request().post(body).fetch(\"/api/process\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/process')\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"argument-\" + action.id] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    removeModeArgument(index) {\r\n        let tmp = []\r\n        this.state.inputs.forEach((modeArgument, pIndex) => {\r\n            if (index !== pIndex) { tmp.push(modeArgument) }\r\n        })\r\n        this.setState({ inputs: tmp })\r\n    }\r\n\r\n    confirmationModule() {\r\n        if (this.state.action === false) {\r\n            this.setState({ enabled: true, message: \"Action missing\" })\r\n            return\r\n        }\r\n        if (this.state.source.actions.length === 0) {\r\n            this.setState({ enabled: true, message: \"Module missing\" })\r\n            return\r\n        }\r\n        let settings = []\r\n        for (let index = 0; index < this.state.action.settings.length; index++) {\r\n            let setting = this.state.action.settings[index]\r\n            let value = this.state[\"argument-\" + setting.id]\r\n            if (value == undefined) {\r\n                value = setting.default\r\n            }\r\n            settings.push({ reference: setting.id, value: value })\r\n        }\r\n        let action = {\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: settings,\r\n            enable: this.state.isChecked\r\n        }\r\n        let tmp = this.state.arrSources\r\n        tmp.push(action)\r\n        this.setState({ arrSources: tmp, action: null, source: null, isChecked: false })\r\n    }\r\n\r\n    removeSource(index) {\r\n        let tmp = []\r\n        this.state.arrSources.forEach((action, pIndex) => {\r\n            if (index !== pIndex) { tmp.push(action) }\r\n        })\r\n        this.setState({ arrSources: [] }, () => {\r\n            this.setState({ arrSources: tmp })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ justifyContent: 'start', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '20%', margin: 10 }}\r\n                            label=\"Réference\"\r\n                            value={this.state.reference}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ icon: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '20%', margin: 10 }}\r\n                            label=\"Icon\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.icon}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                            <List />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\r\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ icon: icon, popup: false }) }} />\r\n                        </Popover>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ description: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '50%', margin: 10 }}\r\n                            label=\"Description\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <FormControl variant=\"outlined\" style={{ margin: 10, width: '150px' }} >\r\n                            <InputLabel>Espace</InputLabel>\r\n                            <Select onChange={(event) => { this.setState({ espace: event.target.value }) }} label=\"Espace\" >\r\n                                {\r\n                                    this.state.espaces.map(espace => {\r\n                                        return <MenuItem value={espace.id} >{espace.name}</MenuItem>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>\r\n                            Mode\r\n                        </Typography>\r\n                        <Grid style={{ margin: 10 }} container alignItems=\"center\" >\r\n                            <Grid item>\r\n                                <Typography variant='subtitle1'>Simple</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch checked={this.state.mode === 'switch'} onChange={(event, checked) => { this.setState({ mode: checked ? 'switch' : 'simple' }) }} name=\"checkedC\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant='subtitle1'>Switch</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\r\n                            {\r\n                                this.state.mode === 'switch' ?\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <TextField\r\n                                            onChange={(event) => { this.setState({ name_enable: event.nativeEvent.target.value }) }}\r\n                                            style={{ width: '45%', margin: 10 }}\r\n                                            label=\"Texte actif\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            onChange={(event) => { this.setState({ name_disable: event.nativeEvent.target.value }) }}\r\n                                            style={{ width: '45%', margin: 10 }}\r\n                                            label=\"Texte passif\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </div> :\r\n                                    <div >\r\n                                        <TextField\r\n                                            onChange={(event) => { this.setState({ name: event.nativeEvent.target.value }) }}\r\n                                            style={{ margin: 10, width: '45%' }}\r\n                                            label=\"Texte\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </div>\r\n                            }\r\n                        </TableContainer>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>\r\n                            Argument\r\n                        </Typography>\r\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\r\n                            <TextField\r\n                                value={this.state.inputReference}\r\n                                onChange={(event) => { this.setState({ inputReference: event.nativeEvent.target.value }) }}\r\n                                style={{ width: '30%', margin: 10 }}\r\n                                label=\"Reference\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <TextField\r\n                                value={this.state.inputName}\r\n                                onChange={(event) => { this.setState({ inputName: event.nativeEvent.target.value }) }}\r\n                                style={{ width: '30%', margin: 10 }}\r\n                                label=\"Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <FormControl variant=\"outlined\" style={{ margin: 10, width: '25%' }} >\r\n                                <InputLabel>Type</InputLabel>\r\n                                <Select value={this.state.inputType} onChange={(event) => { this.setState({ inputType: event.target.value }) }} label=\"Type\" >\r\n                                    <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\r\n                                    <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\r\n                                    <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\r\n                                    <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            {\r\n                                this.state.mode === 'switch' ?\r\n                                    <Checkbox onChange={(event, checked) => { this.setState({ inputMode: checked }) }} /> : null\r\n                            }\r\n                            <Button style={{ margin: 10 }} onClick={() => { this.setInput() }} variant='outlined'>\r\n                                Ajouter\r\n                            </Button>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        this.state.inputs.map((modeArgument, index) => {\r\n                                            return (\r\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {modeArgument.reference}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {modeArgument.name}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {modeArgument.type}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    {\r\n                                                        this.state.mode === 'switch' ?\r\n                                                            <TableCell align=\"center\">\r\n                                                                <Checkbox disabled defaultChecked={modeArgument.mode} />\r\n                                                            </TableCell> : null\r\n                                                    }\r\n                                                    <TableCell align=\"right\">\r\n                                                        <IconButton onClick={() => { this.removeModeArgument(index) }}>\r\n                                                            <Delete />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>Action </Typography>\r\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        this.state.arrSources.map((action, index) => {\r\n                                            return (\r\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {action.source.name}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {action.action.name}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {\r\n                                                                action.arguments.map(argument => {\r\n                                                                    return (\r\n                                                                        <Typography variant='body1'>\r\n                                                                            {argument.reference + \" : \" + argument.value}\r\n                                                                        </Typography>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    {this.state.mode === 'simple' ? null : <TableCell align=\"center\">\r\n                                                        <Checkbox disabled defaultChecked={action.enable} />\r\n                                                    </TableCell>}\r\n                                                    <TableCell align=\"center\">\r\n                                                        <IconButton onClick={() => { this.removeSource(index) }}>\r\n                                                            <Delete />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <TableRow >\r\n                                        <TableCell align=\"left\" style={{ minWidth: '30%' }}>\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel>Source</InputLabel>\r\n                                                <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\r\n                                                    {\r\n                                                        this.state.sources.map(source => {\r\n                                                            return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                            {\r\n                                                this.state.source ?\r\n                                                    <FormControl fullWidth >\r\n                                                        <InputLabel>Action</InputLabel>\r\n                                                        <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\r\n                                                            {\r\n                                                                this.state.source.actions.map(action => {\r\n                                                                    return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                    : null\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                            <div>\r\n                                            </div>\r\n                                            {\r\n                                                this.state.action ?\r\n                                                    this.state.action.settings.map(argument => {\r\n                                                        return (\r\n                                                            <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\r\n                                                                <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\r\n                                                            </div>\r\n                                                        )\r\n                                                    }) : null\r\n                                            }\r\n                                        </TableCell>\r\n                                        {this.state.mode === 'simple' ? null :\r\n                                            <TableCell align=\"center\">\r\n                                                <Checkbox onChange={(event, checked) => { this.setState({ isChecked: checked }) }} />\r\n                                            </TableCell>\r\n                                        }\r\n                                    </TableRow>\r\n                                    <Button style={{ margin: 10 }} onClick={() => { this.confirmationModule() }} variant='outlined'>\r\n                                        Ajouter\r\n                                    </Button>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                    <Button style={{ margin: 10 }} onClick={() => { this.set() }} variant='outlined'>Save</Button>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}> {this.state.message} </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default New","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\n\r\nimport { MenuItem, Switch, ListItem, FormControlLabel, Checkbox, InputLabel, IconButton, TableHead, TextField, Typography, Paper, Divider, TableBody, TableContainer, TableCell, Table, TableRow, FormControl, Select, Button } from '@material-ui/core'\r\n\r\nimport { Check, Close, Delete, Autorenew, Add } from '@material-ui/icons'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nclass NewProcess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            enabled: false,\r\n            message: \"\",\r\n            process: null,\r\n            profiles: [],\r\n            executeInformation: \"\",\r\n            referenceInput: \"\",\r\n            nameInput: \"\",\r\n            typeInput: null,\r\n            modeInput: 0,\r\n            action: null,\r\n            source: null,\r\n            isChecked: false,\r\n            sources: []\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\r\n        let resultEspace = await new Request().get().fetch(\"/api/espace\")\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let result = await new Request().get().fetch(\"/api/process/\" + this.state.id)\r\n        if (resultEspace.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultEspace.code + \" : \" + resultEspace.message\r\n            })\r\n        } else if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                process: result.data,\r\n                profiles: resultProfile.data,\r\n                espaces: resultEspace.data,\r\n                sources: resultSource.data\r\n            })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        let fSource = false\r\n        this.state.sources.forEach(source => {\r\n            if (source.id === id) { fSource = source }\r\n        })\r\n        this.setState({ source: fSource })\r\n    }\r\n\r\n    setAction(id) {\r\n        let fAction = false\r\n        this.state.source.actions.forEach(action => {\r\n            if (action.id === id) { fAction = action }\r\n        })\r\n        this.setState({ action: fAction })\r\n    }\r\n\r\n    async addSource() {\r\n        if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Action missing\" })\r\n            return\r\n        }\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Source missing\" })\r\n            return\r\n        }\r\n        let settings = []\r\n        for (let index = 0; index < this.state.action.settings.length; index++) {\r\n            let setting = this.state.action.settings[index]\r\n            let value = this.state[\"argument-\" + setting.id]\r\n            if (value == undefined) {\r\n                value = setting.default\r\n            }\r\n            settings.push({ reference: setting.id, value: value })\r\n        }\r\n\r\n        let action = {\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: settings,\r\n            enable: this.state.isChecked\r\n        }\r\n        let result = await new Request().post(action).fetch(\"/api/process/\" + this.state.id + \"/actions\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteSource(idsource) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + this.state.id + \"/actions/\" + idsource)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/process')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async executeAction() {\r\n        let tmp = {}\r\n        for (let index = 0; index < this.state.process.inputs.length; index++) {\r\n            let input = this.state.process.inputs[index];\r\n            let value = this.state[\"argument-\" + input.id]\r\n            if (value == undefined) {\r\n                value = input.default\r\n            }\r\n            tmp[input.reference] = value\r\n        }\r\n        let result = await new Request().post({ inputs: tmp }).fetch(\"/api/process/\" + this.state.process.id + \"/execute\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({ executeInformation: JSON.stringify(result.data) })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProfile(process, profile) {\r\n        let result = await new Request().post({idProfile: profile.id, }).fetch(\"/api/process/\" + process.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(process, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + process.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProcessInput(input) {\r\n        let result = await new Request().delete({}).fetch(\"/api/process/\" + this.state.process.id + \"/inputs/\" + input.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProcessInput() {\r\n        if (this.state.typeInput == null) {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : type is empty\" })\r\n            return\r\n        }\r\n        let result = await new Request().post({\r\n            reference: this.state.referenceInput,\r\n            name: this.state.nameInput,\r\n            type: this.state.typeInput,\r\n            enable: this.state.modeInput\r\n        }).fetch(\"/api/process/\" + this.state.process.id + \"/inputs\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({\r\n                referenceSettings: \"\",\r\n                valueSettings: \"\",\r\n                referenceInput: \"\",\r\n                nameInput: \"\",\r\n                modeInput: 0\r\n            })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"argument-\" + action.id] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.process) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 25 }}>\r\n                        <Typography variant='h4'>\r\n                            {this.state.process.reference}\r\n                        </Typography>\r\n                        <Typography variant='subtitle1'>\r\n                            {this.state.process.espace.name}\r\n                        </Typography>\r\n                        <Typography variant='subtitle1'>\r\n                            {this.state.process.description}\r\n                        </Typography>\r\n                        <Divider style={{ marginTop: 10, marginBottom: 10 }} />\r\n                        <div  >\r\n                            <Typography variant='h5' style={{ marginBottom: 5 }}>Action</Typography>\r\n                            {\r\n                                this.state.process.mode == \"simple\" ?\r\n                                    this.state.process.mode === \"simple\" ?\r\n                                        <Button style={{ alignSelf: 'center', marginLeft: 10, marginTop: 10 }} variant={this.state.process.enable === 2 ? \"contained\" : \"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" startIcon={<Autorenew />}>\r\n                                            {this.state.process.name}\r\n                                        </Button> : null\r\n                                    :\r\n                                    <div style={{ flexDirection: 'column', display: 'flex', width: '20%' }}>\r\n                                        {\r\n                                            this.state.process.enable == 1 ?\r\n                                                <Button style={{ marginTop: 10 }} variant={\"contained\"} onClick={() => { this.executeAction() }} color=\"default\" startIcon={<Check />}>\r\n                                                    {this.state.process.name_enable}\r\n                                                </Button> :\r\n                                                <Button style={{ marginTop: 10 }} variant={\"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" startIcon={<Close />}>\r\n                                                    {this.state.process.name_disable}\r\n                                                </Button>\r\n                                        }\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\r\n                            {\r\n                                this.state.process.inputs.filter(input => {\r\n                                    return input.enable == this.state.process.enable\r\n                                }).map(input => {\r\n                                    return <Action setState={this.setState.bind(this)} action={input} orientation='vertical' />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div style={{ marginTop: 15 }} >\r\n                            <Typography variant='h5'>\r\n                                Input\r\n                            </Typography>\r\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.process.inputs.map(input =>\r\n                                                    <TableRow key={input.id}>\r\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.reference}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.name}</Typography> </TableCell>\r\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.type}</Typography></TableCell>\r\n                                                        <TableCell align=\"center\"><Typography variant='body1'>{input.enable}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\">\r\n                                                            <IconButton onClick={() => { this.deleteProcessInput(input) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                                <Delete />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            <TableRow key={-1}>\r\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\r\n                                                    <TextField value={this.state.referenceInput} onChange={(event) => { this.setState({ referenceInput: event.nativeEvent.target.value }) }} placeholder='Reference' style={{ width: '100%' }}>\r\n                                                    </TextField>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\r\n                                                    <TextField value={this.state.nameInput} onChange={(event) => { this.setState({ nameInput: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\r\n                                                    </TextField>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ width: '20%' }}>\r\n                                                    <FormControl variant=\"outlined\" style={{ width: '100%' }} >\r\n                                                        <InputLabel>Type</InputLabel>\r\n                                                        <Select value={this.state.typeInput} onChange={(event) => { this.setState({ typeInput: event.target.value }) }} label=\"Type\" >\r\n                                                            <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\r\n                                                            <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\r\n                                                            <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\r\n                                                            <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\" style={{ width: '10%' }}>\r\n                                                    {\r\n                                                        this.state.process.mode === 'switch' ?\r\n                                                            <Checkbox value={this.state.modeInput == 0} onChange={(event, checked) => { this.setState({ modeInput: checked ? 1 : 0 }) }} /> : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" >\r\n                                                    <IconButton onClick={() => { this.insertProcessInput() }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: 15 }} >\r\n                            <Typography variant='h5'>\r\n                                Module\r\n                            </Typography>\r\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Module</Typography></TableCell>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Type</Typography></TableCell>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Action</Typography></TableCell>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Arguments</Typography></TableCell>\r\n                                                <TableCell align=\"center\"><Typography variant='body1'>Mode</Typography></TableCell>\r\n                                                <TableCell align=\"left\"></TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.process.actions.map(action =>\r\n                                                    <TableRow key={action.id}>\r\n                                                        <TableCell align=\"left\" style={{ width: '15%' }}><Typography variant='body1'>{action.object}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.type}</Typography> </TableCell>\r\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.action}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}>{action.arguments.map(argument => {\r\n                                                            return <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\r\n                                                        })}</TableCell>\r\n                                                        <TableCell align=\"center\" style={{ width: '15%' }}>{action.enable === 0 ? <Close /> : action.enable === 1 ? <Check /> : <Autorenew />}</TableCell>\r\n                                                        <TableCell align=\"left\">\r\n                                                            <IconButton onClick={() => { this.deleteSource(action.id) }}>\r\n                                                                <Delete />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                                <TableContainer style={{ marginTop: 15 }} component={Paper}>\r\n                                    <Table>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel>Source</InputLabel>\r\n                                                    <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\r\n                                                        {\r\n                                                            this.state.sources.map(source => {\r\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\r\n                                                {\r\n                                                    this.state.source ?\r\n                                                        <FormControl fullWidth >\r\n                                                            <InputLabel>Action</InputLabel>\r\n                                                            <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\r\n                                                                {\r\n                                                                    this.state.source.actions.map(action => {\r\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\" style={{ width: '20%' }}>\r\n                                                {\r\n                                                    this.state.action ?\r\n                                                        this.state.action.settings.map(argument => {\r\n                                                            return (\r\n                                                                <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\r\n                                                                    <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\r\n                                                                </div>\r\n                                                            )\r\n                                                        }) : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\r\n                                                {\r\n                                                    this.state.process.mode === 'switch' ?\r\n                                                        <Checkbox onChange={(event, isChecked) => { this.setState({ isChecked: isChecked }) }} /> : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\r\n                                                <IconButton onClick={() => { this.addSource() }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map(profile => {\r\n                                    let state = false\r\n                                    this.state.process.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={<Switch\r\n                                                checked={state}\r\n                                                onChange={() => { \r\n                                                    state ? this.deleteProfile(this.state.process,profile) : this.insertProfile(this.state.process,profile)\r\n                                                }}\r\n                                                color=\"primary\"\r\n                                            />} label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.process.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        { this.state.message }\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewProcess","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { IconButton, Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\r\nimport { Add, Delete, FileCopy, PlayArrow, Edit, Pause } from '@material-ui/icons'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Theme from '../../../Theme'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Routine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            loading: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            routines: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/routines\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                loading: false,\r\n                routines: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/routines/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async duplicate(id) {\r\n        let result = await new Request().put().fetch(\"/api/routines/\" + id + \"/duplicate\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateStatus(id, status) {\r\n        let result = await new Request().put({ status: status }).fetch(\"/api/routines/\" + id + \"/status\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.routines.slice(this.state.page * 10, (this.state.page + 1) * 10).map((routine) => (\r\n                                <TableRow key={routine.id} >\r\n                                    <TableCell align=\"left\">\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + routine.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {routine.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <div style={{ flex: 1, flexDirection: 'row', display: 'flex', alignContent: 'center', alignItems: 'center', justifyContent: 'end' }}>\r\n                                            <IconButton onClick={() => { this.updateStatus(routine.id, routine.status === 0 ? 1 : 0) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2, backgroundColor: routine.status === 1 ? Theme.palette.success.main : null }}>\r\n                                                {routine.status === 0 ? <PlayArrow /> : <Pause />}\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.props.history.push('/routine/' + routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.duplicate(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <FileCopy />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.delete(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                        <Link to=\"/routine/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <IconButton style={{ borderRadius: 0 }}>\r\n                                <Add />\r\n                            </IconButton>\r\n                        </Link>\r\n                    </Paper>\r\n                    <TablePagination component=\"div\" count={this.state.routines.length} rowsPerPage={10} page={this.state.page} rowsPerPageOptions={[]} onChangePage={(event, page) => { this.setState({ page: page }) }} />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routine","import React from 'react'\r\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\r\nimport { Save, Add, List } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Source from '../../../utils/Source'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Theme from '../../../Theme'\r\nimport IconList from '../../../components/IconList'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass NewRoutine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            routine: null,\r\n            sources: [],\r\n            modalTrigger: false,\r\n            modalEffect: false,\r\n            routine: {\r\n                watch: 1,\r\n                triggers: [],\r\n                effects: [],\r\n                name: \"\",\r\n                icon: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\"])\r\n        if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({ sources: resultSource.data })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) { this.setState({ action: action }) }\r\n        })\r\n    }\r\n\r\n    updateIcon(icon) {\r\n        let routine = this.state.routine\r\n        routine.icon = icon\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateName(name) {\r\n        let routine = this.state.routine\r\n        routine.name = name\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateWatch(watch) {\r\n        let routine = this.state.routine\r\n        routine.watch = watch\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    addTrigger() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.triggers.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings,\r\n                result: this.state.result,\r\n                statement: this.state.statement,\r\n                expected: this.state.expected\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalTrigger: false,\r\n                action: null,\r\n                source: null,\r\n                result: null,\r\n                statement: null,\r\n                expected: null\r\n            })\r\n        }\r\n    }\r\n\r\n    addEffect() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.effects.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalEffect: false,\r\n                action: null,\r\n                source: null\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTrigger(pIndex) {\r\n        let routine = this.state.routine\r\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\r\n        routine.triggers = triggers\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    removeEffect(pIndex) {\r\n        let routine = this.state.routine\r\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\r\n        routine.effects = effects\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    async save() {\r\n        if(this.state.routine.name.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing name\" })\r\n        } else if(this.state.routine.icon.length == 0 ) {\r\n            this.setState({ enabled: true, message: \"Missing icon\" })\r\n        } else if(this.state.routine.effects.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing effect\" })\r\n        } else {\r\n            let result = await new Request().put({\r\n                name: this.state.routine.name,\r\n                watch: this.state.routine.watch,\r\n                icon: this.state.routine.icon,\r\n                triggers: this.state.routine.triggers,\r\n                effects: this.state.routine.effects\r\n            }).fetch(\"/api/routines\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/routine')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.routine) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\r\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }} \r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                                <List />\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                ></TextField>\r\n                            \r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\r\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon)}} />\r\n                        </Popover>\r\n                            </div>\r\n                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15 }}>\r\n                                    <div style={{ display: 'flex', flex: 6, justifyContent: 'center' }}>\r\n                                        <Slider\r\n                                            defaultValue={0}\r\n                                            valueLabelDisplay=\"auto\"\r\n                                            orientation={'horizontal'}\r\n                                            min={0}\r\n                                            max={1440}\r\n                                            step={1}\r\n                                            value={this.state.routine.watch}\r\n                                            onChange={(event, value) => { this.updateWatch(value) }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\r\n\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\r\n                                    this.state.routine.triggers.map((trigger, index) => {\r\n                                        return (\r\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                <div  >\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\r\n                                                    {\r\n                                                        trigger.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    trigger.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                                {\r\n                                                    trigger.result && trigger.statement && trigger.expected ?\r\n                                                        <div>\r\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\r\n                                    {\r\n                                        this.state.routine.effects.map((effect, index) => {\r\n                                            return (\r\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\r\n                                                    {\r\n                                                        effect.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    effect.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\r\n                        <Fade in={this.state.modalTrigger} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New Trigger\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <Action setState={this.setState.bind(this)} action={setting} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                                <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                                    <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                                </div>\r\n                                                <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\r\n                                                    <InputLabel>Condition</InputLabel>\r\n                                                    <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\r\n                                                        <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\r\n                                                        <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\r\n                                                        <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\r\n                                                        <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                                    <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                                </div>\r\n                                            </div>\r\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\r\n                        <Fade in={this.state.modalEffect} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New effect\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <Action setState={this.setState.bind(this)} action={setting} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewRoutine","import React from 'react'\r\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\r\nimport { Save, Add, List } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\nimport Action from '../../../components/Action'\r\nimport Theme from '../../../Theme'\r\nimport IconList from '../../../components/IconList'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass NewRoutine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            popup: false,\r\n            id: props.match.params.id,\r\n            enabled: false,\r\n            message: \"\",\r\n            routine: null,\r\n            sources: [],\r\n            modalTrigger: false,\r\n            modalEffect: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\"])\r\n        let result = await new Request().get().fetch(\"/api/routines/\" + this.state.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({ routine: result.data, sources: resultSource.data })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) { this.setState({ action: action }) }\r\n        })\r\n    }\r\n\r\n    updateIcon(icon) {\r\n        let routine = this.state.routine\r\n        routine.icon = icon\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateName(name) {\r\n        let routine = this.state.routine\r\n        routine.name = name\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateWatch(watch) {\r\n        let routine = this.state.routine\r\n        routine.watch = watch\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    addTrigger() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.triggers.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings,\r\n                result: this.state.result,\r\n                statement: this.state.statement,\r\n                expected: this.state.expected\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalTrigger: false,\r\n                action: null,\r\n                source: null,\r\n                result: null,\r\n                statement: null,\r\n                expected: null\r\n            })\r\n        }\r\n    }\r\n\r\n    addEffect() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.effects.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalEffect: false,\r\n                action: null,\r\n                source: null\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTrigger(pIndex) {\r\n        let routine = this.state.routine\r\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\r\n        routine.triggers = triggers\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    removeEffect(pIndex) {\r\n        let routine = this.state.routine\r\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\r\n        routine.effects = effects\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.routine.name.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing name\" })\r\n        } else if (this.state.routine.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing icon\" })\r\n        } else if (this.state.routine.effects.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing effect\" })\r\n        } else {\r\n            let result = await new Request().post({\r\n                name: this.state.routine.name,\r\n                watch: this.state.routine.watch,\r\n                icon: this.state.routine.icon,\r\n                triggers: this.state.routine.triggers,\r\n                effects: this.state.routine.effects\r\n            }).fetch('/api/routines/' + this.state.id)\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/routine/')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.routine) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\r\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }} \r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                                <List />\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                ></TextField>\r\n                            \r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\r\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon)}} />\r\n                        </Popover>\r\n                            \r\n                            </div>\r\n                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15 }}>\r\n                                    <div style={{ display: 'flex', flex: 6, justifyContent: 'center' }}>\r\n                                        <Slider\r\n                                            defaultValue={0}\r\n                                            valueLabelDisplay=\"auto\"\r\n                                            orientation={'horizontal'}\r\n                                            min={0}\r\n                                            max={1440}\r\n                                            step={1}\r\n                                            value={this.state.routine.watch}\r\n                                            onChange={(event, value) => { this.updateWatch(value) }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\r\n\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\r\n                                    this.state.routine.triggers.map((trigger, index) => {\r\n                                        return (\r\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                <div  >\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\r\n                                                    {\r\n                                                        trigger.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    trigger.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                                {\r\n                                                    trigger.result && trigger.statement && trigger.expected ?\r\n                                                        <div>\r\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\r\n                                    {\r\n                                        this.state.routine.effects.map((effect, index) => {\r\n                                            return (\r\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\r\n                                                    {\r\n                                                        effect.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    effect.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\r\n                        <Fade in={this.state.modalTrigger} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New Trigger\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <Action setState={this.setState.bind(this)} action={setting} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\r\n                                            <InputLabel>Condition</InputLabel>\r\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\r\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\r\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\r\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\r\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\r\n                        <Fade in={this.state.modalEffect} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New effect\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <Action setState={this.setState.bind(this)} action={setting} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewRoutine","import React from 'react'\r\nimport { Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\r\nimport md5 from 'md5'\r\nimport { Link } from \"react-router-dom\"\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Module extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            modules: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        if (resultModule.error) {\r\n            this.setState({ enabled: true, message: resultModule.code + \" : \" + resultModule.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Identifiant\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.modules.slice(this.state.page * 10, (this.state.page + 1) * 10).map((pmodule) => (\r\n                                <Link to={\"/module/\" + md5(pmodule.id)} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                    <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {pmodule.id}\r\n                                            </Typography>\r\n                                        </TableCell><TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {pmodule.name}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Link>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignContent: 'center', alignItems: 'center' }}>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.modules.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Module","import React from 'react'\r\nimport md5 from 'md5'\r\nimport JSONPretty from 'react-json-pretty'\r\n\r\nimport { Alert } from '@material-ui/lab'\r\nimport { Close } from '@material-ui/icons'\r\nimport { Paper, Typography, Divider, Button, IconButton } from '@material-ui/core'\r\n\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Detail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hashId: props.match.params.id,\r\n            module: null,\r\n            loading: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            executeInformation: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/configurations/module\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n            this.props.history.push('/module')\r\n        } else {\r\n            let _module = false\r\n            result.data.forEach(pModule => {\r\n                if (md5(pModule.id) == this.state.hashId) {\r\n                    _module = pModule\r\n                }\r\n            })\r\n            if (_module) {\r\n                this.setState({\r\n                    module: _module\r\n                })\r\n            } else {\r\n                this.props.history.push('/module')\r\n            }\r\n        }\r\n    }\r\n\r\n    async executeAction(action, settings) {\r\n        let tmp = {}\r\n        for (let index = 0; index < settings.length; index++) {\r\n            let argument = settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmp[argument.id] = value\r\n        }\r\n        let result = await new Request().post({ settings: tmp, reference: this.state.module.reference }).fetch(\"/api/modules/\" + md5(this.state.module.id) + \"/actions/\" + action)\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({\r\n                    executeInformation: JSON.stringify(result.data)\r\n                })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.module) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                {this.state.module.id}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.module.module}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            {\r\n                                this.state.module.actions.map(action => {\r\n                                    return (\r\n                                        <Paper style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', padding: 10 }}>\r\n                                            <Button onClick={() => { this.executeAction(action.id, action.settings) }} variant='outlined' style={{ width: '250px', height: '100%' }} >\r\n                                                {action.name}\r\n                                            </Button>\r\n                                            {\r\n                                                action.settings.length > 0 ?\r\n                                                    <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\r\n                                                        {\r\n                                                            action.settings.map(setting => {\r\n                                                                return <Action setState={this.setState.bind(this)} action={setting} />\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                    : null\r\n                                            }\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        { this.state.message }\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail","import React from 'react'\r\nimport { Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead } from '@material-ui/core'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Configuration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pageSmartobject: 0,\r\n            pageModule: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            modules: [],\r\n            smartobjects: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        if (resultModule.error) {\r\n            this.setState({ enabled: true, message: resultModule.code + \" : \" + resultModule.message })\r\n        } else if (resultSmartobject.error) {\r\n            this.setState({ enabled: true, message: resultSmartobject.code + \" : \" + resultSmartobject.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data, smartobjects: resultSmartobject.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Identifiant\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.smartobjects.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\r\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.id}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignContent: 'center', alignItems: 'center' }}>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.smartobjects.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.pageSmartobject}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ pageSmartobject: page }) }}\r\n                    />\r\n                </div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Identifiant\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.modules.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\r\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.id}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignContent: 'center', alignItems: 'center' }}>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.modules.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.pageModule}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ pageModule: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Configuration","import React from 'react'\r\nimport { Add } from '@material-ui/icons'\r\nimport { Typography, Paper, TableBody, TableContainer , TableHead ,TableCell, Table, TableRow, TablePagination, IconButton  } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\"\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Widget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            widgets: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/widgets\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", widgets: result.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.widgets.slice(this.state.page * 10, (this.state.page + 1) * 10).map((widget) => (\r\n                                <Link to={\"/widget/\" + widget.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                    <TableRow hover key={widget.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + widget.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {widget.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map(content => {\r\n                                                return content.content.split(\"\\n\").map(_content => {\r\n                                                    return (\r\n                                                        <Typography variant='body1' style={{ fontWeight: content.type.reference == 'title' ? 'bold' : 'normal' }}>\r\n                                                            {_content}\r\n                                                        </Typography>\r\n                                                    )\r\n                                                })\r\n                                            })}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {widget.icon}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Link>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/widget/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Add />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.widgets.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Widget","import React from 'react'\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nimport { Popover, InputAdornment, TableRow, Table, MenuItem, FormControl, TableCell, IconButton, Typography, InputLabel, Button, TextField, Paper, TableBody, TableContainer, TableHead, Divider, Select } from '@material-ui/core'\r\nimport { Close, Add, List } from '@material-ui/icons'\r\nimport IconList from '../../../components/IconList'\r\n\r\nclass NewWidget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            popup: false,\r\n            content: null,\r\n            description: \"\",\r\n            image: \"\",\r\n            sources: [],\r\n            contentSources: [],\r\n            source: null,\r\n            action: null,\r\n            widgetReference: \"\",\r\n            reference: \"\",\r\n            icon: \"\",\r\n            type: \"title\",\r\n            types: [],\r\n            contents: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/smartobjects\")\r\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\r\n        let resultSource = await Source.getSource([\"smartobject\",\"module\"])\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else if (resultConfiguration.error) {\r\n            this.setState({ enabled: true, message: resultConfiguration.code + \" : \" + resultConfiguration.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", loading: false, sources: resultSource.data, type: false, types: resultConfiguration.data.contents.types })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) {\r\n                this.setState({ action: action })\r\n            }\r\n        })\r\n    }\r\n\r\n    setType(id) {\r\n        this.state.types.map(type => {\r\n            if (type.id == id) {\r\n                this.setState({ type: type })\r\n            }\r\n        })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.widgetReference.length == 0 || this.state.contentSources.length == 0 || this.state.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let authorization = localStorage.getItem(\"authorization\")\r\n        let server = localStorage.getItem(\"server\")\r\n        let result = await fetch(server + \"/api/widgets\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': authorization\r\n            },\r\n            body: JSON.stringify({\r\n                reference: this.state.widgetReference,\r\n                sources: this.state.contentSources,\r\n                contents: this.state.contents,\r\n                icon: this.state.icon\r\n            })\r\n        })\r\n        let resultJSON = await result.json()\r\n        if (resultJSON.error) {\r\n            this.setState({ enabled: true, message: resultJSON.code + \" : \" + resultJSON.message })\r\n        } else {\r\n            this.props.history.push('/widget')\r\n        }\r\n    }\r\n\r\n\r\n    insertContent() {\r\n        let contents = this.state.contents\r\n        contents.push({ type: this.state.type, content: this.state.content })\r\n        this.setState({ contents: contents, content: \"\" })\r\n    }\r\n\r\n    insertSource() {\r\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let find = false\r\n        let contentSources = this.state.contentSources\r\n        contentSources.forEach(contentSource => {\r\n            if (contentSource.reference == this.state.reference) {\r\n                find = true\r\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\r\n            }\r\n        })\r\n        if (find) {\r\n            return\r\n        }\r\n        let tmpsettings = []\r\n        let action = this.state.action\r\n        for (let index = 0; index < action.settings.length; index++) {\r\n            let argument = action.settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmpsettings.push({ reference: argument.id, value: value })\r\n        }\r\n        contentSources.push({\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: tmpsettings,\r\n            reference: this.state.reference\r\n        })\r\n        this.setState({\r\n            contentSources: contentSources,\r\n            action: null,\r\n            source: null,\r\n            reference: \"\"\r\n        })\r\n    }\r\n\r\n    delete(index) {\r\n        let contents = []\r\n        this.state.contents.forEach((content, pindex) => {\r\n            if (pindex != index) { contents.push(content) }\r\n        })\r\n        this.setState({ contents: contents })\r\n    }\r\n\r\n    deleteContent(index) {\r\n        let contentSources = []\r\n        this.state.contentSources.forEach((content, pindex) => {\r\n            if (pindex != index) { contentSources.push(content) }\r\n        })\r\n        this.setState({ contentSources: contentSources })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                    <div style={{ padding: 10 }}>\r\n                        <Typography variant='h4' > Widget </Typography>\r\n                    </div>\r\n                    <Divider />\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ widgetReference: event.target.value }) }}\r\n                            multiline\r\n                            value={this.state.widgetReference}\r\n                            label=\"Reference\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            style={{ marginLeft: 10 }}\r\n                            onChange={(event) => { this.setState({ icon: event.target.value }) }}\r\n                            multiline\r\n                            value={this.state.icon}\r\n                            label=\"Icon\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                            <List />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ popup: false, icon: icon }) }} />\r\n\r\n                        </Popover>\r\n                    </div>\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <Typography variant='h5' > Source </Typography>\r\n                        <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align='left'>\r\n                                                <Typography variant='subtitle1'> Source </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='subtitle1'> Argument </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            this.state.contentSources.map((contentSource, index) => {\r\n                                                return (\r\n                                                    <TableRow >\r\n                                                        <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                            <Typography variant='subtitle1'> {contentSource.reference} </Typography>\r\n                                                            <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\r\n                                                            <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"left\">\r\n                                                            <Typography variant='subtitle1'>\r\n                                                                {JSON.stringify(contentSource.arguments)}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">\r\n                                                            <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\r\n                                                                <Close />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        <TableRow  >\r\n                                            <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.setState({ reference: event.target.value }) }}\r\n                                                    style={{ width: '100%' }}\r\n                                                    multiline\r\n                                                    value={this.state.reference}\r\n                                                    label=\"Reference\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                                <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                    <InputLabel>Source</InputLabel>\r\n                                                    <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                                        {\r\n                                                            this.state.sources.map(source => {\r\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                {\r\n                                                    this.state.source ?\r\n                                                        <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                            <InputLabel>Action</InputLabel>\r\n                                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                                {\r\n                                                                    this.state.source.actions.map(action => {\r\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{ width: '40%' }}>\r\n                                                {\r\n                                                    this.state.action && this.state.action.settings.length > 0 ?\r\n                                                        <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\r\n                                                            <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\r\n                                                                {\r\n                                                                    this.state.action.settings.map(setting => {\r\n                                                                        return <Action orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <Typography variant='h5' > Configuration </Typography>\r\n                        <div style={{ marginTop: 10, marginBottom: 10 }}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align='left'>\r\n                                                <Typography variant='subtitle1'> Type </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='subtitle1'> Affichage </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.contents.sort((a, b) => { return a.type.rank > b.type.rank }).map((content, index) => (\r\n                                            <TableRow >\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1'> {content.type.name} </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1'> {content.content} </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.delete(index) }} style={{ borderRadius: 2 }}>\r\n                                                        <Close />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        <TableRow  >\r\n                                            <TableCell align=\"left\">\r\n                                                <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\r\n                                                    <InputLabel>Type</InputLabel>\r\n                                                    <Select value={this.state.type.id} onChange={(event) => { this.setType( event.target.value ) }} label=\"Type\" >\r\n                                                        {\r\n                                                            this.state.types.map(type => {\r\n                                                                return <MenuItem value={type.id} >{type.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.setState({ content: event.target.value }) }}\r\n                                                    style={{ width: '100%' }}\r\n                                                    multiline\r\n                                                    value={this.state.content}\r\n                                                    label=\"Name\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <IconButton onClick={() => { this.insertContent() }} style={{ borderRadius: 2 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </div>\r\n                    </div>\r\n                    <Button style={{ marginTop: 5, marginBottom: 5 }} onClick={() => { this.save() }} variant='outlined'>\r\n                        Save\r\n                    </Button>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewWidget","import React from 'react'\r\nimport Action from '../../../components/Action'\r\nimport { FormControl, Select, InputLabel, MenuItem, Paper, Typography, Divider, IconButton, TextField, TableCell, TableBody, TableContainer, TableHead, Table, TableRow } from '@material-ui/core'\r\nimport { Close, Add, Delete, ArrowUpward, ArrowDownward } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nclass Widget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            id: props.match.params.id,\r\n            contentSources: [],\r\n            reference: '',\r\n            source: null,\r\n            action: null,\r\n            type: \"title\",\r\n            content: \"\",\r\n            sources: [],\r\n            types: [],\r\n            widget: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/widgets/\" + this.state.id)\r\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else if (resultConfiguration.error) {\r\n            this.setState({ enabled: true, message: resultConfiguration.code + \" : \" + resultConfiguration.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", loading: false, widget: result.data, sources: resultSource.data, types: resultConfiguration.data.contents.types})\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        let result = await new Request().delete({}).fetch(\"/api/widgets/\" + this.state.widget.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/widget')\r\n        }\r\n    }\r\n\r\n    async deleteSource(source) {\r\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.widget.id + \"/sources/\" + source)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertSource() {\r\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let find = false\r\n        this.state.widget.sources.forEach(contentSource => {\r\n            if (contentSource.reference == this.state.reference) {\r\n                find = true\r\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\r\n            }\r\n        })\r\n        if (find) {\r\n            return\r\n        }\r\n        let tmpsettings = []\r\n        let action = this.state.action\r\n        for (let index = 0; index < action.settings.length; index++) {\r\n            let argument = action.settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmpsettings.push({ reference: argument.id, value: value })\r\n        }\r\n        let result = await new Request().post({\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: tmpsettings,\r\n            reference: this.state.reference\r\n        }).fetch(\"/api/widgets/\" + this.state.id + \"/sources\")\r\n\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ action: null, source: null, reference: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) {\r\n                this.setState({ action: action })\r\n            }\r\n        })\r\n    }\r\n\r\n    async setContent() {\r\n        let result = await new Request().post({type: this.state.type, content: this.state.content}).fetch(\"/api/widgets/\" + this.state.id + \"/contents\")\r\n        if(result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ content: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteContent(id) {\r\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.id + \"/contents/\" + id)\r\n        if(result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async update(content) {\r\n        let widget = this.state.widget\r\n        let contents = widget.contents.map(pContent => {\r\n            if (pContent.id == content.id) {\r\n                pContent.native = content.native\r\n            }\r\n            return pContent\r\n        })\r\n        widget.contents = contents\r\n        this.setState({ widget: widget })\r\n        let result = await new Request().put({ content: content }).fetch(\"/api/widgets/\" + this.state.widget.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.widget) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' style={{ fontSize: 25 }}>\r\n                                {this.state.widget.reference}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.widget.icon}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Source\r\n                            </Typography>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align='left' >\r\n                                                    <Typography variant='subtitle1'>Reference</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left'>\r\n                                                    <Typography variant='subtitle1' >Source</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1' >Argument</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.widget.sources.map((source, index) => {\r\n                                                    return (\r\n                                                        <TableRow >\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.reference}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\">\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.object}\r\n                                                                </Typography>\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.action}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {\r\n                                                                        source.arguments.map(argument => {\r\n                                                                            return (\r\n                                                                                <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteSource(source.id) }} style={{ borderRadius: 3 }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.contentSources.map((contentSource, index) => {\r\n                                                    return (\r\n                                                        <TableRow >\r\n                                                            <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                                <Typography variant='subtitle1'> {contentSource.reference} </Typography>\r\n                                                                <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\r\n                                                                <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\">\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {JSON.stringify(contentSource.arguments)}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\r\n                                                                    <Close />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <TableRow  >\r\n                                                <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                    <TextField\r\n                                                        onChange={(event) => { this.setState({ reference: event.target.value }) }}\r\n                                                        style={{ width: '100%' }}\r\n                                                        multiline\r\n                                                        value={this.state.reference}\r\n                                                        label=\"Reference\"\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                        <InputLabel>Source</InputLabel>\r\n                                                        <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                                            {\r\n                                                                this.state.sources.map(source => {\r\n                                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                    {\r\n                                                        this.state.source ?\r\n                                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                                <InputLabel>Action</InputLabel>\r\n                                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                                    {\r\n                                                                        this.state.source.actions.map(action => {\r\n                                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                            : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ width: '40%' }}>\r\n                                                    {\r\n                                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                                            <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\r\n                                                                <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\r\n                                                                    {\r\n                                                                        this.state.action.settings.map(setting => {\r\n                                                                            return <Action orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                                        })\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Content\r\n                            </Typography>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align='left' style={{width: '15%'}} >\r\n                                                    <Typography variant='subtitle1'>Type</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left' style={{ width: '80%' }}>\r\n                                                    <Typography variant='subtitle1' >content</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left' style={{width: '20%'}}>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map((content, index) => {\r\n                                                    return (\r\n                                                        <TableRow >\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {content.type.name}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <TextField\r\n                                                                    style={{ width: '100%', marginBottom: 5 }}\r\n                                                                    onChange={(event) => { content.native = event.target.value; this.update(content) }}\r\n                                                                    multiline\r\n                                                                    value={content.native}\r\n                                                                    variant=\"outlined\"\r\n                                                                />\r\n                                                                {\r\n                                                                    content.content.split(\"\\n\").map(_content => {\r\n                                                                        return (\r\n                                                                            <Typography variant='body1' style={{ fontWeight: _content.type == 'title' ? 'bold' : 'normal' }}>\r\n                                                                                {_content}\r\n                                                                            </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteContent(content.id) }} style={{ borderRadius: 3 }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <TableRow  >\r\n                                                <TableCell align=\"left\">\r\n                                                    <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\r\n                                                        <InputLabel>Type</InputLabel>\r\n                                                        <Select value={this.state.type} onChange={(event) => { this.setState({ type: event.target.value }) }} label=\"Type\" >\r\n                                                            {\r\n                                                                this.state.types.map(type => {\r\n                                                                    return <MenuItem value={type.id} >{type.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <TextField\r\n                                                        onChange={(event) => { this.setState({ content: event.target.value }) }}\r\n                                                        style={{ width: '100%' }}\r\n                                                        multiline\r\n                                                        value={this.state.content}\r\n                                                        label=\"Name\"\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.setContent() }} style={{ borderRadius: 2 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete() }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Widget","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'moment'\r\nimport { Add, Delete, Settings } from '@material-ui/icons'\r\nimport { FormControl, Button, MenuItem, Select, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton } from '@material-ui/core'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Smartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            users: [],\r\n            profiles: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/users\")\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n        } else if (resultProfile.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultProfile.code + \" : \" + resultProfile.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                users: result.data,\r\n                profiles: resultProfile.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/users/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateProfile(user, profile) {\r\n        let result = await new Request().put({\r\n            login: user.login,\r\n            profile: profile\r\n        }).fetch(\"/api/users/\" + user.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <div>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        {this.state.users.sort((a, b) => {\r\n                                            return a.profile > b.profile\r\n                                        }).slice(this.state.page * 10, (this.state.page + 1) * 10).map((user) => (\r\n                                            <TableRow hover key={user.id} style={{ cursor: 'pointer' }}>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='body1'>\r\n                                                        {\r\n                                                            user.login\r\n                                                        }\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <FormControl variant=\"outlined\"  >\r\n                                                        <Select disabled={user.login == 'admin'} value={user.profile} onChange={(event) => { this.updateProfile(user, event.target.value) }} >\r\n                                                            {\r\n                                                                this.state.profiles.map(profile => {\r\n                                                                    return (\r\n                                                                        <MenuItem value={profile.id} >{profile.name}</MenuItem>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.props.history.push('/user/' + user.id +  \"/password\") }} style={{ borderRadius: 3 }}>\r\n                                                        <Settings />\r\n                                                    </IconButton>\r\n                                                    <IconButton onClick={() => { this.delete(user.id) }} style={{ borderRadius: 3 }}>\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                                    <Link to=\"/user/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.users.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Smartobject","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewSmartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            profiles: [],\r\n            profile: 1,\r\n            login: \"\",\r\n            password: \"\",\r\n            confirmationPassword: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", profiles: result.data })\r\n        }\r\n    }\r\n\r\n    async add() {\r\n        if(this.state.login.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing login\" })\r\n        } else if(this.state.password.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing password\" })\r\n        } else if(this.state.password != this.state.confirmationPassword) {\r\n                this.setState({ enabled: true, message: \"Passwords are not the same\" })\r\n            } else {\r\n            let result = await new Request().post({login: this.state.login, password: this.state.password, profile: this.state.profile}).fetch(\"/api/users\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/user')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField placeholder='login' variant=\"outlined\" value={this.state.login} onChange={(event) => { this.setState({ login: event.currentTarget.value }) }} />\r\n                            <TextField type='password' placeholder='password' variant=\"outlined\" value={this.state.password} style={{ marginTop: 10 }} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\r\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\r\n                        <FormControl variant=\"outlined\" style={{ width: '100%', marginTop: 10 }} >\r\n                                <Select value={this.state.profile} onChange={(event) => { this.setState({ profile: event.target.value }) }} >\r\n                                    {\r\n                                        this.state.profiles.map(profile => {\r\n                                            return (\r\n                                                <MenuItem value={profile.id} >{profile.name}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSmartobject","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewPassword extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            id: props.match.params.id,\r\n            message: \"\",\r\n            confirmationPassword: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    async changePassword() {\r\n        if(this.state.password.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing password\" })\r\n        } else if(this.state.confirmationPassword.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing confirmation password\" })\r\n        } else if(this.state.password != this.state.confirmationPassword) {\r\n            this.setState({ enabled: true, message: \"Passwords are not the same\" })\r\n        } else {\r\n            let result = await new Request().post({password: this.state.password}).fetch(\"/api/users/\" + this.state.id + \"/password\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/user')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField placeholder='password' type='password' variant=\"outlined\" value={this.state.password} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\r\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.changePassword() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPassword","import React from 'react'\r\nimport { Drawer, List, Typography, Divider, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\r\nimport { DevicesOther, ExitToApp, AccountTree, Category, DeviceHub, Https, Extension, Settings, Person} from '@material-ui/icons'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    render() {\r\n        if(this.props.isMobile) {\r\n            return null\r\n        }\r\n        return (\r\n            <Drawer variant=\"persistent\" anchor=\"left\" open={true} style={{ width: 240 }} >\r\n                <div style={{ width: 240 }}>\r\n                    <List>\r\n                        <div style={{display:'flex', justifyContent:'flex-start', padding: 5, alignContent:'center', alignSelf:'center', alignItems:'center'}}>\r\n                        <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '7vh', width: '7vh', borderRadius: 7, marginLeft: 15 }} />\r\n                        <div>\r\n                        <Typography variant='h5' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 15, paddingLeft: 10 }}>\r\n                            Intendant\r\n                        </Typography>\r\n                        <Typography variant='subtitle1' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 0, paddingBottom: 15, paddingLeft: 10 }}>\r\n                            Administration\r\n                        </Typography>\r\n                        </div>  \r\n                            </div>\r\n                    \r\n                        <Divider />\r\n                        <Link to=\"/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"smartobject\"}>\r\n                                <ListItemIcon>\r\n                                    <DevicesOther />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Smartobject\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/module\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"module\"}>\r\n                                <ListItemIcon>\r\n                                    <Category />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Module\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/widget\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"widget\"} >\r\n                                <ListItemIcon>\r\n                                    <Extension />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Widget\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/process\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"process\"} >\r\n                                <ListItemIcon>\r\n                                    <DeviceHub />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Process\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/routine\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"configuration\"} >\r\n                                <ListItemIcon>\r\n                                    <AccountTree />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Routine\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/authorization\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"authorization\"} >\r\n                                <ListItemIcon>\r\n                                    <Https />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Authorization\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/user\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"user\"} >\r\n                                <ListItemIcon>\r\n                                    <Person />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"User\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/configuration\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"configuration\"} >\r\n                                <ListItemIcon>\r\n                                    <Settings />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Configuration\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider />\r\n                        <ListItem button key={\"disconnect\"} onClick={() => {this.props.onDisconnect()}} >\r\n                            <ListItemIcon>\r\n                                <ExitToApp />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"Disconnect\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\nimport { Toolbar, AppBar } from '@material-ui/core'\r\nimport SmartObject from './contents/SmartObject/List'\r\nimport DetailSmartObject from './contents/SmartObject/Detail'\r\nimport NewSmartObject from './contents/SmartObject/New'\r\nimport Authorization from './contents/Authorization/List'\r\nimport ListProcess from './contents/Process/List'\r\nimport NewProcess from './contents/Process/New'\r\nimport DetailProcess from './contents/Process/Detail'\r\nimport Routine from './contents/Routine/List'\r\nimport NewRoutine from './contents/Routine/New'\r\nimport DetailRoutine from './contents/Routine/Detail'\r\nimport Module from './contents/Module/List'\r\nimport DetailModule from './contents/Module/Detail'\r\nimport Configuration from './contents/Configuration/List'\r\nimport Widget from './contents/Widget/List'\r\nimport NewWidget from './contents/Widget/New'\r\nimport DetailWidget from './contents/Widget/Detail'\r\nimport User from './contents/User/List'\r\nimport NewUser from './contents/User/New'\r\nimport NewPassword from './contents/User/NewPassword'\r\nimport Sidebar from '../components/Sidebar'\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\n\r\nclass Main extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n\r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router basename='/admin'>\r\n                <Sidebar isMobile={this.state.isMobile} onDisconnect={() => { this.props.onDisconnect() }} />\r\n                <main style={{ padding: 20, width: this.state.isMobile ? '95vw' :  '80vw', height: '100vh' }} >\r\n                    <div style={{ marginLeft: this.state.isMobile ? 0 : 240, marginTop: this.state.isMobile ? 0 : 32 }}>\r\n                        <Switch>\r\n                            <Route exact path=\"/smartobject\" component={SmartObject} />\r\n                            <Route exact path=\"/smartobject/new\" component={NewSmartObject} />\r\n                            <Route exact path=\"/smartobject/:id\" component={DetailSmartObject} />\r\n                            <Route exact path=\"/module\" component={Module} />\r\n                            <Route exact path=\"/module/:id\" component={DetailModule} />\r\n                            <Route exact path=\"/routine\" component={Routine} />\r\n                            <Route exact path=\"/routine/new\" component={NewRoutine} />\r\n                            <Route exact path=\"/routine/:id\" component={DetailRoutine} />\r\n                            <Route exact path=\"/widget\" component={Widget} />\r\n                            <Route exact path=\"/widget/new\" component={NewWidget} />\r\n                            <Route exact path=\"/widget/authorization\" component={Widget} />\r\n                            <Route exact path=\"/widget/:id\" component={DetailWidget} />\r\n                            <Route exact path=\"/process\" component={ListProcess} />\r\n                            <Route exact path=\"/process/new\" component={NewProcess} />\r\n                            <Route exact path=\"/process/:id\" component={DetailProcess} />\r\n                            <Route exact path=\"/user\" component={User} />\r\n                            <Route exact path=\"/user/new\" component={NewUser} />\r\n                            <Route exact path=\"/user/:id/password\" component={NewPassword} />\r\n                            <Route exact path=\"/configuration\" component={Configuration} />\r\n                            <Route exact path=\"/authorization\" component={Authorization} />\r\n                        </Switch>\r\n                    </div>\r\n                </main>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport Package from '../../package.json'\r\nimport { Paper, TextField, Button, Typography } from '@material-ui/core'\r\nimport Alert from '../components/Alert'\r\nimport Main from './Main'\r\nimport Request from '../utils/Request'\r\n\r\nclass GetStarted extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            authentification: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            password: \"\",\r\n            confirmePassword: \"\",\r\n            login: \"admin\",\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n    \r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n\r\n    async register() {\r\n        if (this.state.password == this.state.confirmePassword) {\r\n            let result = await new Request().put({ password: this.state.password }).fetch(\"/api/getstarted\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.onFinish()\r\n            }\r\n        } else {\r\n            this.setState({ enabled: true, message: 'Password and password confirmation is not the same' })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '30vw', textAlign: 'center' }}>\r\n                <div >\r\n                    <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7 }} />\r\n                    <div style={{ fontSize: 70, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\r\n                        Intendant\r\n                    </div>\r\n                    <div style={{ fontSize: 14, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 30 }}>\r\n                        At the first launch, you must set the admin password\r\n                    </div>\r\n                </div>\r\n                <div noValidate autoComplete=\"off\" style={{ marginBottom: 10}}>\r\n                    <div style={{ marginTop: 10 }}>\r\n                        <TextField value={this.state.password} fullWidth label=\"Password\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\r\n                    </div>\r\n                    <div style={{ marginTop: 10 }}>\r\n                        <TextField value={this.state.confirmePassword} fullWidth label=\"Confirmation\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ confirmePassword: event.nativeEvent.target.value }) }} />\r\n                    </div>\r\n                    <div style={{  marginTop: 15, textAlign: 'end' }}>\r\n                        <Button variant='plain' onClick={() => { this.register() }}  >\r\n                            Let's get started\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GetStarted;\r\n","import React from 'react'\r\nimport Package from '../../package.json'\r\nimport { Paper, TextField, Button, Typography, Switch, IconButton } from '@material-ui/core'\r\nimport Alert from '../components/Alert'\r\nimport Main from './Main'\r\nimport GetStarted from './GetStarted'\r\nimport Request from '../utils/Request'\r\nimport { Settings } from '@material-ui/icons'\r\n\r\nclass Authentification extends React.Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            authentification: true,\r\n            enabled: false,\r\n            getStarted: false,\r\n            message: \"\",\r\n            password: \"\",\r\n            customAddress: false,\r\n            address: \"localhost:8000\",\r\n            login: \"admin\",\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n\r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let service = localStorage.getItem(\"server\")\r\n        if (service) {\r\n            this.setState({ address: service.replace(\"http://\", \"\") })\r\n        }\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n\r\n    async login() {\r\n        if (await this.checkServer()) {\r\n            let result = await new Request().post({ login: this.state.login, password: this.state.password }).fetch(\"/api/authentification\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                localStorage.setItem(\"authorization\", result.token)\r\n                this.setState({ enabled: false, message: \"\", authentification: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    disconnect() {\r\n        localStorage.removeItem(\"authorization\")\r\n        this.setState({ authentification: true, password: \"\" })\r\n    }\r\n\r\n    async checkServer() {\r\n        let ok = true\r\n        try {\r\n            let result = await fetch(\"http://\" + this.state.address + \"/api/ping\", {}, 2000)\r\n            let resultJSON = await result.json()\r\n            if (resultJSON.message != \"pong\" || resultJSON.code != \"ok\") {\r\n                this.setState({ enabled: true, message: 'Connection to server failed' })\r\n                ok = false\r\n            } else {\r\n                if (resultJSON.getStarted) {\r\n                    this.setState({ getStarted: true })\r\n                    return false\r\n                } else {\r\n                    localStorage.setItem(\"server\", \"http://\" + this.state.address)\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.setState({ enabled: true, message: 'Connection to server failed' })\r\n            ok = false\r\n        }\r\n        return ok\r\n    }\r\n\r\n    render() {\r\n        if (this.state.getStarted) {\r\n            return (\r\n                <GetStarted onFinish={() => { this.setState({ getStarted: false }) }} />\r\n            )\r\n        } else {\r\n            if (this.state.authentification) {\r\n                return (\r\n                    <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '25vw', textAlign: 'center' }}>\r\n                        <div>\r\n                            <div style={{ marginBottom: 50 }}>\r\n                                <img  onClick={() => {this.setState({customAddress: !this.state.customAddress}) }}  src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7, cursor: 'pointer' }} />\r\n                                <div style={{ fontSize: 55, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\r\n                                    Intendant\r\n                                </div>\r\n                                <div style={{ fontSize: 20, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 15 }}>\r\n                                    Administration\r\n                                </div>\r\n                            </div>\r\n                            <form noValidate onSubmit={(e) => { e.preventDefault(); this.login() }} autoComplete=\"off\" style={{ marginBottom: 10 }}>\r\n                                {\r\n                                    this.state.customAddress ?\r\n                                        <div style={{ padding: 5 }}>\r\n                                            <TextField value={this.state.address} fullWidth label=\"Server address\" autoFocus onChange={(event) => { this.setState({ address: event.nativeEvent.target.value }) }} />\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                <div style={{ padding: 5 }}>\r\n                                    <TextField value={this.state.login} fullWidth label=\"Login\" autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ login: event.nativeEvent.target.value }) }} />\r\n                                </div>\r\n                                <div style={{ padding: 5 }}>\r\n                                    <TextField value={this.state.password} fullWidth label=\"Password\" type='password' autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\r\n                                </div>\r\n                                <div style={{ padding: 5, marginTop: 5, textAlign: 'end' }}>\r\n                                    <Button type='submit' variant='plain' on onSubmit={() => { this.login() }} onClick={() => { this.login() }}  >\r\n                                        Connection\r\n                                    </Button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                            {this.state.message}\r\n                        </Alert>\r\n                    </Paper>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Main onDisconnect={() => { this.disconnect() }} />\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Authentification;\r\n","import Authentification from './screens/Authentification'\r\nimport Theme from './Theme'\r\nimport { ThemeProvider, CssBaseline, Box } from '@material-ui/core'\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={Theme} >\r\n      <CssBaseline />\r\n      <Box style={{ userSelect: 'none', outline: 'none', WebkitTapHighlightColor: 'rgba(41,108,71,0.33)', height: '100vh', width: '100wh', backgroundColor: Theme.palette.background.default, display: 'flex', flexDirection: 'column', alignSelf: 'center', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\r\n        <Authentification />\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}