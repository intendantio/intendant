"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _smartobject=_interopRequireDefault(require("@intendant/smartobject")),_nodeFetch=_interopRequireDefault(require("node-fetch")),_package=_interopRequireDefault(require("./package.json"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class LaMetric extends _smartobject.default{constructor(a,b,c){let d=require("./configuration.json");super(a,b,c,d)}/*
        Action
    */async __getAllNotification(a={}){let b=await(0,_nodeFetch.default)("http://"+this.settings.path+"/api/v2/device/notifications",{headers:{Authorization:this.settings.apikey}});if(200==b.status){let a=await b.json();return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">getAllNotification>invalidStatus>"+b.status,message:"Invalid status "+b.status}}async __getCurrentNotification(a={}){let b=await(0,_nodeFetch.default)("http://"+this.settings.path+"/api/v2/device/notifications/current",{headers:{Authorization:this.settings.apikey}});if(200==b.status){let a=await b.json();return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">getCurrentNotification>invalidStatus>"+b.status,message:"Invalid status "+b.status}}async __getOneNotification(a={}){if(a.notification){let b=await(0,_nodeFetch.default)("http://"+this.settings.path+"/api/v2/device/notifications/"+a.notification,{headers:{Authorization:this.settings.apikey}});if(200==b.status){let a=await b.json();return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">getOneNotification>invalidStatus>"+b.status,message:"Invalid status "+b.status}}return{error:!0,code:_package.default.name+">getOneNotification>Missing>Notification",message:"Missing notification"}}async __sendNotification(a={}){let b=await(0,_nodeFetch.default)("http://"+this.settings.path+"/api/v2/device/notifications",{headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:this.settings.apikey},body:JSON.stringify({priority:a.priority,icon_type:a.iconType,model:{frames:[{icon:a.icon,text:a.text}],sound:{category:"notifications",id:a.sound,repeat:1},cycles:a.cycle}}),method:"POST"});if(200==b.status||201==b.status){let a=await b.json();return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">sendNotification>invalidStatus>"+b.status,message:"Invalid status "+b.status}}async __deleteOneNotification(a={}){if(a.notification){let b=await(0,_nodeFetch.default)("http://"+this.settings.path+"/api/v2/device/notifications/"+a.notification,{headers:{Authorization:this.settings.apikey},method:"DELETE"});if(200==b.status){let a=await b.json();return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">deleteOneNotification>invalidStatus>"+b.status,message:"Invalid status "+b.status}}return{error:!0,code:_package.default.name+">deleteOneNotification>Missing>Notification",message:"Missing notification"}}async __getWifi(a={}){let b=await(0,_nodeFetch.default)("http://"+this.settings.path+"/api/v2/device/wifi",{headers:{Authorization:this.settings.apikey}});if(200==b.status){let a=await b.json();return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">getWifi>invalidStatus>"+b.status,message:"Invalid status "+b.status}}async __getState(a={}){let b=await(0,_nodeFetch.default)("http://"+this.settings.path+"/api/v2/device",{headers:{Authorization:this.settings.apikey}});if(200==b.status){let a=await b.json();return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">getState>invalidStatus>"+b.status,message:"Invalid status "+b.status}}async __getVolume(a={}){let b=await(0,_nodeFetch.default)("http://"+this.settings.path+"/api/v2/device/audio",{headers:{Authorization:this.settings.apikey}});if(200==b.status){let a=await b.json();return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">getVolume>invalidStatus>"+b.status,message:"Invalid status "+b.status}}async __updateVolume(a={}){let b=50;a.volume&&(b=a.volume);let c=await(0,_nodeFetch.default)("http://"+this.settings.path+"/api/v2/device/audio",{method:"PUT",headers:{"Content-Type":"application/json",Accept:"application/json",Authorization:this.settings.apikey},body:JSON.stringify({volume:b})});if(200==c.status){let a=await c.json();return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">updateVolume>invalidStatus>"+c.status,message:"Invalid status "+c.status}}async __getIcons(a={}){let b=await(0,_nodeFetch.default)("https://developer.lametric.com/api/v2/icons?fields=id,title,url"),c=await b.json();return{error:!1,code:"ok",message:"",data:c}}}var _default=LaMetric;exports.default=_default,module.exports=exports.default;