"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _smartobject=_interopRequireDefault(require("@intendant/smartobject")),_nodeFetch=_interopRequireDefault(require("node-fetch")),_package=_interopRequireDefault(require("./package.json"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class Plug extends _smartobject.default{constructor(a,b,c){let d=require("./configuration.json");super(a,b,c,d)}/*
        Action
    */async __turnOn(a={}){let b=await(0,_nodeFetch.default)(this.settings.path+this.settings.apikey+"/lights/"+this.settings.id+"/state",{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({on:!0})});if(200==b.status){let a=await b.json(),c={error:!1,type:"",description:""};if(Array.isArray(a))for(let b,d=0;d<a.length;d++)b=a[d],b.error&&(c={error:!0,type:b.error.type,message:b.error.description});return c.error?{error:!0,code:_package.default.name+">turnOn>invalidRequest>"+c.message,message:"Invalid request "+c.message}:{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">turnOn>invalidStatus>"+b.status,message:"Invalid status "+b.status}}async __turnOff(a={}){let b=await(0,_nodeFetch.default)(this.settings.path+this.settings.apikey+"/lights/"+this.settings.id+"/state",{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({on:!1})});if(200==b.status){let a=await b.json(),c={error:!1,type:"",message:""};if(Array.isArray(a))for(let b,d=0;d<a.length;d++)b=a[d],b.error&&(c={error:!0,type:b.error.type,message:b.error.description});return c.error?{error:!0,code:_package.default.name+">turnOff>invalidRequest>"+c.message,message:"Invalid request "+c.message}:{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">turnOff>invalidStatus>"+b.status,message:"Invalid status "+b.status}}async __getState(a={}){let b=await(0,_nodeFetch.default)(this.settings.path+this.settings.apikey+"/lights/"+this.settings.id);if(200==b.status){let a=await b.json();if(Array.isArray(a)){let b=a[0].error;return{error:!0,code:_package.default.name+">getState>invalidRequest>"+b,message:"Invalid request "+b}}return{error:!1,code:"ok",message:"",data:a}}return{error:!0,code:_package.default.name+">getState>invalidStatus>"+b.status,message:"Invalid status "+b.status}}}var _default=Plug;exports.default=_default,module.exports=exports.default;