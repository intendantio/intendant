"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _package=_interopRequireDefault(require("./package.json")),_Smartobject=_interopRequireDefault(require("./controllers/Smartobject")),_Authentification=_interopRequireDefault(require("./controllers/Authentification")),_Process=_interopRequireDefault(require("./controllers/Process")),_Profile=_interopRequireDefault(require("./controllers/Profile")),_Storage=_interopRequireDefault(require("./controllers/Storage")),_Widget=_interopRequireDefault(require("./controllers/Widget")),_Cache=_interopRequireDefault(require("./controllers/Cache")),_User=_interopRequireDefault(require("./controllers/User")),_Market=_interopRequireDefault(require("./controllers/Market")),_Notification=_interopRequireDefault(require("./controllers/Notification")),_Room=_interopRequireDefault(require("./controllers/Room")),_Essential=_interopRequireDefault(require("./controllers/Essential")),_Module=_interopRequireDefault(require("./controllers/Module")),_Rapport=_interopRequireDefault(require("./controllers/Rapport")),_Cloud=_interopRequireDefault(require("./controllers/Cloud")),_Automation=_interopRequireDefault(require("./controllers/Automation")),_gateways=_interopRequireDefault(require("./gateways")),_Smartobject2=_interopRequireDefault(require("./managers/Smartobject")),_Module2=_interopRequireDefault(require("./managers/Module")),_Automation2=_interopRequireDefault(require("./managers/Automation")),_Rapports=_interopRequireDefault(require("./managers/Rapports")),_Tracing=_interopRequireDefault(require("./utils/Tracing")),_connector=_interopRequireDefault(require("./connector"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class Core{constructor(a){console.clear(),_Tracing.default.welcome(),_connector.default.migration(()=>{/* Manager */ /* Controller */this.configuration=a,this.manager={},this.manager.smartobject=new _Smartobject2.default(this),this.manager.module=new _Module2.default(this),this.manager.automation=new _Automation2.default(this),this.manager.rapport=new _Rapports.default(this),this.controller={authentification:new _Authentification.default,automation:new _Automation.default,module:new _Module.default,market:new _Market.default,profile:new _Profile.default,storage:new _Storage.default,user:new _User.default,cache:new _Cache.default,notification:new _Notification.default,smartobject:new _Smartobject.default,widget:new _Widget.default,rapport:new _Rapport.default,room:new _Room.default,essential:new _Essential.default,process:new _Process.default,cloud:new _Cloud.default},this.controller.authentification.token=a.token,this.controller.authentification.salt=_package.default.name,this.controller.module.addManager(this.manager.module),this.controller.market.addManager(this.manager.smartobject),this.controller.market.addManager(this.manager.module),this.controller.smartobject.addManager(this.manager.smartobject),this.controller.smartobject.addController(this.controller.user),this.controller.widget.addManager(this.manager.smartobject),this.controller.widget.addManager(this.manager.module),this.controller.widget.addController(this.controller.module),this.controller.widget.addController(this.controller.smartobject),this.controller.rapport.addManager(this.manager.rapport),this.controller.rapport.addController(this.controller.widget),this.controller.rapport.addController(this.controller.smartobject),this.controller.room.addController(this.controller.smartobject),this.controller.process.addManager(this.manager.smartobject),this.controller.process.addManager(this.manager.module),this.controller.process.addController(this.controller.essential),this.controller.automation.addManager(this.manager.automation),this.manager.smartobject.addController(this.controller.smartobject),this.manager.automation.addController(this.controller.automation),this.manager.automation.addManager(this.manager.smartobject),this.manager.automation.addController(this.controller.smartobject),this.manager.automation.addController(this.controller.process),setTimeout(()=>{this.api=new _gateways.default(this),this.manager.rapport.before(),this.manager.smartobject.before(),setTimeout(()=>{this.manager.automation.before()},1e3)},1e3)})}}var _default=Core;exports.default=_default,module.exports=exports.default;