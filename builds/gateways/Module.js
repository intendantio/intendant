"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _expressValidator=require("express-validator"),_Result=_interopRequireDefault(require("../utils/Result")),_package=_interopRequireDefault(require("../package.json"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var _default=(a,b)=>{a.get("/api/modules/configuration",async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/modules/configuration";let d=await b.controller.authentification.checkAuthorization(a);d.error?c.send(d):c.send(b.controller.module.getAllConfiguration(b.controller.module.getByHash(a.params.idModule).data))}else c.send(new _Result.default(_package.default.name,!0,d.array({onlyFirstError:!0}).pop().msg))}),a.get("/api/modules/:idModule/configuration",async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/modules/:idModule/configuration";let d=await b.controller.authentification.checkAuthorization(a);d.error?c.send(d):c.send(b.controller.module.getConfiguration(b.controller.module.getByHash(a.params.idModule).data))}else c.send(new _Result.default(_package.default.name,!0,d.array({onlyFirstError:!0}).pop().msg))}),a.get("/api/modules/:idModule/state",async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/modules/:idModule/state";let d=await b.controller.authentification.checkAuthorization(a);d.error?c.send(d):c.send(await b.controller.module.getState(b.controller.module.getByHash(a.params.idModule).data))}else c.send(new _Result.default(_package.default.name,!0,d.array({onlyFirstError:!0}).pop().msg))}),a.post("/api/modules/:idModule/datasources/:idDataSource",(0,_expressValidator.body)("settings").isArray().withMessage("Invalid settings"),async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/modules/:idModule/datasources/:idDataSource";let d=await b.controller.authentification.checkAuthorization(a);d.error?c.send(d):c.send(await b.controller.module.getDataSourceValue(b.controller.module.getByHash(a.params.idModule).data,a.params.idDataSource,a.body.settings))}else c.send(new _Result.default(_package.default.name,!0,d.array({onlyFirstError:!0}).pop().msg))}),a.post("/api/modules/:idModule/actions/:idAction",(0,_expressValidator.body)("settings").isArray().withMessage("Invalid settings"),async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/modules/:idModule/actions/:idAction";let d=await b.controller.authentification.checkAuthorization(a);d.error?c.send(d):c.send(await b.controller.module.executeAction(b.controller.module.getByHash(a.params.idModule).data,a.params.idAction,a.body.settings))}else c.send(new _Result.default(_package.default.name,!0,d.array({onlyFirstError:!0}).pop().msg))})};exports.default=_default,module.exports=exports.default;