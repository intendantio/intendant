"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _expressValidator=require("express-validator"),_Result=_interopRequireDefault(require("../utils/Result")),_package=_interopRequireDefault(require("../package.json"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var _default=(a,b)=>{a.get("/api/configurations",async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/configurations";let d=await b.controller.user.getStarted();d.error?c.send(d.error):c.send(new _Result.default(_package.default.name,!1,"",{getStarted:d.getStarted,version:_package.default.version}))}else c.send(new _Result.default(_package.default.name,!0,d.array({onlyFirstError:!0}).pop().msg))}),a.post("/api/configurations",(0,_expressValidator.body)("password").isStrongPassword({minLength:8,minLowercase:1,minUppercase:1,minNumbers:1}).withMessage("Invalid password {minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1}"),async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/configurations";let d=await b.controller.user.getStarted();d.error?c.send(d.error):d.getStarted?c.send(await b.controller.user.insert({login:"admin",password:a.body.password,imei:"",profile:1})):c.send(new _Result.default(_package.default.name,!0,"Invalid core state"))}else c.send(new _Result.default(_package.default.name,!0,d.array({onlyFirstError:!0}).pop().msg))})};exports.default=_default,module.exports=exports.default;