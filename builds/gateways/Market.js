"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _expressValidator=require("express-validator"),_Result=_interopRequireDefault(require("../utils/Result")),_package=_interopRequireDefault(require("../package.json"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var _default=(a,b)=>{a.post("/api/markets/install",(0,_expressValidator.body)("package").isString().withMessage("Invalid package"),async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/markets/install";let d=await b.controller.authentification.checkAuthorization(a);d.error?c.send(d):c.send(await b.controller.market.install(a.body.package))}else{let a=d.array({onlyFirstError:!0}).pop();c.send(new _Result.default(_package.default.name,!0,a.msg))}}),a.post("/api/markets/upgrade",(0,_expressValidator.body)("package").isString().withMessage("Invalid package"),async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/markets/upgrade";let d=await b.controller.authentification.checkAuthorization(a);d.error?c.send(d):c.send(await b.controller.market.upgrade(a.body.package))}else{let a=d.array({onlyFirstError:!0}).pop();c.send(new _Result.default(_package.default.name,!0,a.msg))}}),a.post("/api/markets/uninstall",(0,_expressValidator.body)("package").isString().withMessage("Invalid package"),async(a,c)=>{let d=(0,_expressValidator.validationResult)(a);if(d.isEmpty()){a.url="/markets/uninstall";let d=await b.controller.authentification.checkAuthorization(a);d.error?c.send(d):c.send(await b.controller.market.uninstall(a.body.package))}else{let a=d.array({onlyFirstError:!0}).pop();c.send(new _Result.default(_package.default.name,!0,a.msg))}})};exports.default=_default,module.exports=exports.default;