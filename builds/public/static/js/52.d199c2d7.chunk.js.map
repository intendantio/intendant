{"version":3,"file":"static/js/52.d199c2d7.chunk.js","mappings":"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","sources":["components/WidgetNewItem.js","screens/contents/Widget/New.js","utils/Utils.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["import React from 'react'\r\nimport Action from './Action'\r\nimport { Grid, Card, CardActionArea, CardContent, Collapse, IconButton, Typography, Divider, CardActions } from '@mui/material'\r\nimport { Add } from '@mui/icons-material'\r\nimport WidgetSkeleton from './WidgetSkeleton'\r\n\r\nclass WidgetNewItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            configuration: this.props.configuration,\r\n            widget: this.props.widget,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <WidgetSkeleton />\r\n        }\r\n        return (\r\n            <Grid key={this.props.index} item xs={12} md={6} lg={4}>\r\n                <Card variant='outlined'  >\r\n                    <CardActionArea onClick={() => { this.props.onSelect() }}>\r\n                        <CardContent>\r\n                            {\r\n                                this.state.widget.contents.filter(value => value.type == \"title\").map((value, ppIndex) => {\r\n                                    return (\r\n                                        <Typography key={ppIndex} variant='subtitle1' component='div'>\r\n                                            {value.example}\r\n                                        </Typography>\r\n                                    )\r\n                                })\r\n                            }\r\n                            {\r\n                                this.state.widget.contents.filter(value => value.type == \"text\").length > 0 &&\r\n                                <Divider style={{ marginBottom: 10, marginTop: 5 }} />\r\n                            }\r\n                            {\r\n                                this.state.widget.contents.filter(value => value.type == \"text\").map((value, ppIndex) => {\r\n                                    return (\r\n                                        <Typography key={ppIndex} variant='body2' color={value.style && value.style.color ? this.state.widget.dataSources[value.style.color] : \"text.secondary\"}>\r\n                                            {value.example}\r\n                                        </Typography>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <Collapse in={this.props.open} timeout=\"auto\" unmountOnExit>\r\n                        <Divider />\r\n                        {\r\n                            this.props.settings.length > 0 &&\r\n                            <CardContent style={{ padding: 10 }}>\r\n                                <Grid container spacing={1} >\r\n                                {\r\n                                    this.props.settings.map((setting, index) => {\r\n                                        return (\r\n                                            <Action\r\n                                                xs={12} \r\n                                                md={12} \r\n                                                lg={12}\r\n                                                key={\"widget-\" + setting.id}\r\n                                                id={\"widget-\" + setting.id}\r\n                                                options={setting.options}\r\n                                                label={String.capitalizeFirstLetter(setting.id.split(\"_\")[0])}\r\n                                                setState={this.props.setState}\r\n                                                action={setting}\r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Grid>\r\n                            </CardContent>\r\n                        }\r\n                        <CardActions>\r\n                            <IconButton onClick={() => { this.props.onSubmit(() => { this.setState({ loading: false }) }); this.setState({ loading: true }) }} >\r\n                                <Add />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                    </Collapse>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WidgetNewItem","import React from 'react'\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nimport AccordionSkeleton from '../../../components/AccordionSkeleton'\r\n\r\nimport { Grid, Card, AccordionDetails, CardContent, Box, Accordion, AccordionSummary, Typography, Button, Paper, Divider, CardHeader, CardActions } from '@mui/material'\r\nimport { ExpandLess, ExpandMore, SettingsSharp } from '@mui/icons-material'\r\nimport WidgetNewItem from '../../../components/WidgetNewItem'\r\nimport Loading from '../../../components/Loading'\r\nimport Desktop from '../../../components/Desktop'\r\nimport Utils from '../../../utils/Utils'\r\n\r\n\r\n\r\nclass NewWidget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            index: -1,\r\n            open: false,\r\n            widget: {\r\n                settings: []\r\n            },\r\n            configuration: {\r\n                module: \"module\"\r\n            },\r\n            configurations: [],\r\n            settings: []\r\n        }\r\n        props.setTitle(\"New widget\")\r\n        props.setActionType(\"return\")\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModules = await new Request().get().fetch(\"/api/modules\")\r\n        let resultSmartobjects = await new Request().get().fetch(\"/api/smartobjects\")\r\n        if (resultSmartobjects.error) {\r\n            this.props.setMessage(resultSmartobjects.package + \" : \" + resultSmartobjects.message)\r\n            this.props.history.push('/widget')\r\n        } else if (resultModules.error) {\r\n            this.props.setMessage(resultModules.package + \" : \" + resultModules.message)\r\n            this.props.history.push('/widget')\r\n        } else {\r\n            let configurations = []\r\n\r\n            resultSmartobjects.data.forEach(smartobject => {\r\n                if (Array.isArray(smartobject.widgets) && smartobject.widgets.length > 0) {\r\n                    configurations.push(smartobject)\r\n                }\r\n            })\r\n\r\n            resultModules.data.forEach(pModule => {\r\n                if (Array.isArray(pModule.widgets) && pModule.widgets.length > 0) {\r\n                    configurations.push({\r\n                        configuration: pModule,\r\n                        name: pModule.name,\r\n                        reference: pModule.reference,\r\n                        widgets: pModule.widgets,\r\n                        dataSources: pModule.dataSources,\r\n                        actions: pModule.actions\r\n                    })\r\n                }\r\n            })\r\n\r\n            if (configurations.length == 0) {\r\n                this.props.setMessage(\"No widget available\")\r\n                this.props.history.push('/widget')\r\n            } else {\r\n                this.setState({ loading: false, configurations: configurations })\r\n            }\r\n        }\r\n    }\r\n\r\n    async submit(callback) {\r\n\r\n        let settings = []\r\n        let resetState = {}\r\n        for (let indexSettings = 0; indexSettings < this.state.settings.length; indexSettings++) {\r\n            let setting = this.state.settings[indexSettings]\r\n\r\n            resetState[\"widget-\" + setting.id] = null\r\n            settings.push({\r\n                reference: setting.id,\r\n                value: this.state[\"widget-\" + setting.id] ? this.state[\"widget-\" + setting.id] : null,\r\n                type: typeof this.state[\"widget-\" + setting.id]\r\n            })\r\n        }\r\n        let result = await new Request().post({\r\n            reference: this.state.widget.id,\r\n            type: this.state.configuration.configuration.module,\r\n            object: this.state.configuration.configuration.module == \"smartobject\" ? this.state.configuration.id : Utils.getSum(this.state.configuration.name),\r\n            settings: settings\r\n        }).fetch(\"/api/widgets\")\r\n\r\n        if (result.error) {\r\n            callback()\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n        } else {\r\n            this.setState(resetState)\r\n            document.getElementById('main').scroll({ top: 0, left: 0 })\r\n            this.props.history.push('/widget')\r\n        }\r\n    }\r\n\r\n    delete(index) {\r\n        let contents = []\r\n        this.state.contents.forEach((content, pindex) => {\r\n            if (pindex != index) { contents.push(content) }\r\n        })\r\n        this.setState({ contents: contents })\r\n    }\r\n\r\n    selectWidget(configuration, widget) {\r\n        if (this.state.open && configuration.module == \"smartobject\" && this.state.configuration.module == \"smartobject\" && this.state.configuration.smartobject.id == configuration.smartobject.id) {\r\n            return\r\n        } else if (this.state.open && widget.name == this.state.widget.name && configuration.module == \"module\" && this.state.configuration.module == \"module\") {\r\n            return\r\n        }\r\n        this.setState({\r\n            open: false\r\n        })\r\n        let settings = []\r\n        let settingsId = []\r\n        if (Array.isArray(configuration.dataSources)) {\r\n            let actions = []\r\n            configuration.dataSources.forEach(dataSource => {\r\n                if (widget.dataSources.includes(dataSource.id) && actions.includes(dataSource.action) == false) {\r\n                    actions.push(dataSource.action)\r\n                }\r\n            })\r\n            configuration.actions.forEach(action => {\r\n                if (actions.includes(action.id)) {\r\n                    action.settings.forEach(setting => {\r\n                        if (settingsId.includes(setting.id) == false) {\r\n                            settings.push(setting)\r\n                            settingsId.push(setting.id)\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n        }\r\n        this.setState({ widget: widget, settings: settings, configuration: configuration }, () => {\r\n            this.setState({ open: true })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Desktop isMobile={this.props.isMobile}>\r\n                    <Paper variant=\"outlined\" style={{ padding: 12, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <Typography variant='h6' fontWeight='bold' >Widget</Typography>\r\n                        <Typography variant='subtitle2' color=\"text.secondary\" >Show what you need</Typography>\r\n                    </Paper>\r\n                </Desktop>\r\n                <Loading loading={this.state.loading}>\r\n                    {\r\n                        this.state.configurations.map((configuration, index) => (\r\n                            <Accordion style={{ marginBottom: 10, borderRadius: 5 }} variant='outlined' expanded={this.state.index == index} onChange={() => { this.setState({ index: this.state.index == index ? -1 : index }) }}>\r\n                                <AccordionSummary expandIcon={<ExpandMore />} >\r\n                                    <Box>\r\n                                        <Typography variant='subtitle1'  >\r\n                                            {String.capitalizeFirstLetter(configuration.reference)}\r\n                                        </Typography>\r\n                                        {\r\n                                            configuration.room &&\r\n                                            <Typography variant='body2' color=\"text.secondary\"  >\r\n                                                {String.capitalizeFirstLetter(configuration.room.name)}\r\n                                            </Typography>\r\n                                        }\r\n                                    </Box>\r\n                                </AccordionSummary>\r\n                                <Divider style={{ marginBottom: 15 }} />\r\n                                <AccordionDetails>\r\n                                    <Grid container spacing={1} >\r\n                                        {\r\n                                            configuration.widgets.map((widget, pIndex) => {\r\n                                                return (\r\n                                                    <WidgetNewItem\r\n                                                        index={pIndex}\r\n                                                        open={\r\n                                                            this.state.open &&\r\n                                                            this.state.widget.id == widget.id &&\r\n                                                            this.state.configuration.id == configuration.id\r\n                                                        }\r\n                                                        onSelect={() => { this.selectWidget(configuration, widget) }}\r\n                                                        onClose={() => { this.setState({ open: false }) }}\r\n                                                        onSubmit={(callback) => { this.submit(callback) }}\r\n                                                        setState={this.setState.bind(this)}\r\n                                                        widget={widget}\r\n                                                        settings={this.state.settings}\r\n                                                        configuration={configuration}\r\n                                                    />\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        ))\r\n                    }\r\n                </Loading>\r\n            </ >\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewWidget","class Utils {\r\n\r\n    static getSum(s = \"\") {\r\n        return s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);     \r\n    }\r\n\r\n}\r\nexport default Utils","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["WidgetNewItem","props","state","configuration","widget","loading","this","item","xs","md","lg","variant","CardActionArea","onClick","onSelect","CardContent","contents","filter","value","type","map","ppIndex","component","example","length","Divider","style","marginBottom","marginTop","color","dataSources","Collapse","in","open","timeout","unmountOnExit","settings","padding","container","spacing","setting","index","Action","id","options","label","String","capitalizeFirstLetter","split","setState","action","CardActions","IconButton","onSubmit","Add","React","NewWidget","module","configurations","setTitle","setActionType","Request","get","fetch","resultModules","resultSmartobjects","error","setMessage","package","message","history","push","data","forEach","smartobject","Array","isArray","widgets","pModule","name","reference","actions","callback","resetState","indexSettings","post","object","Utils","result","document","getElementById","scroll","top","left","content","pindex","settingsId","dataSource","includes","Desktop","isMobile","Paper","justifyContent","fontWeight","Loading","Accordion","borderRadius","expanded","onChange","AccordionSummary","expandIcon","ExpandMore","Box","room","AccordionDetails","pIndex","selectWidget","onClose","submit","bind","s","reduce","a","b","charCodeAt","createSvgIcon","_jsx","d","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","overridesResolver","styles","ownerState","root","disableSpacing","_extends","display","alignItems","marginLeft","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","getCardContentUtilityClass","CardContentRoot","paddingBottom","as"],"sourceRoot":""}