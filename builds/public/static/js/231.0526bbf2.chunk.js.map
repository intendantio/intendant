{"version":3,"file":"static/js/231.0526bbf2.chunk.js","mappings":"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","sources":["components/Mobile.js","components/CountdownRapport.js","screens/contents/Rapport/Detail.js","../node_modules/@mui/icons-material/esm/ArrowForwardIos.js","../node_modules/@mui/icons-material/esm/CleaningServices.js","../node_modules/@mui/icons-material/esm/Delete.js"],"sourcesContent":["export default function Mobile(props) {\r\n    if(props.isMobile) {\r\n        return props.children\r\n    } else {\r\n        return null\r\n    }\r\n}","import React from 'react'\r\nimport { Grid, Card, Skeleton, Box} from '@mui/material'\r\nimport Request from '../utils/Request'\r\nimport Moment from 'moment'\r\n\r\nimport Chart from \"react-apexcharts\";\r\n\r\n\r\nclass CountdownRapport extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.id,\r\n            remaning: 0,\r\n            percent: 0,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/rapports/\" + this.state.id)\r\n        if (result.error) {\r\n            this.setState({ remaning: 0 })\r\n        }  else {\r\n            let nextMoment = Moment(result.data.lastData.date).add({ second: result.data.interval })\r\n            this.idInterval = setInterval(() => {\r\n                let remaning = nextMoment.diff(Moment(), 'second')\r\n                this.setState({ remaning: remaning, percent: 100 - ((100 * remaning) / result.data.interval), loading: false })\r\n                if (remaning < 0) {\r\n                    this.setState({ remaning: 0, loading: true })\r\n                    clearInterval(this.idInterval)\r\n                    if(remaning > -3600) {\r\n                        setTimeout(() => {\r\n                            this.props.onRefresh()\r\n                            this.componentDidMount()\r\n                        }, 2000)\r\n                    }\r\n                } \r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.idInterval)\r\n    }\r\n\r\n    getOption() {\r\n        return (\r\n            {\r\n                series: [this.state.percent],\r\n                chart: {\r\n                    height: 350,\r\n                    type: 'radialBar'\r\n                },\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        hollow: {\r\n                            size: '55%',\r\n                        },\r\n                        track: {\r\n                            background: 'rgba(255,255,255,0.20)'\r\n                        },\r\n                        dataLabels: {\r\n                            name: {\r\n                                offsetY: 8,\r\n                                color: \"rgba(255,255,255,0.8)\",\r\n                                fontSize: 24,\r\n                                fontWeight: 600,\r\n                            },\r\n                            value: {\r\n                                show: false\r\n                            },\r\n                            total: {\r\n                                show: false\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n                colors: ['rgba(255,255,255,0.8)'],\r\n                labels: [Moment().set({hour: 0, minute: 0, second: 1}).set({seconds: this.state.remaning}).format(\"HH:mm:ss\") ],\r\n                title: {\r\n                    text: \"Next acquisition\",\r\n                    align: 'center',\r\n                    style: {\r\n                        color: \"#ffffff\",\r\n                        fontSize: 18,\r\n                        fontWeight: 500,\r\n                        fontFamily: 'Poppins,sans-serif',\r\n                    }\r\n                },\r\n                fill: {\r\n                    type: 'gradient',\r\n                    gradient: {\r\n                        gradientToColors: ['rgba(255,255,255,0.8)', 'rgba(255,255,255,1)']\r\n                    },\r\n                },\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12} md={12} lg={4}>\r\n                <Card variant='outlined' style={{ padding: 10 }}  >\r\n                    {\r\n                        this.state.loading ?\r\n                        <Box style={{justifyContent:'center', display:'flex', marginTop: 75, marginBottom: 50}}>\r\n                            <Skeleton variant='circular' height={230} width={230} />\r\n                        </Box>\r\n                        :\r\n                        <Chart options={this.getOption()} series={[this.state.percent]} type=\"radialBar\" height={354} />\r\n                    }\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CountdownRapport","import React from 'react'\r\nimport { Add, ShowChart, CleaningServices, Delete, ArrowBackIos, ArrowForwardIos, Event, Numbers, ModeCommentRounded } from '@mui/icons-material'\r\nimport { Typography, Paper, Grid, Button, Card, Box, Skeleton, IconButton } from '@mui/material'\r\nimport Alert from '../../../components/Alert'\r\nimport Desktop from '../../../components/Desktop'\r\nimport Request from '../../../utils/Request'\r\nimport Moment from 'moment'\r\n\r\nimport CountdownRapport from '../../../components/CountdownRapport'\r\nimport Chart from \"react-apexcharts\";\r\nimport Mobile from '../../../components/Mobile'\r\n\r\nclass Detail extends React.Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.INTERVALS = [\r\n            {\r\n                name: \"1H\",\r\n                durationFormat: \"DD/MM/YY HH:mm\",\r\n                start: Moment().subtract({ hour: 1 }).valueOf(),\r\n                end: Moment().valueOf(),\r\n                intervalObject: { hour: 1 },\r\n                intervalMinimum: 900\r\n            }, {\r\n                name: \"1D\",\r\n                durationFormat: \"DD/MM/YY\",\r\n                start: Moment().subtract({ day: 1 }).valueOf(),\r\n                end: Moment().valueOf(),\r\n                intervalObject: { day: 1 },\r\n                intervalMinimum: 14000\r\n            },\r\n            {\r\n                name: \"1W\",\r\n                durationFormat: \"DD/MM/YY\",\r\n                start: Moment().subtract({ week: 1 }).valueOf(),\r\n                end: Moment().valueOf(),\r\n                intervalObject: { week: 1 },\r\n                intervalMinimum: Infinity\r\n            },\r\n            {\r\n                name: \"1M\",\r\n                durationFormat: \"DD/MM/YY\",\r\n                start: Moment().subtract({ month: 1 }).valueOf(),\r\n                end: Moment().valueOf(),\r\n                intervalObject: { month: 1 },\r\n                intervalMinimum: Infinity\r\n            },\r\n            {\r\n                name: \"1Y\",\r\n                durationFormat: \"DD/MM/YY\",\r\n                start: Moment().subtract({ year: 1 }).valueOf(),\r\n                end: Moment().valueOf(),\r\n                intervalObject: { year: 1 },\r\n                intervalMinimum: Infinity\r\n            }\r\n        ]\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            loading: true,\r\n            rapport: {\r\n                configuration: {\r\n                    module: \"module\",\r\n                    name: \"\"\r\n                },\r\n                reference: \"\"\r\n            },\r\n            data: [],\r\n            start: Moment().valueOf(),\r\n            end: Moment().valueOf(),\r\n            filter: this.INTERVALS[0],\r\n            availableFilters: []\r\n        }\r\n\r\n        props.setTitle(\"Rapport\")\r\n        props.setActionType(\"return\")\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/rapports/\" + this.state.id)\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n            this.props.history.push('/rapport')\r\n        } else {\r\n            let availableFilters = this.getIntervals(result.data)\r\n            this.setState({\r\n                availableFilters: availableFilters,\r\n                rapport: result.data,\r\n                filter: availableFilters[0],\r\n                start: availableFilters[0].start,\r\n                end: availableFilters[0].end\r\n            }, () => {\r\n                this.update()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    getIntervals(rapport) {\r\n        let cIntervals = []\r\n        this.INTERVALS.forEach(interval => {\r\n            if (interval.intervalMinimum > rapport.interval) {\r\n                cIntervals.push(interval)\r\n            }\r\n        })\r\n        return cIntervals\r\n    }\r\n\r\n\r\n\r\n    async update() {\r\n        let result = await new Request().get().fetch(\"/api/rapports/\" + this.state.id + \"/data/\" + this.state.start + \"/\" + this.state.end)\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n            this.props.history.push('/rapport')\r\n        } else {\r\n            this.setState({\r\n                loading: false,\r\n                data: result.data.map(data => {\r\n                    return [data.date, data.value]\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        let result = await new Request().delete({}).fetch(\"/api/rapports/\" + this.state.id)\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n        } else {\r\n            this.props.history.push('/rapport')\r\n        }\r\n    }\r\n\r\n    async truncate() {\r\n        let result = await new Request().patch({}).fetch(\"/api/rapports/\" + this.state.id)\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n        } else {\r\n            this.update()\r\n        }\r\n    }\r\n\r\n    nextDuration() {\r\n        let newStart = Moment(this.state.start).add(this.state.filter.intervalObject).valueOf()\r\n        let newEnd = Moment(this.state.end).add(this.state.filter.intervalObject).valueOf()\r\n        this.setState({\r\n            start: newStart,\r\n            end: newEnd\r\n        }, () => {\r\n            this.update()\r\n        })\r\n    }\r\n\r\n    previousDuration() {\r\n        let newStart = Moment(this.state.start).subtract(this.state.filter.intervalObject).valueOf()\r\n        let newEnd = Moment(this.state.end).subtract(this.state.filter.intervalObject).valueOf()\r\n        this.setState({\r\n            start: newStart,\r\n            end: newEnd\r\n        }, () => {\r\n            this.update()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let option = {\r\n            chart: {\r\n                id: \"basic-bar\",\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                offsetX: -5,\r\n                animations: {\r\n                    enabled: true,\r\n                    easing: 'easeout',\r\n                    animateGradually: {\r\n                        enabled: true\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                show: false\r\n            },\r\n            xaxis: {\r\n                type: 'datetime',\r\n                axisBorder: {\r\n                    show: false\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    show: true,\r\n                    style: {\r\n                        colors: \"rgba(255, 255, 255, 0.7)\",\r\n                        fontSize: 14,\r\n                        fontWeight: 400,\r\n                        fontFamily: 'Poppins,sans-serif',\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: false\r\n                },\r\n                axisBorder: {\r\n                    show: false\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                theme: 'dark',\r\n                x: {\r\n                    formatter: (x) => {\r\n                        return Moment(x).format(\"HH:mm - DD/MM/YY\")\r\n                    }\r\n                }\r\n            },\r\n            title: {\r\n                text: String.capitalizeFirstLetter(this.state.rapport.reference),\r\n                align: 'center',\r\n                style: {\r\n                    color: \"#ffffff\",\r\n                    fontWeight: 500,\r\n                    fontSize: 18,\r\n                    fontFamily: 'Poppins,sans-serif',\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: String.capitalizeFirstLetter(this.state.rapport.configuration.module == \"smartobject\" ? this.state.rapport.smartobject.reference : \"\"),\r\n                align: 'center',\r\n                style: {\r\n                    color: \"rgba(255, 255, 255, 0.7)\",\r\n                    fontSize: 14,\r\n                    fontWeight: 400,\r\n                    fontFamily: 'Poppins,sans-serif',\r\n                }\r\n            },\r\n            noData: {\r\n                text: \"No data\",\r\n                align: 'center',\r\n                verticalAlign: 'middle',\r\n                offsetX: 0,\r\n                offsetY: 0,\r\n                style: {\r\n                    color: \"rgba(255, 255, 255, 0.7)\",\r\n                    fontSize: 16,\r\n                    fontWeight: 400,\r\n                    fontFamily: 'Poppins,sans-serif',\r\n                }\r\n            },\r\n            stroke: {\r\n                width: this.props.isMobile ? 3 : 5,\r\n                curve: 'smooth'\r\n            },\r\n            colors: ['rgba(255,255,255,0.8)'],\r\n            fill: {\r\n                type: 'gradient',\r\n                gradient: {\r\n                    gradientToColors: ['rgba(255,255,255,0.8)', 'rgba(255,255,255,0.8)']\r\n                },\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <Desktop {... this.props}>\r\n                    <Paper variant=\"outlined\" style={{ padding: 12, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <Typography variant='h6' fontWeight='bold' >Rapport</Typography>\r\n                        <Typography variant='subtitle2' color=\"text.secondary\" >Show what you need</Typography>\r\n                    </Paper>\r\n                </Desktop>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} md={6} lg={4}>\r\n                        <Card variant='outlined' style={{ display: 'flex' }}  >\r\n                            {\r\n                                this.state.availableFilters.length == 0 ?\r\n                                    <Box style={{ paddingLeft: 20, paddingRight: 20 }}>\r\n                                        <Skeleton height={25} />\r\n                                    </Box>\r\n                                    : this.state.availableFilters.map((interval, index) => {\r\n                                        let isCurrent = interval.name == this.state.filter.name\r\n                                        return (\r\n                                            <Button key={index} style={{ flex: 1, display: 'flex', justifyContent: 'center', borderRadius: 0 }} size='large' color='inherit' onClick={() => { this.setState({ filter: interval, start: interval.start, end: interval.end }, () => { this.update() }) }}>\r\n                                                <Typography style={{ fontWeight: isCurrent ? 600 : 'normal' }} color={isCurrent ? \"\" : \"text.secondary\"} >{interval.name}</Typography>\r\n                                            </Button>\r\n                                        )\r\n                                    })\r\n                            }\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} lg={4}>\r\n                        <Card variant='outlined' style={{ display: 'flex', justifyContent: 'space-around' }}  >\r\n                            <IconButton style={{ flex: 1, borderRadius: 0 }} onClick={() => { this.previousDuration() }} >\r\n                                <ArrowBackIos />\r\n                            </IconButton>\r\n                            <Typography style={{ flex: 5, alignSelf: 'center' }} textAlign='center' color=\"text.secondary\" variant={this.props.isMobile ? 'body2' : 'subtitle2'} >{Moment(this.state.start).format(this.state.filter.durationFormat) + \" - \" + Moment(this.state.end).format(this.state.filter.durationFormat)}</Typography>\r\n                            <IconButton style={{ flex: 1, borderRadius: 0 }} onClick={() => { this.nextDuration() }} >\r\n                                <ArrowForwardIos />\r\n                            </IconButton>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Desktop {... this.props}>\r\n                        <Grid item xs={12} md={1} lg={2}>\r\n                            <Card variant='outlined' style={{ height: '100%', width: '100%', display: 'flex', justifyContent: 'center' }} >\r\n                                <Typography style={{ alignSelf: 'center'}} textAlign='center' variant='subtitle2' ></Typography>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={1} lg={1}>\r\n                            <Card variant='outlined' style={{ display: 'flex', justifyContent: 'center' }}  >\r\n                                <IconButton style={{ flex: 1, display: 'flex', borderRadius: 0 }} onClick={() => { this.truncate() }} >\r\n                                    <CleaningServices color=\"text.secondary\" />\r\n                                </IconButton>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={1} lg={1}>\r\n                            <Card variant='outlined' style={{ display: 'flex', justifyContent: 'center' }}  >\r\n                                <IconButton style={{ flex: 1, display: 'flex', borderRadius: 0 }} onClick={() => { this.delete() }}>\r\n                                    <Delete />\r\n                                </IconButton>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Desktop>\r\n                    <Grid item xs={12} md={12} lg={8}>\r\n                        <Card variant='outlined' style={{ paddingTop: 10, paddingLeft: 10, paddingRight: 15 }}  >\r\n                            {\r\n                                this.state.loading ?\r\n                                    <Box style={{ paddingLeft: 20, paddingRight: 20, paddingBottom: 20 }}>\r\n                                        <Skeleton height={25} />\r\n                                        <Skeleton style={{ marginTop: 10 }} height={20} />\r\n                                        <Skeleton style={{ marginTop: 30 }} variant='rectangular' height={260} />\r\n                                    </Box>\r\n                                    : <Chart options={option} series={[\r\n                                        {\r\n                                            name: this.state.rapport.reference,\r\n                                            data: this.state.data\r\n                                        }\r\n                                    ]} type=\"line\" height={350} />\r\n                            }\r\n                        </Card>\r\n                    </Grid>\r\n                    <CountdownRapport id={this.state.id} onRefresh={() => { this.update() }} />\r\n                    <Mobile {... this.props}>\r\n                        <Grid item xs={6} md={1} lg={1}>\r\n                            <Card variant='outlined' style={{ display: 'flex', justifyContent: 'center' }}  >\r\n                                <IconButton style={{ flex: 1, display: 'flex', borderRadius: 0 }} onClick={() => { this.truncate() }} >\r\n                                    <CleaningServices color=\"text.secondary\" />\r\n                                </IconButton>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={1} lg={1}>\r\n                            <Card variant='outlined' style={{ display: 'flex', justifyContent: 'center' }}  >\r\n                                <IconButton style={{ flex: 1, display: 'flex', borderRadius: 0 }} onClick={() => { this.delete() }}>\r\n                                    <Delete />\r\n                                </IconButton>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Mobile>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Detail\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 11h-1V3c0-1.1-.9-2-2-2h-2c-1.1 0-2 .9-2 2v8H8c-2.76 0-5 2.24-5 5v7h18v-7c0-2.76-2.24-5-5-5zm3 10h-2v-3c0-.55-.45-1-1-1s-1 .45-1 1v3h-2v-3c0-.55-.45-1-1-1s-1 .45-1 1v3H9v-3c0-.55-.45-1-1-1s-1 .45-1 1v3H5v-5c0-1.65 1.35-3 3-3h8c1.65 0 3 1.35 3 3v5z\"\n}), 'CleaningServices');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');"],"names":["Mobile","props","isMobile","children","CountdownRapport","state","id","remaning","percent","loading","Request","get","fetch","this","result","error","setState","nextMoment","Moment","data","lastData","date","add","second","interval","idInterval","setInterval","diff","clearInterval","setTimeout","onRefresh","componentDidMount","series","chart","height","type","plotOptions","radialBar","hollow","size","track","background","dataLabels","name","offsetY","color","fontSize","fontWeight","value","show","total","colors","labels","set","hour","minute","seconds","format","title","text","align","style","fontFamily","fill","gradient","gradientToColors","Grid","item","xs","md","lg","Card","variant","padding","Box","justifyContent","display","marginTop","marginBottom","Skeleton","width","options","getOption","React","Detail","INTERVALS","durationFormat","start","subtract","valueOf","end","intervalObject","intervalMinimum","day","week","Infinity","month","year","match","params","rapport","configuration","module","reference","filter","availableFilters","setTitle","setActionType","setMessage","package","message","history","push","getIntervals","update","cIntervals","forEach","map","delete","patch","newStart","newEnd","option","zoom","enabled","toolbar","offsetX","animations","easing","animateGradually","grid","xaxis","axisBorder","axisTicks","yaxis","tooltip","theme","x","formatter","String","capitalizeFirstLetter","subtitle","smartobject","noData","verticalAlign","stroke","curve","Desktop","Paper","Typography","container","spacing","length","paddingLeft","paddingRight","index","isCurrent","Button","flex","borderRadius","onClick","IconButton","previousDuration","ArrowBackIos","alignSelf","textAlign","nextDuration","ArrowForwardIos","truncate","CleaningServices","Delete","paddingTop","paddingBottom","createSvgIcon","_jsx","d"],"sourceRoot":""}