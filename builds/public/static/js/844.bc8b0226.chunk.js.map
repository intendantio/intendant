{"version":3,"file":"static/js/844.bc8b0226.chunk.js","mappings":"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","sources":["screens/contents/Module/Detail.js","../node_modules/@mui/icons-material/esm/Delete.js"],"sourcesContent":["import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\nimport { Paper, Alert, Typography, Card, Grid, Accordion, Box, Modal, AccordionSummary, AccordionDetails, ListItem, TableCell, TableRow, Button, TextField, FormControlLabel, IconButton, Switch, Divider, CardActionArea } from '@mui/material'\r\nimport { ExpandMore, Edit, Room, FlashOff, FlashOn, House, Cached, RocketLaunch } from '@mui/icons-material'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Desktop from '../../../components/Desktop'\r\nimport Request from '../../../utils/Request'\r\nimport Loading from '../../../components/Loading'\r\nimport * as AbstractIcon from '@mui/icons-material'\r\nimport DeleteButton from '../../../components/views/DeleteButton'\r\n\r\n\r\nclass Detail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            module: {\r\n                reference: \"\",\r\n                actions: [],\r\n                room: {},\r\n                state: {\r\n                    status: 'unknown'\r\n                }\r\n            },\r\n            expanded: \"action\",\r\n            rooms: [],\r\n            modalOpen: false,\r\n            content: {},\r\n            loadingAction: \"\",\r\n            loading: true\r\n        }\r\n        props.setTitle(\"\")\r\n        props.setActionType(\"return\")\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/modules/\" + this.state.id)\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n            this.props.history.push('/module')\r\n        } else {\r\n            this.props.setTitle(result.data.reference)\r\n            this.setState({ loadingAction: \"\", loading: false, module: result.data })\r\n        }\r\n    }\r\n\r\n    async executeAction(action, settings) {\r\n        this.setState({ loadingAction: action.id })\r\n        let tmp = {}\r\n        let resetState = {}\r\n        for (let index = 0; index < settings.length; index++) {\r\n            let setting = settings[index]\r\n            let value = this.state[action.id + \"-\" + setting.id]\r\n            resetState[action.id + \"-\" + setting.id] = null\r\n            if (value) {\r\n                tmp[setting.id] = value\r\n            } else {\r\n                tmp[setting.id] = null\r\n            }\r\n        }\r\n        this.setState(resetState)\r\n        let result = await new Request().post({ settings: tmp }).fetch(\"/api/modules/\" + this.state.id + \"/actions/\" + action.id)\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n            this.setState({ loadingAction: \"\" })\r\n        } else {\r\n            this.setState({\r\n                modalOpen: true,\r\n                content: result\r\n            })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let lastGroup = \"\"\r\n        return (\r\n            <>\r\n                <Desktop {... this.props}>\r\n                    <Paper variant=\"outlined\" style={{ padding: 12, justifyContent: 'left' }}>\r\n                        <Box style={{ display: 'flex', flex: 1 }} >\r\n                            <Box style={{ flex: 4, alignSelf: 'center', alignItems: 'center' }} >\r\n                                <Typography variant='h6' fontWeight='bold'  >\r\n                                    {String.capitalizeFirstLetter(this.state.module.reference)}\r\n                                </Typography>\r\n                                <Typography variant='subtitle2' color=\"text.secondary\"  >\r\n                                    {String.capitalizeFirstLetter(this.state.module.name)}\r\n                                </Typography>\r\n                            </Box>\r\n                        </Box>\r\n                    </Paper>\r\n                </Desktop>\r\n                <Loading loading={this.state.loading}>\r\n                    <Card variant='outlined' style={{ padding: 12, marginTop: 8 }} >\r\n                        <Grid container spacing={2} >\r\n                                {\r\n                                    this.state.module.actions.map((action, index) => {\r\n                                        return (\r\n                                            <Grid key={index} item xs={12} md={12} lg={12}  >\r\n                                                <Grid container spacing={action.settings.length == 0 && this.props.isMobile ? 0 : 2} >\r\n                                                    <Grid item xs={12} md={3} lg={3} >\r\n                                                        <Card elevation={2}  >\r\n                                                            <Button disabled={action.id == this.state.loadingAction} size='large' variant='contained' onClick={() => { this.executeAction(action, action.settings) }} style={{ width: '100%', flexDirection: 'row', display: 'flex' }}>\r\n                                                                <Typography textAlign='center' variant='subtitle2'>\r\n                                                                    {action.name}\r\n                                                                </Typography>\r\n                                                            </Button>\r\n                                                        </Card>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} md={9} lg={9} style={{ alignSelf: 'center' }}>\r\n                                                        <Grid container spacing={1}>\r\n                                                            {\r\n                                                                action.settings.length == 0 ?\r\n                                                                    null\r\n                                                                    :\r\n                                                                    action.settings.map((setting, index) => {\r\n                                                                        return (\r\n                                                                            <Action options={setting.options} label={String.capitalizeFirstLetter(setting.id)} setState={this.setState.bind(this)} id={action.id + \"-\" + setting.id} action={setting} />\r\n                                                                        )\r\n                                                                    })\r\n                                                            }\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )\r\n                                    })\r\n                                }\r\n                        </Grid>\r\n                    </Card>\r\n                    <Modal open={this.state.modalOpen} style={{ top: '25%', left: '25%' }} onClose={() => { this.setState({ modalOpen: false }) }} >\r\n                        <Card variant='outlined' style={{ overflow: 'auto', maxHeight: '50vh', maxWidth: '50vw', padding: 20 }}>\r\n                            <JSONPretty style={{ fontSize: 12 }} id=\"json-pretty\" data={this.state.content}></JSONPretty>\r\n\r\n                        </Card>\r\n                    </Modal>\r\n                </Loading>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');"],"names":["Detail","props","state","id","match","params","module","reference","actions","room","status","expanded","rooms","modalOpen","content","loadingAction","loading","setTitle","setActionType","Request","get","fetch","this","result","error","setMessage","package","message","history","push","data","setState","action","settings","tmp","resetState","index","length","setting","value","post","componentDidMount","variant","style","padding","justifyContent","display","flex","alignSelf","alignItems","fontWeight","String","capitalizeFirstLetter","color","name","marginTop","container","spacing","map","item","xs","md","lg","isMobile","elevation","disabled","size","onClick","executeAction","width","flexDirection","textAlign","options","label","bind","open","top","left","onClose","overflow","maxHeight","maxWidth","fontSize","React","createSvgIcon","_jsx","d"],"sourceRoot":""}