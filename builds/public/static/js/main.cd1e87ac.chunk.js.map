{"version":3,"sources":["components/Alert.js","utils/Request.js","screens/contents/SmartObject/List.js","components/WeekSchedul.js","components/GalleryList.js","Theme.js","components/Action.js","screens/contents/SmartObject/Detail.js","screens/contents/SmartObject/Redirect.js","screens/contents/SmartObject/New.js","screens/contents/Process/List.js","utils/Source.js","components/IconList.js","screens/contents/Process/New.js","screens/contents/Process/Detail.js","screens/contents/Routine/List.js","screens/contents/Routine/New.js","screens/contents/Routine/Detail.js","screens/contents/Module/List.js","screens/contents/Module/Detail.js","screens/contents/Market/List.js","screens/contents/Widget/List.js","screens/contents/Widget/New.js","screens/contents/Widget/Detail.js","screens/contents/User/List.js","screens/contents/User/New.js","screens/contents/QrCode/QrCode.js","screens/contents/User/NewPassword.js","components/Sidebar.js","screens/contents/Localisation/List.js","screens/contents/Localisation/New.js","screens/contents/Localisation/Detail.js","screens/contents/Authorisation/List.js","screens/Main.js","screens/GetStarted.js","screens/Authentification.js","App.js","index.js"],"names":["MuiAlert","props","Snackbar","open","autoHideDuration","onClose","Alert","severity","elevation","Request","this","method","data","url","a","authorization","localStorage","getItem","server","fetch","headers","body","JSON","stringify","result","json","error","message","package","Package","name","Smartobject","state","page","enabled","smartobjects","get","setState","loading","Paper","style","display","padding","alignContent","justifyContent","alignItems","alignSelf","Typography","variant","fontSize","Box","TableContainer","overflowX","Table","TableHead","TableRow","TableCell","borderColor","align","TableBody","slice","map","smartobject","index","onClick","history","push","id","hover","cursor","borderBottom","reference","height","width","filter","src","process","status","icon","string","localisation","charAt","toUpperCase","Moment","lastUse","format","flexDirection","marginTop","marginBottom","to","textDecoration","color","IconButton","borderRadius","Add","TablePagination","component","count","length","rowsPerPage","rowsPerPageOptions","onPageChange","event","React","Component","Week","value","sunday","monday","tuesday","wednesday","friday","saturday","time","timeSplit","split","thursday","onChange","paddingTop","paddingBottom","paddingLeft","paddingRight","flex","noChangeMode","size","onChangeMode","Cached","textAlign","marginRight","marginLeft","Button","fullWidth","calculate","TextField","defaultValue","currentTarget","placeholder","GalleryList","icons","action","remote","resultJSON","Grid","container","spacing","item","xs","onSelect","_","image","responsiveFontSizes","createTheme","palette","mode","primary","main","secondary","Colors","background","default","paper","typography","fontFamily","shape","components","MuiOutlinedInput","styleOverrides","input","position","top","left","transform","backgroundColor","Theme","Action","modal","tmp","type","multiline","updateAction","Modal","Fade","in","WeekSchedul","FormControl","minWidth","InputLabel","Select","target","label","values","MenuItem","styles","colors","triangle","onChangeComplete","hex","Slider","valueLabelDisplay","orientation","min","max","step","borderWidth","borderStyle","Checkbox","defaultChecked","replace","window","location","origin","btoa","object","disabled","isDisabled","fontWeight","nativeEvent","InputProps","endAdornment","InputAdornment","margin","Popover","anchorOrigin","vertical","horizontal","transformOrigin","DetailSmartObject","match","params","profiles","localisations","referenceArguments","valueArguments","executeInformation","resultProfile","resultLocalisation","resultSmartobject","delete","settings","argument","undefined","post","componentDidMount","pArguments","profile","idProfile","idLocalisation","forEach","pLocalisation","updateLocalisation","module","Divider","arguments","pArgument","navigator","clipboard","writeText","FileCopy","deleteSmartobjectArguments","Delete","insertSmartobjectArguments","actions","maxWidth","executeAction","gridRowGap","gridTemplateColumns","setting","pIndex","bind","Close","parse","setLocalisation","pprofile","ListItem","FormControlLabel","control","Switch","checked","deleteProfile","insertProfile","RedirectSmartobject","search","param","cancel","atob","add","concat","toString","setTimeout","NewSmartobject","types","resultType","pModule","key","setModule","getSettings","Save","Process","processs","_process","description","espace","Source","query","resultModule","resultProcess","resultEssentials","sources","includes","essentials","pEssential","inputs","name_enable","name_disable","IconList","New","popup","espaces","inputReference","inputName","inputType","inputMode","isChecked","source","arrSources","getSource","resultSource","resultEspace","fSource","fAction","enable","nameEnable","nameDisable","modeArgument","borderBottomWidth","setInput","removeModeArgument","setSource","setAction","confirmationModule","removeSource","set","DetailProcess","referenceInput","nameInput","typeInput","modeInput","idsource","referenceSettings","valueSettings","startIcon","Autorenew","deleteProcessInput","insertProcessInput","Check","deleteSource","addSource","Routine","routines","put","routine","updateStatus","success","PlayArrow","Pause","Edit","duplicate","NewRoutine","modalTrigger","modalEffect","watch","triggers","effects","statement","expected","trigger","effect","updateName","updateIcon","updateWatch","textTransform","removeTrigger","reset","removeEffect","save","addTrigger","addEffect","Module","modules","pmodule","md5","Detail","hashId","_module","Configuration","markets","pageMarket","pPackage","resultPing","resultMarket","market","currentVersion","version","uninstall","GetApp","upgrade","install","disableElevation","Widget","widgets","widget","contents","sort","b","rank","content","_content","NewWidget","contentSources","widgetReference","resultConfiguration","find","contentSource","tmpsettings","pindex","deleteContent","insertSource","setType","insertContent","needSave","pContent","native","onBlur","update","setContent","users","user","login","updateProfile","Settings","password","confirmationPassword","QrCode","includeMargin","NewPassword","changePassword","Sidebar","isMobile","BottomNavigation","zIndex","sx","bottom","right","newValue","BottomNavigationAction","DevicesOther","House","Category","Extension","Menu","Drawer","anchor","minHeight","button","ListItemIcon","ListItemText","DeviceHub","AccountTree","Person","ShoppingCart","onDisconnect","ExitToApp","Localisation","NewLocaliation","capitalizeFirstLetter","DetailLocalisation","Security","selectProfile","authorizations","onSelectProfile","warning","info","pAuthorization","secure","updateSecure","getColor","Main","mediaQueries","mediaMatch","matchMedia","matches","addListener","e","basename","overflowY","exact","path","SmartObject","NewSmartObject","RedirectSmartObject","DetailModule","DetailRoutine","DetailWidget","ListProcess","NewProcess","User","NewUser","Market","NewLocalisation","exect","Authorisation","GetStarted","authentification","confirmePassword","onFinish","lineHeight","noValidate","autoComplete","inputProps","maxLength","register","Authentification","getStarted","customAddress","address","checkServer","setItem","token","removeItem","ok","protocol","onSubmit","preventDefault","autoFocus","on","disconnect","App","ThemeProvider","theme","CssBaseline","userSelect","outline","WebkitTapHighlightColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd1e87ac.chunk.js","sourcesContent":["\r\nimport { Snackbar, Alert } from '@mui/material'\r\n\r\nfunction MuiAlert(props) {\r\n    return (\r\n        <Snackbar open={props.open} autoHideDuration={6000} onClose={() => props.onClose()}>\r\n            <Alert severity={props.severity} elevation={6}  {...props} />\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default MuiAlert","import Package from '../../package.json'\r\nclass Request {\r\n\r\n    constructor() {\r\n        this.method = 'GET'\r\n    }\r\n\r\n    post(data) {\r\n        this.method = 'POST'\r\n        this.data = data\r\n        return this\r\n    }\r\n\r\n    get() {\r\n        this.method = 'GET'\r\n        return this\r\n    }\r\n\r\n    delete() {\r\n        this.method = 'DELETE'\r\n        return this\r\n    }\r\n\r\n    put(data) {\r\n        this.method = 'PUT'\r\n        this.data = data\r\n        return this\r\n    }\r\n\r\n    async fetch(url) {\r\n        let authorization = localStorage.getItem(\"authorization\")\r\n        let server = localStorage.getItem(\"server\")\r\n        try {\r\n            let result = await fetch(server + url, {\r\n                method: this.method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + authorization\r\n                },\r\n                body: this.method == 'POST' || this.method == 'PUT' ? JSON.stringify(this.data) : null\r\n            })\r\n            return await result.json()\r\n        } catch (error) {\r\n            return {\r\n                error: true,\r\n                message: \"An error has occurred\", \r\n                package: Package.name\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Request","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'moment'\r\nimport { Add } from '@mui/icons-material'\r\nimport { Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton, Box } from '@mui/material'\r\nimport Icon from '../../../utils/Icon'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Smartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            smartobjects: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/smartobjects\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                smartobjects: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <Box>\r\n                            <Paper variant=\"outlined\" >\r\n                                <TableContainer style={{overflowX: 'hidden'}}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell style={{borderColor:'rgba(255, 255, 255, 0.12)'}} align=\"left\">\r\n                                                    <Typography variant='body1'>\r\n                                                        Reference\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell style={{borderColor:'rgba(255, 255, 255, 0.12)'}} align=\"center\">\r\n                                                    <Typography variant='body1'>\r\n                                                        Status\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell style={{borderColor:'rgba(255, 255, 255, 0.12)'}} align=\"center\">\r\n                                                    <Typography variant='body1'>\r\n                                                        Localisation\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell style={{borderColor:'rgba(255, 255, 255, 0.12)'}} align=\"center\">\r\n                                                    <Typography variant='body1'>\r\n                                                        Last use\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.state.smartobjects.slice(this.state.page * 10, (this.state.page + 1) * 10).map((smartobject, index) => (\r\n                                                <TableRow onClick={() => { this.props.history.push(\"/smartobject/\" + smartobject.id) }} hover key={index} style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\" style={{ borderBottom: 0 }} >\r\n                                                        <Typography variant='body1'>\r\n                                                            {smartobject.reference}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" style={{ borderBottom: 0 }} >\r\n                                                        <Typography variant='body1'>\r\n                                                            <img style={{ height: 25, width: 25, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + smartobject.status.icon + \".svg\"} />\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" style={{ borderBottom: 0 }} >\r\n                                                        <Typography variant='body1'>\r\n                                                            {capitalizeFirstLetter(smartobject.localisation.name)}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" style={{ borderBottom: 0 }} >\r\n                                                        <Typography variant='body1'>\r\n                                                            {Moment(smartobject.lastUse).format(\"hh:mm DD/MM\")}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Paper>\r\n                            <Box style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper variant='outlined' style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    <Link to=\"/smartobject/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.smartobjects.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onPageChange={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport default Smartobject","import React from 'react'\r\nimport { TextField, Button, IconButton } from '@mui/material'\r\nimport { Save, Cached } from '@mui/icons-material'\r\n\r\nclass Week extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: \"\",\r\n            sunday: false,\r\n            monday: false,\r\n            tuesday: false,\r\n            wednesday: false,\r\n            friday: false,\r\n            saturday: false,\r\n            time: \"00:00\"\r\n        }\r\n    }\r\n\r\n    calculate() {\r\n        let timeSplit = this.state.time.split(\":\")\r\n        if(timeSplit.length != 2) { return }\r\n        let value =  timeSplit[1] + ' ' +  timeSplit[0]  + ' * * ' +  \r\n            (this.state.sunday ? \"0,\" : \"\") +\r\n            (this.state.monday ? \"1,\" : \"\") +\r\n            (this.state.tuesday ? \"2,\" : \"\") +\r\n            (this.state.wednesday ? \"3,\" : \"\") +\r\n            (this.state.thursday ? \"4,\" : \"\") +\r\n            (this.state.friday ? \"5,\" : \"\") +\r\n            (this.state.saturday ? \"6,\" : \"\")\r\n\r\n        value = value.slice(0,value.length - 1 )\r\n        this.props.onChange(value)\r\n    }\r\n\r\n    render() {\r\n        return (<div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, paddingLeft: 5, paddingRight: 5, flexDirection: 'column' }}>\r\n            <div style={{ display: 'flex', flexDirection: 'row', alignContent: 'center', alignItems: 'center', flex: 1, justifyContent: 'space-between' }}>\r\n                {\r\n                    this.props.noChangeMode ? null : \r\n                    <div style={{ flex: 1 }}>\r\n                        <IconButton size='small' onClick={() => { this.props.onChangeMode() }} variant='outlined'>\r\n                            <Cached />\r\n                        </IconButton>\r\n                    </div>\r\n                }\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button color='inherit' fullWidth size='small' variant={this.state.sunday ? 'contained' : 'outlined'} onClick={() => {this.setState({sunday: !this.state.sunday},() => {this.calculate()})}}  >{\"Sunday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button color='inherit' fullWidth size='small' variant={this.state.monday ? 'contained' : 'outlined'} onClick={() => {this.setState({monday: !this.state.monday},() => {this.calculate()})}} >{\"Monday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button color='inherit' fullWidth size='small' variant={this.state.tuesday ? 'contained' : 'outlined'} onClick={() => {this.setState({tuesday: !this.state.tuesday},() => {this.calculate()})}} >{\"Tuesday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button color='inherit' fullWidth size='small' variant={this.state.wednesday ? 'contained' : 'outlined'} onClick={() => {this.setState({wednesday: !this.state.wednesday},() => {this.calculate()})}} >{\"Wednesday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button color='inherit' fullWidth size='small' variant={this.state.thursday ? 'contained' : 'outlined'} onClick={() => {this.setState({thursday: !this.state.thursday},() => {this.calculate()})}} >{\"Thursday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button color='inherit' fullWidth size='small' variant={this.state.friday ? 'contained' : 'outlined'} onClick={() => {this.setState({friday: !this.state.friday},() => {this.calculate()})}} >{\"Friday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button color='inherit' fullWidth size='small' variant={this.state.saturday ? 'contained' : 'outlined'} onClick={() => {this.setState({saturday: !this.state.saturday},() => {this.calculate()})}} >{\"Saturday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }} >\r\n                    <TextField  defaultValue='00:00'  size='small' value={this.state.time}  onChange={(event) => { this.setState({ time: event.currentTarget.value },() => {this.calculate()}) }}  placeholder='hh:mm' variant='outlined' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Week","import React from 'react'\r\nimport {Paper, Grid} from '@mui/material'\r\nimport _ from 'lodash'\r\n\r\nclass GalleryList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            icons: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let result = await fetch(this.props.action.remote.url)\r\n            let resultJSON = await result.json()\r\n            this.setState({ icons: resultJSON.data.slice })\r\n        } catch (error) {\r\n            this.setState({ icons: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={1} style={{ width: '32vw', height: '32vw',  padding: 10, marginRight: 10 }}>\r\n                {\r\n\r\n                    this.state.icons.map((icon,index) => {\r\n                        return (\r\n                            <Grid item xs key={index} >\r\n                                <Paper variant=\"outlined\" onClick={() => {this.props.onSelect && this.props.onSelect(_.get(icon,this.props.action.remote.id))}} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                                    <img style={{ height: 30, width: 30, alignSelf: 'center' }} src={_.get(icon,this.props.action.remote.image) } />\r\n                                </Paper>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GalleryList","import { createTheme, responsiveFontSizes } from '@mui/material/styles'\r\nimport * as Colors from '@mui/material/colors'\r\nexport default responsiveFontSizes(createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: 'rgba(255, 255, 255, 0.9)',\r\n    },\r\n    secondary: {\r\n      main: Colors.indigo[500],\r\n    },\r\n    background: {\r\n      default: \"#0A1929\",\r\n      paper: \"rgb(0, 30, 60)\"\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    \"fontWeightLight\": 200,\r\n    \"fontWeightRegular\": 400,\r\n    \"fontWeightMedium\": 500,\r\n    \"fontWeightBold\": 600\r\n  },\r\n  shape: {\r\n    borderRadius: 5\r\n  },\r\n  components: {\r\n    MuiOutlinedInput: {\r\n      styleOverrides: {\r\n        input: {\r\n          \"&:-webkit-autofill\": {\r\n            \"-webkit-box-shadow\": \"0 0 0 100px var(--primary-weak) inset\",\r\n            \"-webkit-text-fill-color\": \"var(--text-primary)\",\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}))","import React from 'react'\r\nimport { InputAdornment, IconButton, TextField, Button, Popover, Checkbox, Fade, Paper, Typography, Modal, Slider, FormControl, Select, MenuItem, InputLabel } from '@mui/material'\r\nimport { TwitterPicker } from 'react-color'\r\nimport WeekSchedul from './WeekSchedul'\r\nimport { Delete, List } from '@mui/icons-material'\r\nimport GalleryList from './GalleryList'\r\nimport Theme from '../Theme'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass Action extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            action: this.props.action,\r\n            setState: this.props.setState,\r\n            modal: false,\r\n            value: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"settings-\" + action.id] = value\r\n        this.state.setState(tmp)\r\n        this.setState({\r\n            value: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        switch (this.state.action.type) {\r\n            case 'text':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, width: '200px' }} >\r\n                        <TextField multiline variant=\"outlined\" placeholder={this.state.action.id == \"default\" ? \"\" : this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\r\n                    </div>\r\n                )\r\n            case 'cron':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, width: '200px' }} >\r\n                        <Modal open={this.state.modal} onClose={() => { this.setState({ modal: false }) }} >\r\n                            <Fade in={this.state.modal} >\r\n                                <Paper style={style}>\r\n                                    <WeekSchedul noChangeMode onChange={(value) => { this.updateAction(this.state.action, value); this.setState({ value: value }) }} onChangeMode={() => { }} />\r\n                                </Paper>\r\n                            </Fade>\r\n                        </Modal>\r\n                        <Button color='inherit' variant='outlined' style={{ flexDirection: 'column', width: '200px' }} size='large' onClick={() => { this.setState({ modal: true }) }}>\r\n                            <Typography style={{ fontSize: this.state.value.length > 0 ? 12 : 14, padding: 8, color: this.state.value.length > 0 ? 'white' : 'rgba(255, 255, 255, 0.6)' }}>\r\n                                {this.state.value.length == 0 ? this.state.action.id == \"default\" ? \"\" : this.state.action.id : this.state.value}\r\n                            </Typography>\r\n                        </Button>\r\n                    </div>\r\n                )\r\n            case 'number':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, width: '200px' }} >\r\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\r\n                    </div>\r\n                )\r\n            case 'select':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10 }} >\r\n                        <FormControl variant=\"outlined\" style={{ minWidth: '200px' }} >\r\n                            {\r\n                                this.state.action.id == \"default\" ? null :\r\n                                    <InputLabel>{this.state.action.id}</InputLabel>\r\n                            }\r\n                            <Select value={this.state.value} onChange={(event) => { this.setState({ value: event.target.value }); this.updateAction(this.state.action, event.target.value) }} label={this.state.action.id == \"default\" ? null : this.state.action.id} >\r\n                                {\r\n                                    this.state.action.values.map((value, index) => {\r\n                                        if (typeof value == 'object') {\r\n                                            return <MenuItem key={index} value={value.id} >{value.reference}</MenuItem>\r\n                                        } else {\r\n                                            return <MenuItem key={index} value={value} >{value}</MenuItem>\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                )\r\n            case 'colorpicker':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'flex-start', display: 'flex', marginRight: 5, flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row' }} >\r\n                        <TwitterPicker\r\n                            styles={{ padding: 0 }}\r\n                            colors={['#d00a0a', '#FF6900', '#FCB900', '#F9DE79', '#F78DA7', '#9900EF', '#0e60f4', '#8ED1FC', '#11f4b8', '#53b909']}\r\n                            triangle='hide'\r\n                            color={this.state.value}\r\n                            onChangeComplete={(color) => { this.updateAction(this.state.action, color.hex) }}\r\n                        />\r\n                    </div>\r\n                )\r\n            case 'slider':\r\n                return (\r\n                    <Paper variant='outlined' elevation={1} style={{ minWidth: 150, alignSelf: 'flex-start', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row', paddingLeft: 10, paddingRight: 10, paddingTop: 10, paddingBottom: 10, marginRight: 10 }} >\r\n                        {\r\n                            this.state.action.id == \"default\" ? null :\r\n                                <Typography variant='body2' style={{ textAlign: 'center', padding: 0 }} >\r\n                                    {this.state.action.id}\r\n                                </Typography>\r\n                        }\r\n                        <Slider\r\n                            size='small'\r\n                            defaultValue={0}\r\n                            valueLabelDisplay=\"auto\"\r\n                            orientation={this.props.orientation ? this.props.orientation : 'horizontal'}\r\n                            min={this.state.action.min}\r\n                            max={this.state.action.max}\r\n                            step={this.state.action.step}\r\n                            onChange={(event, value) => { this.updateAction(this.state.action, value) }}\r\n                        />\r\n                    </Paper>\r\n                )\r\n            case 'checkbox':\r\n                return (\r\n                    <div elevation={3} style={{ height: \"fit-content\", alignSelf: 'center', borderWidth: 1, borderStyle: 'solid', borderRadius: 5, borderColor: 'rgba(255, 255, 255, 0.23)', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15, marginRight: 10 }} >\r\n                        {\r\n                            this.state.action.id == \"default\" ? null :\r\n                                <Typography variant='body1' style={{ textAlign: 'center', color: 'rgba(255, 255, 255, 0.5)', padding: 0 }}>\r\n                                    {this.state.action.id}\r\n                                </Typography>\r\n                        }\r\n                        <Checkbox defaultChecked={this.state.action.default} color='primary' onChange={(event, value) => { this.updateAction(this.state.action, value) }} />\r\n                    </div>\r\n                )\r\n            case 'oauth2':\r\n                let url = this.state.action.url.replace(\"%local%\",\r\n                    window.location.origin +\r\n                    \"/admin/smartobject/redirect/\" +\r\n                    window.btoa(\r\n                        JSON.stringify(this.props.object)\r\n                    )\r\n                )\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, marginTop: 10, width: '200px' }} >\r\n                        <Button color='inherit' disabled={this.props.isDisabled} variant='outlined' style={{ flexDirection: 'column', width: '200px' }} size='small' onClick={() => { window.location.replace(url) }}>\r\n                            <Typography style={{ fontSize: 12, fontWeight: 'bold', padding: 8, color: this.props.isDisabled ? 'rgba(255, 255, 255, 0.6)' : 'white' }}>\r\n                                {this.props.isDisabled ? \"Missing reference or localisation\" : this.state.action.name}\r\n                            </Typography>\r\n                        </Button>\r\n                    </div>\r\n                )\r\n            case 'gallery':\r\n                return (\r\n                    <div style={{ marginRight: 10 }}>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ value: event.nativeEvent.target.value, modal: false }); this.updateAction(this.state.action, event.nativeEvent.target.value) }}\r\n                            label=\"Icon\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.value}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={() => { this.setState({ modal: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                            <List />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.modal}\r\n                            onClose={() => { this.setState({ modal: false }) }}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                        >\r\n                            <GalleryList onSelect={(icon) => { this.setState({ icon: icon, modal: false }); this.updateAction(this.state.action, icon) }} action={this.state.action} />\r\n                        </Popover>\r\n                    </div>\r\n                )\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Action","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\nimport { Paper, Alert, Typography, TableContainer, Table, FormControl, Box, Select, MenuItem, TableBody, Divider, ListItem, TableCell, TableRow, Button, TextField, FormControlLabel, IconButton, Switch } from '@mui/material'\r\nimport { FileCopy, Delete, Close, Add, Send } from '@mui/icons-material'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass DetailSmartObject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            smartobject: null,\r\n            profiles: [],\r\n            localisations: [],\r\n            enabled: false,\r\n            loading: null,\r\n            message: \"\",\r\n            referenceArguments: \"\",\r\n            valueArguments: \"\",\r\n            executeInformation: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let resultLocalisation = await new Request().get().fetch(\"/api/localisations\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects/\" + this.state.id)\r\n        if (resultProfile.error || resultSmartobject.error || resultLocalisation.error) {\r\n            this.props.history.push('/smartobject')\r\n        } else {\r\n            this.setState({ smartobject: resultSmartobject.data, profiles: resultProfile.data, localisations: resultLocalisation.data })\r\n        }\r\n        this.setState({ loading: null })\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/smartobject')\r\n        }\r\n    }\r\n\r\n    async executeAction(action, settings) {\r\n        this.setState({ loading: action })\r\n        let tmp = {}\r\n        for (let index = 0; index < settings.length; index++) {\r\n            let argument = settings[index];\r\n            let value = this.state[\"settings-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmp[argument.id] = value\r\n        }\r\n        let result = await new Request().post({ settings: tmp }).fetch(\"/api/smartobjects/\" + this.state.id + \"/actions/\" + action)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message, loading: null })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({ executeInformation: JSON.stringify(result.data) })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteSmartobjectArguments(pArguments) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + pArguments.smartobject + \"/arguments/\" + pArguments.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertSmartobjectArguments(id, reference, value) {\r\n        let result = await new Request().post({ reference: reference, value: value }).fetch(\"/api/smartobjects/\" + id + \"/arguments\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ referenceArguments: \"\", valueArguments: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProfile(smartobject, profile) {\r\n        let result = await new Request().post({ idProfile: profile.id, }).fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(smartobject, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateLocalisation(smartobject, localisation) {\r\n        let result = await new Request().post({ idLocalisation: localisation.id, }).fetch(\"/api/smartobjects/\" + smartobject.id + \"/localisation\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n\r\n    setLocalisation(id) {\r\n        this.state.localisations.forEach(pLocalisation => {\r\n            if (pLocalisation.id === id) {\r\n                this.state.smartobject.localisation = pLocalisation\r\n                this.updateLocalisation(this.state.smartobject, pLocalisation)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.smartobject) {\r\n            return (\r\n                <div>\r\n                    <Paper variant=\"outlined\" style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10, }}>\r\n                            <Typography variant='h4' >\r\n                                {this.state.smartobject.reference}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.smartobject.module}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Configuration\r\n                            </Typography>\r\n                            <Paper variant=\"outlined\" style={{ marginTop: 10 }}>\r\n                                <TableContainer>\r\n                                    <Table >\r\n                                        <TableBody >\r\n                                            {this.state.smartobject.arguments.map((pArgument, index) => (\r\n                                                <TableRow key={index} >\r\n                                                    <TableCell style={{ borderBottom: 0 }} align=\"left\">\r\n                                                        <Typography variant='subtitle1'>\r\n                                                            {pArgument.reference}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" style={{ width: '70%', borderBottom: 0 }}>\r\n                                                        <Typography variant='subtitle1'>\r\n                                                            {pArgument.value.slice(0, 50) + (pArgument.value.length > 50 ? \" (...)\" : \"\")}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\" style={{ padding: 4, borderBottom: 0 }}>\r\n                                                        <IconButton onClick={() => { navigator.clipboard.writeText(pArgument.value) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                            <FileCopy />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\" style={{ padding: 4, borderBottom: 0 }}>\r\n                                                        <IconButton onClick={() => { this.deleteSmartobjectArguments(pArgument) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                            <Delete />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                            <TableRow key={-1} >\r\n                                                <TableCell style={{ borderBottom: 0 }} align=\"left\">\r\n                                                    <TextField value={this.state.referenceArguments} onChange={(event) => { this.setState({ referenceArguments: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\r\n                                                    </TextField>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ borderBottom: 0 }} align=\"left\">\r\n                                                    <TextField value={this.state.valueArguments} onChange={(event) => { this.setState({ valueArguments: event.nativeEvent.target.value }) }} placeholder='Value' style={{ width: '100%' }}>\r\n                                                    </TextField>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ borderBottom: 0 }} align=\"left\">\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ padding: 4, borderBottom: 0 }}>\r\n                                                    <IconButton onClick={() => { this.insertSmartobjectArguments(this.state.smartobject.id, this.state.referenceArguments, this.state.valueArguments) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Paper>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                {\"Action\"}\r\n                            </Typography>\r\n                            {\r\n                                this.state.smartobject.actions.map((action, index) => {\r\n                                    return (\r\n                                        <Paper variant=\"outlined\" key={index} style={{ padding: 10, marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', width: '100%', maxWidth: '100%' }}>\r\n                                            <Box >\r\n                                                <Button style={{ borderColor: 'rgba(255, 255, 255, 0.15)' }} disabled={this.state.loading == action.id} onClick={() => { this.executeAction(action.id, action.settings) }} variant={'outlined'}  >\r\n                                                    <Typography variant='body2'  >\r\n                                                        {action.name}\r\n                                                    </Typography>\r\n                                                </Button>\r\n                                            </Box>\r\n                                            {\r\n                                                action.settings.length > 0 ?\r\n                                                    <div style={{ display: 'grid', gridRowGap: '10px', gridTemplateColumns: 'repeat(4,min-content)', marginTop: 10, marginBottom: 10 }}>\r\n                                                        {\r\n                                                            action.settings.map((setting, pIndex) => {\r\n                                                                return <Action key={pIndex} flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                            })\r\n                                                        }\r\n                                                    </div> : null\r\n                                            }\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Localisation\r\n                            </Typography>\r\n                            <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px', marginTop: 10 }} >\r\n                                <Select value={this.state.smartobject.localisation.id} onChange={(event) => { this.setLocalisation(event.target.value) }} >\r\n                                    {\r\n                                        this.state.localisations.map((pLocalisation, index) => {\r\n                                            return <MenuItem key={index} value={pLocalisation.id} >{pLocalisation.name}</MenuItem>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <div style={{marginTop: 10}}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map((profile, index) => {\r\n                                    let state = false\r\n                                    this.state.smartobject.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem key={index} style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={\r\n                                                <Switch\r\n                                                    checked={state}\r\n                                                    onChange={() => {\r\n                                                        state ? this.deleteProfile(this.state.smartobject, profile) : this.insertProfile(this.state.smartobject, profile)\r\n                                                    }}\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            } label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default DetailSmartObject","import React from 'react'\r\nimport { Typography, Paper } from '@mui/material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass RedirectSmartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            message: \"\",\r\n            enabled: false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            let settings = []\r\n            if (location.search.split(\"?\").length == 2) {\r\n                location.search.split(\"?\")[1].split(\"&\").map(param => {\r\n                    let tmp = param.split(\"=\")\r\n                    if (tmp.length == 2) {\r\n                        settings.push({\r\n                            reference: tmp[0],\r\n                            value: tmp[1]\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n            if (this.props.match.params.object == undefined) {\r\n                this.setState({\r\n                    message: \"Missing object\",\r\n                    enabled: true\r\n                })\r\n                this.cancel()\r\n            }\r\n            let result = JSON.parse(window.atob(this.props.match.params.object))\r\n            this.add(result.reference, result.localisation, result.module, settings.concat(result.settings) )\r\n        } catch (error) {\r\n            this.setState({\r\n                message: error.toString(),\r\n                enabled: true\r\n            })\r\n            this.cancel()\r\n        }\r\n    }\r\n\r\n    async add(reference, localisation, module, settings) {\r\n        let result = await new Request().post({ localisation: localisation, module: module, reference: reference, settings: settings }).fetch(\"/api/smartobjects\")\r\n        if (result.error) {\r\n            this.setState({\r\n                message: result.message,\r\n                enabled: true\r\n            })\r\n            this.cancel()\r\n        } else {\r\n            this.props.history.push('/smartobject/' + result.data.id)\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        setTimeout(() => {\r\n            this.props.history.push('/smartobject/new')\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                Loading\r\n                            </Typography>\r\n                        </div>\r\n                    </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RedirectSmartobject","import React from 'react'\r\nimport { IconButton, TextField, Select, Button, MenuItem, FormControl, InputLabel, Typography, Paper } from '@mui/material'\r\nimport { Save } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport md5 from 'md5'\r\n\r\nclass NewSmartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            module: false,\r\n            localisation: false,\r\n            reference: \"\",\r\n            enabled: false,\r\n            message: \"\",\r\n            types: [],\r\n            smartobjects: [],\r\n            localisations: []\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultType = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        let resultLocalisation = await new Request().get().fetch(\"/api/localisations\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects\")\r\n        if (resultType.error || resultSmartobject.error || resultLocalisation.error) {\r\n            this.setState({ enabled: true, message: resultSmartobject.message + \" : \" + resultType.message + \" : \" + resultLocalisation.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                types: resultType.data,\r\n                smartobjects: resultSmartobject.data,\r\n                localisations: resultLocalisation.data\r\n            })\r\n        }\r\n\r\n        /*if(location.hash.split(\"#\").length == 2) {\r\n            let v = location.hash.split(\"#\")[1].split(\"&\").map(param => {\r\n                let tmp = param.split(\"=\")\r\n                if(tmp.length == 2) {\r\n                    this.updateSettings(tmp[0],tmp[1])\r\n                }\r\n            })\r\n        }*/\r\n\r\n\r\n    }\r\n\r\n    setModule(name) {\r\n        this.state.types.forEach(pModule => {\r\n            if (pModule.name === name) {\r\n                this.setState({\r\n                    module: false\r\n                }, () => {\r\n                    this.setState({\r\n                        module: pModule\r\n                    })\r\n                })\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    setLocalisation(id) {\r\n        this.state.localisations.forEach(pLocalisation => {\r\n            if (pLocalisation.id === id) {\r\n                this.setState({\r\n                    localisation: pLocalisation\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    updateSettings(key, value) {\r\n        let tmp = {}\r\n        tmp[\"settings-\" + key] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    async add() {\r\n        if (this.state.reference === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : reference is empty\" })\r\n        } else if (this.state.localisation === false) {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : localisation not selected\" })\r\n        } else if (this.state.module.name === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : type not selected\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.module.settings.length; index++) {\r\n                let setting = this.state.module.settings[index];\r\n                settings.push({\r\n                    reference: setting.id,\r\n                    value: this.state[\"settings-\" + setting.id] ? this.state[\"settings-\" + setting.id] : \"\"\r\n                })\r\n            }\r\n            let result = await new Request().post({ localisation: this.state.localisation.id, module: this.state.module.name, reference: this.state.reference, settings: settings }).fetch(\"/api/smartobjects\")\r\n            if (result.error) {\r\n                this.setState({\r\n                    enabled: true,\r\n                    message: result.package + \" : \" + result.message\r\n                })\r\n            } else {\r\n                this.props.history.push('/smartobject')\r\n            }\r\n        }\r\n    }\r\n\r\n    getSettings() {\r\n        let settings = []\r\n        for (let index = 0; index < this.state.module.settings.length; index++) {\r\n            let setting = this.state.module.settings[index]\r\n            if(\r\n                this.state[\"settings-\" + setting.id] != \"\" && \r\n                this.state[\"settings-\" + setting.id] != undefined && \r\n                this.state[\"settings-\" + setting.id] != null\r\n            ) {\r\n                settings.push({\r\n                    reference: setting.id,\r\n                    value: this.state[\"settings-\" + setting.id] ? this.state[\"settings-\" + setting.id] : \"\"\r\n                })\r\n            }\r\n            \r\n        }\r\n        return settings\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\" style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'row', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }} style={{ width: '150px', marginRight: 10 }} label=\"Reference\" variant=\"outlined\" />\r\n                            <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px' }} >\r\n                                <InputLabel>Module</InputLabel>\r\n                                <Select value={this.state.module ? this.state.module.name : \"\"} onChange={(event) => { this.setModule(event.target.value) }} label=\"Connexion\" >\r\n                                    {\r\n                                        this.state.types.map((pModule,index) => {\r\n                                            return <MenuItem key={index} value={pModule.name} >{pModule.name}</MenuItem>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px' }} >\r\n                                <InputLabel>Localisation</InputLabel>\r\n                                <Select value={this.state.localisation ? this.state.localisation.id : \"\"} onChange={(event) => { this.setLocalisation(event.target.value) }} label=\"Connexion\" >\r\n                                    {\r\n                                        this.state.localisations.map((pLocalisation,index) => {\r\n                                            return <MenuItem key={index} value={pLocalisation.id} >{pLocalisation.name}</MenuItem>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.module ?\r\n                            this.state.module.settings.length === 0 ?\r\n                                null\r\n                                :\r\n                                <div style={{ display: 'flex', flexDirection: 'column', padding: 10 }}>\r\n                                    <Typography variant='body1' style={{ fontSize: 20 }}>Configuration</Typography>\r\n                                    {\r\n                                        this.state.module.settings.map((settings,index) => {\r\n                                            if (settings.type == \"smartobject\") {\r\n                                                settings.type = \"select\",\r\n                                                    settings.values = this.state.smartobjects.filter(smartobject => {\r\n                                                        return smartobject.module == settings.reference\r\n                                                    })\r\n                                            }\r\n\r\n                                            return (\r\n                                                <div key={index} style={{ marginTop: 5, marginBottom: 5 }}>\r\n                                                    <Action\r\n                                                        setState={this.setState.bind(this)} action={settings}\r\n                                                        action={settings}\r\n                                                        isDisabled={settings.type == \"oauth2\" && (this.state.localisation == false || this.state.reference.length == 0)}\r\n                                                        object={{\r\n                                                            reference: this.state.reference,\r\n                                                            localisation: this.state.localisation.id,\r\n                                                            module: this.state.module.name,\r\n                                                            settings: this.getSettings()\r\n                                                            }}\r\n                                                    />\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            : null\r\n                    }\r\n                </Paper>\r\n                <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSmartobject","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Add } from '@mui/icons-material'\r\nimport { Typography, TablePagination, TableRow, Table, TableCell, TableHead, TableContainer, TableBody, Paper, IconButton } from '@mui/material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Process extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            processs: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/process\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ processs: result.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\">\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.processs.slice(this.state.page * 10, (this.state.page + 1) * 10).map((_process, index) => (\r\n                                <TableRow onClick={() => { this.props.history.push(\"/process/\" + _process.id) }} hover key={index} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\" style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + _process.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\" style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                        <Typography variant='body1'>\r\n                                            {_process.reference}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\" style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                        <Typography variant='body1'>\r\n                                            {_process.description}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\" style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                        <Typography variant='body1'>\r\n                                            {_process.espace.reference}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                </Paper>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                            <Link to=\"/process/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Add />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.processs.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onPageChange={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Process","import Request from './Request'\r\n\r\nclass Source {\r\n\r\n    static async getSource(query = []) {\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects\")\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultProcess = await new Request().get().fetch(\"/api/process\")\r\n        let resultEssentials = await new Request().get().fetch(\"/api/essentials\")\r\n        if (resultProcess.error) {\r\n            return resultProcess\r\n        } else if (resultModule.error) {\r\n            return resultModule\r\n        } else if (resultSmartobject.error) {\r\n            return resultSmartobject\r\n        } else if(resultEssentials.error) {\r\n            return resultEssentials\r\n        } else {\r\n            let sources = []\r\n            if (query.includes(\"smartobject\")) {\r\n                resultSmartobject.data.forEach(smartobject => {\r\n                    let actions = []\r\n                    smartobject.actions.forEach(action => {\r\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\r\n                    })\r\n                    sources.push({ id: smartobject.id, name: \"Smartobject \" + smartobject.reference, actions: actions, type: 'smartobject' })\r\n                })\r\n            }\r\n            if (query.includes(\"module\")) {\r\n                resultModule.data.forEach(pModule => {\r\n                    let actions = []\r\n                    pModule.actions.forEach(action => {\r\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\r\n                    })\r\n                    sources.push({ id: pModule.name, name: \"Module \" + pModule.name, actions: actions, type: 'module' })\r\n                })\r\n            }\r\n            if (query.includes(\"essential\")) {\r\n                let essentials = []\r\n                resultEssentials.data.forEach(pEssential => {\r\n                   essentials.push(\r\n                    { id: pEssential.id, name: pEssential.name, settings: pEssential.settings }\r\n                   )\r\n                })\r\n                sources.push({ id: \"essential\", name: \"Core essential\", actions: essentials, type: 'essential' })\r\n            }\r\n            if (query.includes(\"process\")) {\r\n                resultProcess.data.forEach(process => {\r\n                    let actions = []\r\n                    if (process.mode == \"simple\") {\r\n                        actions.push({\r\n                            id: \"auto\",\r\n                            name: process.name,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                    } else {\r\n                        actions.push({\r\n                            id: \"enable\",\r\n                            name: process.name_enable,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                        actions.push({\r\n                            id: \"disable\",\r\n                            name: process.name_disable,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                    }\r\n                    sources.push({ id: process.id, name: \"Processus \" + process.reference, actions: actions, type: 'process' })\r\n                })\r\n            }\r\n            return { data: sources, error: false, package: '', message: '' }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Source","import React from 'react'\r\nimport { Paper, Grid } from '@mui/material'\r\n\r\nclass IconList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            icons: [],\r\n            mode: 'normal'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let result = await fetch(process.env.PUBLIC_URL + '/ressource/icon.json')\r\n            let resultJSON = await result.json()\r\n            this.setState({ icons: resultJSON })\r\n        } catch (error) {\r\n            this.setState({ icons: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={1} style={{ width: '32vw', height: '32vw', padding: 10, marginRight: 10 }}>\r\n                <Grid item xs={6} >\r\n                    <Paper variant=\"outlined\" onClick={() => { this.setState({ mode: 'normal' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star.svg\"} />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={6} >\r\n                    <Paper variant=\"outlined\" onClick={() => { this.setState({ mode: 'outline' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star-outline.svg\"} />\r\n                    </Paper>\r\n                </Grid>\r\n                {\r\n\r\n                    this.state.icons.filter(icon => {\r\n                        if (icon.search(\"outline\") != -1 && this.state.mode == \"outline\") {\r\n                            return true\r\n                        } else if (icon.search(\"outline\") == -1 && this.state.mode == \"normal\") {\r\n                            return true\r\n                        } else {\r\n                            return false\r\n                        }\r\n                    }).map(icon => {\r\n                        return (\r\n                            <Grid item xs >\r\n                                <Paper variant=\"outlined\" onClick={() => { this.props.onSelect && this.props.onSelect(icon) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                                    <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + icon + \".svg\"} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default IconList","import React from 'react'\r\n\r\nimport { Popover, InputAdornment, Checkbox, Typography, Paper, Grid, InputLabel, MenuItem, FormControl, Select, TableBody, TableContainer, TextField, TableCell, Table, TableRow, Switch, Button, IconButton, TableHead } from '@mui/material'\r\n\r\nimport { Delete, List, Add, Save } from '@mui/icons-material'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\nimport IconList from '../../../components/IconList'\r\n\r\nclass New extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            popup: false,\r\n            message: \"\",\r\n            espaces: [],\r\n            reference: '',\r\n            icon: '',\r\n            description: '',\r\n            name: '',\r\n            name_disable: '',\r\n            name_enable: '',\r\n            mode: 'simple',\r\n            module: null,\r\n            espace: false,\r\n            inputReference: \"\",\r\n            inputName: \"\",\r\n            inputType: null,\r\n            inputMode: false,\r\n            inputs: [],\r\n            sources: [],\r\n            isChecked: false,\r\n            action: null,\r\n            source: null,\r\n            arrSources: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\", \"essential\"])\r\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\r\n        if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else if (resultEspace.error) {\r\n            this.setState({ enabled: true, message: resultEspace.package + \" : \" + resultEspace.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                espaces: resultEspace.data,\r\n                sources: resultSource.data\r\n            })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        let fSource = false\r\n        this.state.sources.forEach(source => {\r\n            if (source.id === id) { fSource = source }\r\n        })\r\n        this.setState({ source: fSource, action: null })\r\n    }\r\n\r\n    setAction(id) {\r\n        let fAction = false\r\n        this.state.source.actions.forEach(action => {\r\n            if (action.id === id) { fAction = action }\r\n        })\r\n        this.setState({ action: fAction })\r\n    }\r\n\r\n    setInput() {\r\n        if (this.state.inputReference === \"\") {\r\n            this.setState({ enabled: true, message: \"Reference is missing\" })\r\n            return\r\n        }\r\n        if (this.state.inputType === \"\") {\r\n            this.setState({ enabled: true, message: \"Type is missing\" })\r\n            return\r\n        }\r\n        if (this.state.inputName === \"\") {\r\n            this.setState({ enabled: true, message: \"Name is missing\" })\r\n            return\r\n        }\r\n        let inputs = this.state.inputs\r\n        inputs.push({\r\n            name: this.state.inputName,\r\n            type: this.state.inputType,\r\n            reference: this.state.inputReference,\r\n            enable: this.state.inputMode ? 1 : 0\r\n        })\r\n        this.setState({ inputs: inputs, inputName: \"\", inputType: null, inputReference: \"\", inputMode: false })\r\n    }\r\n\r\n    async set() {\r\n        if (this.state.reference === \"\") {\r\n            this.setState({ enabled: true, message: \"Reference is missing\" })\r\n            return\r\n        }\r\n        if (this.state.icon === \"\") {\r\n            this.setState({ enabled: true, message: \"Icon is missing\" })\r\n            return\r\n        }\r\n        if (this.state.description === \"\") {\r\n            this.setState({ enabled: true, message: \"Description is missing\" })\r\n            return\r\n        }\r\n        if (this.state.espace === false) {\r\n            this.setState({ enabled: true, message: \"Espace is missing\" })\r\n            return\r\n        }\r\n        let body = {\r\n            description: this.state.description,\r\n            nameEnable: this.state.name_enable,\r\n            nameDisable: this.state.name_disable,\r\n            name: this.state.name,\r\n            espace: this.state.espace,\r\n            sources: this.state.arrSources,\r\n            reference: this.state.reference,\r\n            icon: this.state.icon,\r\n            mode: this.state.mode,\r\n            inputs: this.state.inputs\r\n        }\r\n        let result = await new Request().post(body).fetch(\"/api/process\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/process')\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"settings-\" + action.id] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    removeModeArgument(index) {\r\n        let tmp = []\r\n        this.state.inputs.forEach((modeArgument, pIndex) => {\r\n            if (index !== pIndex) { tmp.push(modeArgument) }\r\n        })\r\n        this.setState({ inputs: tmp })\r\n    }\r\n\r\n    confirmationModule() {\r\n        if (this.state.action === false) {\r\n            this.setState({ enabled: true, message: \"Action missing\" })\r\n            return\r\n        }\r\n        if (this.state.source.actions.length === 0) {\r\n            this.setState({ enabled: true, message: \"Module missing\" })\r\n            return\r\n        }\r\n        let settings = []\r\n        for (let index = 0; index < this.state.action.settings.length; index++) {\r\n            let setting = this.state.action.settings[index]\r\n            let value = this.state[\"settings-\" + setting.id]\r\n            if (value == undefined) {\r\n                value = setting.default\r\n            }\r\n            settings.push({ reference: setting.id, value: value })\r\n        }\r\n        let action = {\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: settings,\r\n            enable: this.state.isChecked\r\n        }\r\n        let tmp = this.state.arrSources\r\n        tmp.push(action)\r\n        this.setState({ arrSources: tmp, action: null, source: null, isChecked: false })\r\n    }\r\n\r\n    removeSource(index) {\r\n        let tmp = []\r\n        this.state.arrSources.forEach((action, pIndex) => {\r\n            if (index !== pIndex) { tmp.push(action) }\r\n        })\r\n        this.setState({ arrSources: [] }, () => {\r\n            this.setState({ arrSources: tmp })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\" style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ justifyContent: 'start', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '20%', margin: 10 }}\r\n                            label=\"Réference\"\r\n                            value={this.state.reference}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ icon: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '20%', margin: 10 }}\r\n                            label=\"Icon\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.icon}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                            <List />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ icon: icon, popup: false }) }} />\r\n                        </Popover>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ description: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '50%', margin: 10 }}\r\n                            label=\"Description\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <FormControl variant=\"outlined\" style={{ margin: 10, width: '150px' }} >\r\n                            <InputLabel>Espace</InputLabel>\r\n                            <Select value={this.state.espace ? this.state.espace.id : ''} onChange={(event) => { this.setState({ espace: event.target.value }) }} label=\"Espace\" >\r\n                                {\r\n                                    this.state.espaces.map((espace, index) => {\r\n                                        return <MenuItem key={index} value={espace.id} >{espace.name}</MenuItem>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>\r\n                            Mode\r\n                        </Typography>\r\n                        <Grid style={{ margin: 10 }} container alignItems=\"center\" >\r\n                            <Grid item>\r\n                                <Typography variant='subtitle1'>Simple</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch checked={this.state.mode === 'switch'} onChange={(event, checked) => { this.setState({ mode: checked ? 'switch' : 'simple' }) }} name=\"checkedC\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant='subtitle1'>Switch</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Paper variant=\"outlined\">\r\n                            <TableContainer>\r\n                                {\r\n                                    this.state.mode === 'switch' ?\r\n                                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                            <TextField\r\n                                                onChange={(event) => { this.setState({ name_enable: event.nativeEvent.target.value }) }}\r\n                                                style={{ width: '45%', margin: 10 }}\r\n                                                label=\"Texte actif\"\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                            <TextField\r\n                                                onChange={(event) => { this.setState({ name_disable: event.nativeEvent.target.value }) }}\r\n                                                style={{ width: '45%', margin: 10 }}\r\n                                                label=\"Texte passif\"\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        </div> :\r\n                                        <div >\r\n                                            <TextField\r\n                                                onChange={(event) => { this.setState({ name: event.nativeEvent.target.value }) }}\r\n                                                style={{ margin: 10, width: '45%' }}\r\n                                                label=\"Texte\"\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        </div>\r\n                                }\r\n                            </TableContainer>\r\n                        </Paper>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>\r\n                            Argument\r\n                        </Typography>\r\n                        <Paper variant=\"outlined\">\r\n                            <TableContainer>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow key={0} onClick={() => { }}  >\r\n                                            <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                <TextField\r\n                                                    value={this.state.inputReference}\r\n                                                    onChange={(event) => { this.setState({ inputReference: event.nativeEvent.target.value }) }}\r\n\r\n                                                    label=\"Reference\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                <TextField\r\n                                                    value={this.state.inputName}\r\n                                                    onChange={(event) => { this.setState({ inputName: event.nativeEvent.target.value }) }}\r\n\r\n                                                    label=\"Name\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                <FormControl variant=\"outlined\" style={{ width: 150 }} >\r\n                                                    <InputLabel>Type</InputLabel>\r\n                                                    <Select value={this.state.inputType ? this.state.inputType : \"\"} onChange={(event) => { this.setState({ inputType: event.target.value }) }} label=\"Type\" >\r\n                                                        <MenuItem key={1} value={\"text\"} >{\"Text\"}</MenuItem>\r\n                                                        <MenuItem key={2} value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\r\n                                                        <MenuItem key={3} value={\"number\"} >{\"Number\"}</MenuItem>\r\n                                                        <MenuItem key={4} value={\"slider\"} >{\"Slider\"}</MenuItem>\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                {\r\n                                                    this.state.mode === 'switch' ?\r\n                                                        <Checkbox onChange={(event, checked) => { this.setState({ inputMode: checked }) }} /> : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{borderBottomWidth: 0}}>\r\n                                                <IconButton onClick={() => { this.setInput() }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            this.state.inputs.map((modeArgument, index) => {\r\n                                                return (\r\n                                                    <TableRow key={index} onClick={() => { }} hover style={{ cursor: 'pointer' }}>\r\n                                                        <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                            <Typography variant='body1'>\r\n                                                                {modeArgument.reference}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                            <Typography variant='body1'>\r\n                                                                {modeArgument.name}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                            <Typography variant='body1'>\r\n                                                                {modeArgument.type}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\" style={{borderBottomWidth: 0}}>\r\n                                                            {\r\n                                                                this.state.mode === 'switch' ?\r\n                                                                    <Checkbox disabled defaultChecked={modeArgument.mode} />\r\n                                                                    : null\r\n                                                            }\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\" style={{borderBottomWidth: 0}}>\r\n                                                            <IconButton onClick={() => { this.removeModeArgument(index) }}>\r\n                                                                <Delete />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Paper>\r\n\r\n                        <Typography variant='h5' style={{ margin: 10 }}>Action</Typography>\r\n                        <Paper variant=\"outlined\">\r\n                            <TableContainer>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow >\r\n                                            <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                <FormControl fullWidth >\r\n                                                    <InputLabel>Source</InputLabel>\r\n                                                    <Select value={this.state.source ? this.state.source.id : ''} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\r\n                                                        {\r\n                                                            this.state.sources.map((source, pIndex) => {\r\n                                                                return <MenuItem key={pIndex} value={source.id} >{source.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                {\r\n                                                    this.state.source ?\r\n                                                        <FormControl fullWidth style={{ minWidth: 150 }} >\r\n                                                            <InputLabel>Action</InputLabel>\r\n                                                            <Select value={this.state.action ? this.state.action.id : ''} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\r\n                                                                {\r\n                                                                    this.state.source.actions.map((action, index) => {\r\n                                                                        return <MenuItem key={index} value={action.id} >{action.name}</MenuItem>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{borderBottomWidth: 0}}>\r\n                                                {\r\n                                                    this.state.action ?\r\n                                                        this.state.action.settings.map((argument, index) => {\r\n                                                            return (\r\n                                                                <div key={index} style={{ marginTop: 5, marginBottom: 2 }} >\r\n                                                                    <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\r\n                                                                </div>\r\n                                                            )\r\n                                                        }) : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" style={{borderBottomWidth: 0}}>\r\n                                                {this.state.mode === 'simple' ? null :\r\n                                                    <Checkbox onChange={(event, checked) => { this.setState({ isChecked: checked }) }} />\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{borderBottomWidth: 0}}>\r\n                                                <IconButton onClick={() => { this.confirmationModule() }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            this.state.arrSources.map((action, index) => {\r\n                                                return (\r\n                                                    <TableRow key={index} onClick={() => { }} hover style={{ cursor: 'pointer' }}>\r\n                                                        <TableCell style={{borderBottomWidth: 0}} align=\"left\">\r\n                                                            <Typography variant='body1'>\r\n                                                                {action.source.name}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell style={{borderBottomWidth: 0}} align=\"left\">\r\n                                                            <Typography variant='body1'>\r\n                                                                {action.action.name}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell style={{borderBottomWidth: 0}} align=\"left\">\r\n                                                            {\r\n                                                                action.arguments.map((argument, pIndex) => {\r\n                                                                    return (\r\n                                                                        <Typography key={pIndex} variant='body1'>\r\n                                                                            {argument.reference + \" : \" + argument.value}\r\n                                                                        </Typography>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </TableCell>\r\n                                                        <TableCell style={{borderBottomWidth: 0}} align=\"center\">\r\n                                                            {this.state.mode === 'simple' ? null :\r\n                                                                <Checkbox disabled defaultChecked={action.enable} />\r\n                                                            }\r\n                                                        </TableCell>\r\n                                                        <TableCell style={{borderBottomWidth: 0}} align=\"right\">\r\n                                                            <IconButton onClick={() => { this.removeSource(index) }}>\r\n                                                                <Delete />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Paper>\r\n                    </div>\r\n                </Paper>\r\n                    <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.set()  }} style={{ borderRadius: 5 }}>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}> {this.state.message} </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default New","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\n\r\nimport { MenuItem, Switch, ListItem, FormControlLabel, Checkbox, InputLabel, IconButton, TableHead, TextField, Typography, Paper, Divider, TableBody, TableContainer, TableCell, Table, TableRow, FormControl, Select, Button } from '@mui/material'\r\n\r\nimport { Check, Close, Delete, Autorenew, Add } from '@mui/icons-material'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nclass DetailProcess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            enabled: false,\r\n            message: \"\",\r\n            process: null,\r\n            profiles: [],\r\n            executeInformation: \"\",\r\n            referenceInput: \"\",\r\n            nameInput: \"\",\r\n            typeInput: \"\",\r\n            modeInput: 0,\r\n            action: \"\",\r\n            source: \"\",\r\n            loading: false,\r\n            isChecked: false,\r\n            sources: []\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\", \"essential\"])\r\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let result = await new Request().get().fetch(\"/api/process/\" + this.state.id)\r\n        if (resultEspace.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultEspace.package + \" : \" + resultEspace.message\r\n            })\r\n        } else if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n        } else if (resultSource.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultSource.package + \" : \" + resultSource.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                process: result.data,\r\n                profiles: resultProfile.data,\r\n                espaces: resultEspace.data,\r\n                sources: resultSource.data\r\n            })\r\n        }\r\n        this.setState({ loading: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        let fSource = false\r\n        this.state.sources.forEach(source => {\r\n            if (source.id === id) { fSource = source }\r\n        })\r\n        this.setState({ source: fSource })\r\n    }\r\n\r\n    setAction(id) {\r\n        let fAction = false\r\n        this.state.source.actions.forEach(action => {\r\n            if (action.id === id) { fAction = action }\r\n        })\r\n        this.setState({ action: fAction })\r\n    }\r\n\r\n    async addSource() {\r\n        if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Action missing\" })\r\n            return\r\n        }\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Source missing\" })\r\n            return\r\n        }\r\n        let settings = []\r\n        for (let index = 0; index < this.state.action.settings.length; index++) {\r\n            let setting = this.state.action.settings[index]\r\n            let value = this.state[\"settings-\" + setting.id]\r\n            if (value == undefined) {\r\n                value = setting.default\r\n            }\r\n            settings.push({ reference: setting.id, value: value })\r\n        }\r\n        let action = {\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: settings,\r\n            enable: this.state.isChecked\r\n        }\r\n        let result = await new Request().post(action).fetch(\"/api/process/\" + this.state.id + \"/actions\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteSource(idsource) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + this.state.id + \"/actions/\" + idsource)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/process')\r\n        }\r\n    }\r\n\r\n    async executeAction() {\r\n        this.setState({ loading: true })\r\n        let tmp = {}\r\n        for (let index = 0; index < this.state.process.inputs.length; index++) {\r\n            let input = this.state.process.inputs[index];\r\n            let value = this.state[\"settings-\" + input.id]\r\n            if (value == undefined) {\r\n                value = input.default\r\n            }\r\n            tmp[input.reference] = value\r\n        }\r\n        let result = await new Request().post({ inputs: tmp }).fetch(\"/api/process/\" + this.state.process.id + \"/execute\")\r\n        if (result.error) {\r\n            this.setState({ loading: null, enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({ executeInformation: JSON.stringify(result.data) })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProfile(process, profile) {\r\n        let result = await new Request().post({ idProfile: profile.id, }).fetch(\"/api/process/\" + process.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(process, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + process.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProcessInput(input) {\r\n        let result = await new Request().delete({}).fetch(\"/api/process/\" + this.state.process.id + \"/inputs/\" + input.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProcessInput() {\r\n        if (this.state.typeInput == null) {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : type is empty\" })\r\n            return\r\n        }\r\n        let result = await new Request().post({\r\n            reference: this.state.referenceInput,\r\n            name: this.state.nameInput,\r\n            type: this.state.typeInput,\r\n            enable: this.state.modeInput\r\n        }).fetch(\"/api/process/\" + this.state.process.id + \"/inputs\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({\r\n                referenceSettings: \"\",\r\n                valueSettings: \"\",\r\n                referenceInput: \"\",\r\n                nameInput: \"\",\r\n                modeInput: 0\r\n            })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"settings-\" + action.id] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.process) {\r\n            return (\r\n                <div>\r\n                    <Paper variant='outlined' style={{ padding: 25 }}>\r\n                        <Typography variant='h4'>\r\n                            {this.state.process.reference}\r\n                        </Typography>\r\n                        <Typography variant='subtitle1'>\r\n                            {this.state.process.espace.name}\r\n                        </Typography>\r\n                        <Typography variant='subtitle1'>\r\n                            {this.state.process.description}\r\n                        </Typography>\r\n                        <Divider style={{ marginTop: 10, marginBottom: 10 }} />\r\n                        <div  >\r\n                            <Typography variant='h5' style={{ marginBottom: 5 }}>Action</Typography>\r\n                            {\r\n                                this.state.process.mode == \"simple\" ?\r\n                                    this.state.process.mode === \"simple\" ?\r\n                                        <Button color='inherit' disabled={this.state.loading} style={{borderColor: 'rgba(255, 255, 255, 0.15)', alignSelf: 'center', marginTop: 10 }} variant={this.state.process.enable === 2 ? \"contained\" : \"outlined\"} onClick={() => { this.executeAction() }} startIcon={<Autorenew />}>\r\n                                            {this.state.process.name}\r\n                                        </Button> : null\r\n                                    :\r\n                                    <div style={{ flexDirection: 'column', display: 'flex', width: 'fit-content' }}>\r\n                                        {\r\n                                            this.state.process.enable == 1 ?\r\n                                                <Button disabled={this.state.loading} style={{borderColor: 'rgba(255, 255, 255, 0.15)', marginTop: 10 }} variant={\"contained\"} onClick={() => { this.executeAction() }} >\r\n                                                    {this.state.process.name_enable}\r\n                                                </Button> :\r\n                                                <Button color='inherit' disabled={this.state.loading} style={{borderColor: 'rgba(255, 255, 255, 0.15)', marginTop: 10 }} variant={\"outlined\"} onClick={() => { this.executeAction() }} >\r\n                                                    {this.state.process.name_disable}\r\n                                                </Button>\r\n                                        }\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\r\n                            {\r\n                                this.state.process.inputs.filter(input => {\r\n                                    return input.enable == this.state.process.enable\r\n                                }).map(input => {\r\n                                    return <Action setState={this.setState.bind(this)} action={input} flexDirection='column' orientation='horizontal' />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div style={{ marginTop: 15 }} >\r\n                            <Typography variant='h5'>\r\n                                Input\r\n                            </Typography>\r\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\r\n                                <Paper variant='outlined' >\r\n                                    <TableContainer>\r\n                                        <Table>\r\n                                            <TableBody>\r\n                                                {\r\n                                                    this.state.process.inputs.map((input, index) =>\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>{input.reference}</Typography></TableCell>\r\n                                                            <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>{input.name}</Typography> </TableCell>\r\n                                                            <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>{input.type}</Typography></TableCell>\r\n                                                            <TableCell align=\"center\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>{input.enable}</Typography></TableCell>\r\n                                                            <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                                <IconButton onClick={() => { this.deleteProcessInput(input) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                }\r\n                                                <TableRow key={-1}>\r\n                                                    <TableCell align=\"left\" style={{ width: '35%', borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                        <TextField value={this.state.referenceInput} onChange={(event) => { this.setState({ referenceInput: event.nativeEvent.target.value }) }} placeholder='Reference' style={{ width: '100%' }}>\r\n                                                        </TextField>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" style={{ width: '35%', borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                        <TextField value={this.state.nameInput} onChange={(event) => { this.setState({ nameInput: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\r\n                                                        </TextField>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" style={{ width: '20%', borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                        <FormControl variant=\"outlined\" style={{ width: '100%' }} >\r\n                                                            <InputLabel>Type</InputLabel>\r\n                                                            <Select value={this.state.typeInput} onChange={(event) => { this.setState({ typeInput: event.target.value }) }} label=\"Type\" >\r\n                                                                <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\r\n                                                                <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\r\n                                                                <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\r\n                                                                <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" style={{ width: '10%', borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                        {\r\n                                                            this.state.process.mode === 'switch' ?\r\n                                                                <Checkbox value={this.state.modeInput == 0} onChange={(event, checked) => { this.setState({ modeInput: checked ? 1 : 0 }) }} /> : null\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }} >\r\n                                                        <IconButton onClick={() => { this.insertProcessInput() }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                            <Add />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </Paper>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: 15 }} >\r\n                            <Typography variant='h5'>\r\n                                Module\r\n                            </Typography>\r\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\r\n                                <Paper variant='outlined' >\r\n                                    <TableContainer>\r\n                                        <Table>\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>Module</Typography></TableCell>\r\n                                                    <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>Type</Typography></TableCell>\r\n                                                    <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>Action</Typography></TableCell>\r\n                                                    <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>Arguments</Typography></TableCell>\r\n                                                    <TableCell align=\"center\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>Mode</Typography></TableCell>\r\n                                                    <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}></TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {\r\n                                                    this.state.process.actions.map((action, index) =>\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell align=\"left\" style={{ width: '15%', borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>{action.object}</Typography></TableCell>\r\n                                                            <TableCell align=\"left\" style={{ width: '20%', borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>{action.type}</Typography> </TableCell>\r\n                                                            <TableCell align=\"left\" style={{ width: '20%', borderColor: 'rgba(255, 255, 255, 0.12)' }}><Typography variant='body1'>{action.action}</Typography></TableCell>\r\n                                                            <TableCell align=\"left\" style={{ width: '20%', borderColor: 'rgba(255, 255, 255, 0.12)' }}>{action.arguments.map((argument, pIndex) => {\r\n                                                                return <Typography key={pIndex} variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\r\n                                                            })}</TableCell>\r\n                                                            <TableCell align=\"center\" style={{ width: '15%', borderColor: 'rgba(255, 255, 255, 0.12)' }}>{action.enable === 0 ? <Close /> : action.enable === 1 ? <Check /> : <Autorenew />}</TableCell>\r\n                                                            <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                                <IconButton onClick={() => { this.deleteSource(action.id) }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                }\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"left\" style={{ width: '25%', borderWidth: 0 }}>\r\n                                                        <FormControl fullWidth>\r\n                                                            <InputLabel>Source</InputLabel>\r\n                                                            <Select value={this.state.source ? this.state.source.id : ''} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\r\n                                                                {\r\n                                                                    this.state.sources.map((source, index) => {\r\n                                                                        return <MenuItem key={index} value={source.id} >{source.name}</MenuItem>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" style={{ width: '25%', borderWidth: 0 }}>\r\n                                                        {\r\n                                                            this.state.source ?\r\n                                                                <FormControl fullWidth >\r\n                                                                    <InputLabel>Action</InputLabel>\r\n                                                                    <Select value={this.state.action ? this.state.action.id : ''} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\r\n                                                                        {\r\n                                                                            this.state.source.actions.map(action => {\r\n                                                                                return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </Select>\r\n                                                                </FormControl>\r\n                                                                : null\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" style={{ width: '20%', borderWidth: 0 }}>\r\n                                                        {\r\n                                                            this.state.action ?\r\n                                                                this.state.action.settings.map((argument, index) => {\r\n                                                                    return (\r\n                                                                        <div key={index} style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\r\n                                                                            <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                }) : null\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" style={{ width: '5%', borderWidth: 0 }}>\r\n                                                        \r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" style={{ width: '5%', borderWidth: 0 }}>\r\n                                                        {\r\n                                                            this.state.process.mode === 'switch' ?\r\n                                                                <Checkbox onChange={(event, isChecked) => { this.setState({ isChecked: isChecked }) }} /> : null\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" style={{ width: '5%', borderWidth: 0 }}>\r\n                                                        <IconButton onClick={() => { this.addSource() }}>\r\n                                                            <Add />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </Paper>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map((profile, pIndex) => {\r\n                                    let state = false\r\n                                    this.state.process.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem key={pIndex} style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={<Switch\r\n                                                checked={state}\r\n                                                onChange={() => {\r\n                                                    state ? this.deleteProfile(this.state.process, profile) : this.insertProfile(this.state.process, profile)\r\n                                                }}\r\n                                                color=\"primary\"\r\n                                            />} label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.process.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default DetailProcess","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { IconButton, Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@mui/material'\r\nimport { Add, Delete, FileCopy, PlayArrow, Edit, Pause } from '@mui/icons-material'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Theme from '../../../Theme'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Routine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            loading: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            routines: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/routines\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                loading: false,\r\n                routines: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/routines/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async duplicate(id) {\r\n        let result = await new Request().put().fetch(\"/api/routines/\" + id + \"/duplicate\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateStatus(id, status) {\r\n        let result = await new Request().put({ status: status }).fetch(\"/api/routines/\" + id + \"/status\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\">\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.routines.slice(this.state.page * 10, (this.state.page + 1) * 10).map((routine) => (\r\n                                <TableRow key={routine.id} >\r\n                                    <TableCell align=\"left\" style={{ borderBottom: 0 }}>\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + routine.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\" style={{ borderBottom: 0 }}>\r\n                                        <Typography variant='body1'>\r\n                                            {routine.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\" style={{ borderBottom: 0 }}>\r\n                                        <div style={{ flex: 1, flexDirection: 'row', display: 'flex', alignContent: 'center', alignItems: 'center', justifyContent: 'end' }}>\r\n                                            <IconButton onClick={() => { this.updateStatus(routine.id, routine.status === 0 ? 1 : 0) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2, backgroundColor: routine.status === 1 ? Theme.palette.success.main : null }}>\r\n                                                {routine.status === 0 ? <PlayArrow /> : <Pause />}\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.props.history.push('/routine/' + routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.duplicate(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <FileCopy />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.delete(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                </Paper>\r\n           \r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                        <Link to=\"/routine/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <IconButton style={{ borderRadius: 0 }}>\r\n                                <Add />\r\n                            </IconButton>\r\n                        </Link>\r\n                    </Paper>\r\n                    <TablePagination component=\"div\" count={this.state.routines.length} rowsPerPage={10} page={this.state.page} rowsPerPageOptions={[]} onPageChange={(event, page) => { this.setState({ page: page }) }} />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routine","import React from 'react'\r\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@mui/material'\r\nimport { Save, Add, List, Cached } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Source from '../../../utils/Source'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Theme from '../../../Theme'\r\nimport WeekSchedul from '../../../components/WeekSchedul'\r\nimport IconList from '../../../components/IconList'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass NewRoutine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            routine: null,\r\n            sources: [],\r\n            mode: 'counter',\r\n            modalTrigger: false,\r\n            modalEffect: false,\r\n            routine: {\r\n                watch: 1,\r\n                triggers: [],\r\n                effects: [],\r\n                name: \"\",\r\n                icon: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\", \"essential\"])\r\n        if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({ sources: resultSource.data })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) { this.setState({ action: action }) }\r\n        })\r\n    }\r\n\r\n    updateIcon(icon) {\r\n        let routine = this.state.routine\r\n        routine.icon = icon\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateName(name) {\r\n        let routine = this.state.routine\r\n        routine.name = name\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateWatch(watch) {\r\n        let routine = this.state.routine\r\n        routine.watch = watch\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    addTrigger() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"settings-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.triggers.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings,\r\n                result: this.state.result,\r\n                statement: this.state.statement,\r\n                expected: this.state.expected\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalTrigger: false,\r\n                action: null,\r\n                source: null,\r\n                result: null,\r\n                statement: null,\r\n                expected: null\r\n            })\r\n        }\r\n    }\r\n\r\n    addEffect() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"settings-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.effects.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalEffect: false,\r\n                action: null,\r\n                source: null\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTrigger(pIndex) {\r\n        let routine = this.state.routine\r\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\r\n        routine.triggers = triggers\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    removeEffect(pIndex) {\r\n        let routine = this.state.routine\r\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\r\n        routine.effects = effects\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.routine.name.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing name\" })\r\n        } else if (this.state.routine.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing icon\" })\r\n        } else if (this.state.routine.effects.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing effect\" })\r\n        } else {\r\n            let result = await new Request().post({\r\n                name: this.state.routine.name,\r\n                watch: this.state.routine.watch.toString(),\r\n                icon: this.state.routine.icon,\r\n                triggers: this.state.routine.triggers,\r\n                effects: this.state.routine.effects,\r\n                mode: this.state.mode\r\n            }).fetch(\"/api/routines\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/routine')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.routine) {\r\n            return (\r\n                <div>\r\n                    <Paper variant=\"outlined\" style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\r\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                                    <List />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                ></TextField>\r\n                                <Popover\r\n                                    open={this.state.popup}\r\n                                    onClose={() => { this.setState({ popup: false }) }}\r\n                                    anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                                    transformOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                                >\r\n                                    <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon) }} />\r\n                                </Popover>\r\n                            </div>\r\n                            {\r\n                                this.state.mode == 'counter' ?\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 5, paddingRight: 5 }}>\r\n                                            <div style={{ flex: 1 }}>\r\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\r\n                                                    <Cached />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <div style={{ display: 'flex', flex: 20, justifyContent: 'center' }}>\r\n                                                <Slider\r\n                                                    defaultValue={0}\r\n                                                    valueLabelDisplay=\"auto\"\r\n                                                    orientation={'horizontal'}\r\n                                                    min={0}\r\n                                                    max={1440}\r\n                                                    step={1}\r\n                                                    value={this.state.routine.watch}\r\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> :\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25,  borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\r\n                                    </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\r\n\r\n                                <Paper variant=\"outlined\" style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\r\n                                    this.state.routine.triggers.map((trigger, index) => {\r\n                                        return (\r\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                <div  >\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\r\n                                                    {\r\n                                                        trigger.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    trigger.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                                {\r\n                                                    trigger.result && trigger.statement && trigger.expected ?\r\n                                                        <div>\r\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                    <Button color='inherit' onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Paper>\r\n                            </div>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\r\n                                <Paper variant=\"outlined\" style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\r\n                                    {\r\n                                        this.state.routine.effects.map((effect, index) => {\r\n                                            return (\r\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\r\n                                                    {\r\n                                                        effect.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    effect.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <Button color='inherit' onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Paper>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\r\n                        <Fade in={this.state.modalTrigger} >\r\n                            <Paper variant=\"outlined\" style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New Trigger\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} /></div>\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\r\n                                            <InputLabel>Condition</InputLabel>\r\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\r\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\r\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\r\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\r\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button color='inherit' onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\r\n                        <Fade in={this.state.modalEffect} >\r\n                            <Paper variant=\"outlined\" style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New effect\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} /></div>\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <Button color='inherit' onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewRoutine","import React from 'react'\r\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@mui/material'\r\nimport { Save, Add, List, Cached } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\nimport Action from '../../../components/Action'\r\nimport Theme from '../../../Theme'\r\nimport IconList from '../../../components/IconList'\r\nimport WeekSchedul from '../../../components/WeekSchedul'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass NewRoutine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            popup: false,\r\n            id: props.match.params.id,\r\n            enabled: false,\r\n            message: \"\",\r\n            routine: null,\r\n            sources: [],\r\n            modalTrigger: false,\r\n            modalEffect: false,\r\n            mode: \"counter\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\", \"essential\"])\r\n        let result = await new Request().get().fetch(\"/api/routines/\" + this.state.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({mode: result.data.mode, routine: result.data, sources: resultSource.data })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) { this.setState({ action: action }) }\r\n        })\r\n    }\r\n\r\n    updateIcon(icon) {\r\n        let routine = this.state.routine\r\n        routine.icon = icon\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateName(name) {\r\n        let routine = this.state.routine\r\n        routine.name = name\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateWatch(watch) {\r\n        let routine = this.state.routine\r\n        routine.watch = watch\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    addTrigger() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"settings-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.triggers.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings,\r\n                result: this.state.result,\r\n                statement: this.state.statement,\r\n                expected: this.state.expected\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalTrigger: false,\r\n                action: null,\r\n                source: null,\r\n                result: null,\r\n                statement: null,\r\n                expected: null\r\n            })\r\n        }\r\n    }\r\n\r\n    addEffect() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"settings-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.effects.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalEffect: false,\r\n                action: null,\r\n                source: null\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTrigger(pIndex) {\r\n        let routine = this.state.routine\r\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\r\n        routine.triggers = triggers\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    removeEffect(pIndex) {\r\n        let routine = this.state.routine\r\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\r\n        routine.effects = effects\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.routine.name.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing name\" })\r\n        } else if (this.state.routine.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing icon\" })\r\n        } else if (this.state.routine.effects.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing effect\" })\r\n        } else {\r\n            let result = await new Request().put({\r\n                name: this.state.routine.name,\r\n                watch: this.state.routine.watch.toString(),\r\n                icon: this.state.routine.icon,\r\n                triggers: this.state.routine.triggers,\r\n                effects: this.state.routine.effects,\r\n                mode: this.state.mode\r\n            }).fetch('/api/routines/' + this.state.id)\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/routine/')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.routine) {\r\n            return (\r\n                <div>\r\n                    <Paper variant=\"outlined\" style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\r\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }} \r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                                <List />\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                ></TextField>\r\n                            \r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\r\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon)}} />\r\n                        </Popover>\r\n                            \r\n                            </div>\r\n                            {\r\n                                this.state.mode == 'counter' ?\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 5, paddingRight: 5 }}>\r\n                                            <div style={{ flex: 1 }}>\r\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\r\n                                                    <Cached />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <div style={{ display: 'flex', flex: 15, justifyContent: 'center' }}>\r\n                                                <Slider\r\n                                                    defaultValue={0}\r\n                                                    valueLabelDisplay=\"auto\"\r\n                                                    orientation={'horizontal'}\r\n                                                    min={0}\r\n                                                    max={1440}\r\n                                                    step={1}\r\n                                                    value={this.state.routine.watch}\r\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> :\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\r\n\r\n                                <Paper variant=\"outlined\"  style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25,  height: 'min-content' }}>   {\r\n                                    this.state.routine.triggers.map((trigger, index) => {\r\n                                        return (\r\n                                            <Paper variant=\"outlined\" onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                <div  >\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\r\n                                                    {\r\n                                                        trigger.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    trigger.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                                {\r\n                                                    trigger.result && trigger.statement && trigger.expected ?\r\n                                                        <div>\r\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </Paper>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                    <Button color='inherit' onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Paper>\r\n                            </div>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\r\n                                <Paper variant=\"outlined\"  style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\r\n                                    {\r\n                                        this.state.routine.effects.map((effect, index) => {\r\n                                            return (\r\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\r\n                                                    {\r\n                                                        effect.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    effect.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <Button color='inherit' onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Paper>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\r\n                        <Fade in={this.state.modalTrigger} >\r\n                            <Paper style={style} variant=\"outlined\">\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New Trigger\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action setState={this.setState.bind(this)} action={setting} flexDirection='column' orientation='horizontal'  /></div>\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\r\n                                            <InputLabel>Condition</InputLabel>\r\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\r\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\r\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\r\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\r\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button color='inherit' onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\r\n                        <Fade in={this.state.modalEffect} >\r\n                            <Paper style={style} variant=\"outlined\">\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New effect\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action setState={this.setState.bind(this)} action={setting} /></div>\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <Button color='inherit' onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewRoutine","import React from 'react'\r\nimport { Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@mui/material'\r\nimport md5 from 'md5'\r\nimport { Link } from \"react-router-dom\"\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Module extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            modules: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        if (resultModule.error) {\r\n            this.setState({ enabled: true, message: resultModule.package + \" : \" + resultModule.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\" >\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={{borderColor:'rgba(255, 255, 255, 0.12)'}} align='left'>\r\n                                        <Typography variant='body1'>\r\n                                            Identifiant\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.modules.slice(this.state.page * 10, (this.state.page + 1) * 10).map((pmodule, index) => (\r\n                                    <TableRow onClick={() => { this.props.history.push(\"/module/\" + md5(pmodule.name)) }} hover key={index} style={{ cursor: 'pointer' }}>\r\n                                        <TableCell style={{ borderBottom: 0 }}  align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {pmodule.name}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignContent: 'center', alignItems: 'center' }}>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.modules.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onPageChange={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Module","import React from 'react'\r\nimport md5 from 'md5'\r\nimport JSONPretty from 'react-json-pretty'\r\n\r\nimport { Close } from '@mui/icons-material'\r\nimport { Paper, Typography, Divider, Button, IconButton, Alert } from '@mui/material'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Detail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hashId: props.match.params.id,\r\n            loading: null,\r\n            module: null,\r\n            enabled: false,\r\n            message: \"\",\r\n            executeInformation: \"\",\r\n            severity: \"error\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/configurations/module\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                severity: \"error\",\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n            this.props.history.push('/module')\r\n        } else {\r\n            let _module = false\r\n            result.data.forEach(pModule => {\r\n                if (md5(pModule.name) == this.state.hashId) {\r\n                    _module = pModule\r\n                }\r\n            })\r\n            if (_module) {\r\n                this.setState({\r\n                    module: _module\r\n                })\r\n            } else {\r\n                this.props.history.push('/module')\r\n            }\r\n        }\r\n        this.setState({ loading: null })\r\n    }\r\n\r\n    async executeAction(action, settings) {\r\n        this.setState({ loading: action })\r\n        let tmp = {}\r\n        for (let index = 0; index < settings.length; index++) {\r\n            let argument = settings[index];\r\n            let value = this.state[\"settings-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmp[argument.id] = value\r\n        }\r\n        let result = await new Request().post({ settings: tmp, reference: this.state.module.reference }).fetch(\"/api/modules/\" + md5(this.state.module.name) + \"/actions/\" + action)\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                severity: \"error\",\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n            this.setState({ loading: null })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({\r\n                    executeInformation: JSON.stringify(result.data)\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    enabled: true,\r\n                    severity: \"success\",\r\n                    message: \"Success\"\r\n                })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.module) {\r\n            return (\r\n                <div>\r\n                    <Paper variant=\"outlined\" style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                {this.state.module.name.split(\"/\")[1]}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.module.name}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            {\r\n                                this.state.module.actions.map((action,index) => {\r\n                                    return (\r\n                                        <Paper variant=\"outlined\" key={index} style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', padding: 10 }}>\r\n                                            <Button color='inherit' disabled={this.state.loading == action.id} onClick={() => { this.executeAction(action.id, action.settings) }} variant={this.state.loading == action.id ? 'contained' : 'outlined'}  style={{ width: '250px', height: '100%', borderColor: 'rgba(255, 255, 255, 0.15)'  }} >\r\n                                                {action.name}\r\n                                            </Button>\r\n                                            {\r\n                                                action.settings.length > 0 ?\r\n                                                    <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\r\n                                                        {\r\n                                                            action.settings.map(setting => {\r\n                                                                return <Action flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                    : null\r\n                                            }\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\r\n                        {this.state.message}\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\r\n                    {this.state.message}\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail","import React from 'react'\r\nimport { IconButton, Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead, Button } from '@mui/material'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Category, DevicesOther, Close, GetApp } from '@mui/icons-material'\r\n\r\nclass Configuration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            markets: [],\r\n            pageMarket: 0,\r\n            severity: \"error\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    async install(pPackage) {\r\n        this.setState({ loading: true })\r\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/install\")\r\n        if (result.error) {\r\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ severity: \"info\", enabled: true, message: pPackage + \" was installed\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async upgrade(pPackage) {\r\n        this.setState({ loading: true })\r\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/upgrade\")\r\n        if (result.error) {\r\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ severity: \"info\", enabled: true, message: pPackage + \" was upgraded\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async uninstall(pPackage) {\r\n        this.setState({ loading: true })\r\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/uninstall\")\r\n        if (result.error) {\r\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ severity: \"info\", enabled: true, message: pPackage + \" was removed\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        let resultPing = await new Request().get().fetch(\"/api/ping\")\r\n        let result = await fetch(\"https://market.intendant.io\")\r\n        let resultMarket = await result.json()\r\n\r\n        if (resultPing.error || resultSmartobject.error || resultModule.error) {\r\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: resultPing.package + \" : \" + resultPing.message })\r\n            return\r\n        }\r\n\r\n        resultMarket = resultMarket.map(market => {\r\n            market.mode = \"install\"\r\n            market.currentVersion = \"0.0.0\"\r\n            return market\r\n        })\r\n        resultMarket = resultMarket.map(market => {\r\n            if (market.name == \"@intendant/core\") {\r\n                if (resultPing.version != market.version) {\r\n                    market.mode = \"upgrade\"\r\n                } else {\r\n                    market.mode = \"none\"\r\n                }\r\n                market.currentVersion = resultPing.version\r\n            }\r\n            return market\r\n        })\r\n        resultModule.data.forEach(pModule => {\r\n            resultMarket = resultMarket.map(market => {\r\n                if (market.name == pModule.name) {\r\n                    market.currentVersion = pModule.version\r\n                    if (market.version == pModule.version) {\r\n                        market.mode = \"remove\"\r\n                    } else {\r\n                        market.mode = \"update\"\r\n                    }\r\n                }\r\n                return market\r\n\r\n            })\r\n        })\r\n        resultSmartobject.data.forEach(pModule => {\r\n            resultMarket = resultMarket.map(market => {\r\n                if (market.name == pModule.name) {\r\n                    market.currentVersion = pModule.version\r\n                    if (market.version == pModule.version) {\r\n                        market.mode = \"remove\"\r\n                    } else {\r\n                        market.mode = \"update\"\r\n                    }\r\n                }\r\n\r\n                return market\r\n            })\r\n        })\r\n        this.setState({ markets: resultMarket })\r\n        if (resultModule.error) {\r\n            this.setState({ severity: \"error\", enabled: true, message: resultModule.package + \" : \" + resultModule.message })\r\n        } else if (resultSmartobject.error) {\r\n            this.setState({ severity: \"error\", enabled: true, message: resultSmartobject.package + \" : \" + resultSmartobject.message })\r\n        } else {\r\n            this.setState({ modules: resultModule.data, smartobjects: resultSmartobject.data })\r\n        }\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\">\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align='left' style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                        <Typography variant='body1'>\r\n                                            Name\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align='left' style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                        <Typography variant='body1'>\r\n                                            Type\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align='center' style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                        <Typography variant='body1'>\r\n                                            Version\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align='center' style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                        <Typography variant='body1'>\r\n                                            Action\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.state.markets.slice(this.state.pageMarket * 20, (this.state.pageMarket + 1) * 20).map((pmodule) => (\r\n                                    <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                        <TableCell style={{ borderBottom: 0 }}  align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {pmodule.name}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ borderBottom: 0 }}  align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {pmodule.type}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ borderBottom: 0 }}  align=\"center\">\r\n                                            <Typography variant='body1'>\r\n                                                {pmodule.version}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ borderBottom: 0 }}  align=\"center\">\r\n                                            <Typography variant='body1'>\r\n                                                {\r\n                                                    pmodule.mode == \"none\" ?\r\n                                                        <Typography variant='body1'>\r\n                                                            Updated\r\n                                                        </Typography>\r\n                                                        :\r\n                                                        pmodule.mode == \"remove\" ?\r\n                                                            <Button color='inherit' style={{ borderColor: 'rgba(255, 255, 255, 0.15)' }} disabled={this.state.loading} size='small' startIcon={<Close />} onClick={() => { this.uninstall(pmodule.name) }} variant=\"outlined\" >\r\n                                                                Remove\r\n                                                            </Button>\r\n                                                            :\r\n                                                            pmodule.mode == \"upgrade\" ?\r\n                                                                <Button color='inherit' style={{ borderColor: 'rgba(255, 255, 255, 0.15)' }} disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => { this.upgrade(pmodule.name) }} variant=\"outlined\" >\r\n                                                                    Upgrade\r\n                                                                </Button>\r\n                                                                :\r\n                                                                pmodule.mode == \"install\" ?\r\n                                                                    <Button color='inherit' style={{ borderColor: 'rgba(255, 255, 255, 0.15)' }} disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => { this.install(pmodule.name) }} variant=\"outlined\" disableElevation  >\r\n                                                                        Install\r\n                                                                    </Button>\r\n                                                                    :\r\n                                                                    pmodule.mode == \"update\" ?\r\n                                                                        <Button color='inherit' style={{ borderColor: 'rgba(255, 255, 255, 0.15)' }} disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => { this.install(pmodule.name) }} variant=\"outlined\" disableElevation  >\r\n                                                                            Update\r\n                                                                        </Button>\r\n                                                                        :\r\n                                                                        <Button color='inherit' style={{ borderColor: 'rgba(255, 255, 255, 0.15)' }} disabled={true} size='small' startIcon={<GetApp />} onClick={() => { this.install(pmodule.name) }} variant=\"outlined\" disableElevation  >\r\n                                                                            Unknown\r\n                                                                        </Button>\r\n                                                }\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.markets.length}\r\n                        rowsPerPage={20}\r\n                        page={this.state.pageMarket}\r\n                        rowsPerPageOptions={[]}\r\n                        onPageChange={(event, page) => { this.setState({ pageMarket: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Configuration","import React from 'react'\r\nimport { Add } from '@mui/icons-material'\r\nimport { Typography, Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, IconButton } from '@mui/material'\r\nimport { Link } from \"react-router-dom\"\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Widget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            widgets: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/widgets\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", widgets: result.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\">\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableBody>\r\n                                {this.state.widgets.slice(this.state.page * 10, (this.state.page + 1) * 10).map((widget, index) => (\r\n                                    <TableRow onClick={() => { this.props.history.push(\"/widget/\" + widget.id) }} hover key={index} style={{ cursor: 'pointer' }}>\r\n                                        <TableCell style={{ borderBottom: 0 }}  align=\"left\">\r\n                                            <img style={{ width: 30, height: 30, filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + widget.icon + \".svg\"} />\r\n                                        </TableCell>\r\n                                        <TableCell style={{ borderBottom: 0 }}  align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {widget.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ borderBottom: 0 }}  align=\"left\">\r\n                                            {widget.contents.sort((a, b) => { return a.type.rank > b.type.rank }).map(content => {\r\n                                                return content.content.split(\"\\n\").map((_content, pIndex) => {\r\n                                                    return (\r\n                                                        <Typography key={pIndex} variant='body1' style={{ fontWeight: content.type.reference == 'title' ? 'bold' : 'normal' }}>\r\n                                                            {_content}\r\n                                                        </Typography>\r\n                                                    )\r\n                                                })\r\n                                            })}\r\n                                        </TableCell>\r\n                                        <TableCell style={{ borderBottom: 0 }}  align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {widget.icon}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Paper>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                            <Link to=\"/widget/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Add />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.widgets.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onPageChange={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Widget","import React from 'react'\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nimport { Popover, InputAdornment, TableRow, Table, MenuItem, FormControl, TableCell, IconButton, Typography, InputLabel, Button, TextField, Paper, TableBody, TableContainer, TableHead, Divider, Select } from '@mui/material'\r\nimport { Close, Add, List, Save } from '@mui/icons-material'\r\nimport IconList from '../../../components/IconList'\r\n\r\nclass NewWidget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            popup: false,\r\n            content: null,\r\n            description: \"\",\r\n            image: \"\",\r\n            sources: [],\r\n            contentSources: [],\r\n            source: null,\r\n            action: null,\r\n            widgetReference: \"\",\r\n            reference: \"\",\r\n            icon: \"\",\r\n            type: \"title\",\r\n            types: [],\r\n            contents: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/smartobjects\")\r\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else if (resultConfiguration.error) {\r\n            this.setState({ enabled: true, message: resultConfiguration.package + \" : \" + resultConfiguration.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", loading: false, sources: resultSource.data, type: false, types: resultConfiguration.data.contents.types })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) {\r\n                this.setState({ action: action })\r\n            }\r\n        })\r\n    }\r\n\r\n    setType(id) {\r\n        this.state.types.map(type => {\r\n            if (type.id == id) {\r\n                this.setState({ type: type })\r\n            }\r\n        })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.widgetReference.length == 0 || this.state.contentSources.length == 0 || this.state.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let authorization = localStorage.getItem(\"authorization\")\r\n        let server = localStorage.getItem(\"server\")\r\n        let result = await fetch(server + \"/api/widgets\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + authorization\r\n            },\r\n            body: JSON.stringify({\r\n                reference: this.state.widgetReference,\r\n                sources: this.state.contentSources,\r\n                contents: this.state.contents,\r\n                icon: this.state.icon\r\n            })\r\n        })\r\n        let resultJSON = await result.json()\r\n        if (resultJSON.error) {\r\n            this.setState({ enabled: true, message: resultJSON.package + \" : \" + resultJSON.message })\r\n        } else {\r\n            this.props.history.push('/widget')\r\n        }\r\n    }\r\n\r\n\r\n    insertContent() {\r\n        let contents = this.state.contents\r\n        contents.push({ type: this.state.type, content: this.state.content })\r\n        this.setState({ contents: contents, content: \"\" })\r\n    }\r\n\r\n    insertSource() {\r\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let find = false\r\n        let contentSources = this.state.contentSources\r\n        contentSources.forEach(contentSource => {\r\n            if (contentSource.reference == this.state.reference) {\r\n                find = true\r\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\r\n            }\r\n        })\r\n        if (find) {\r\n            return\r\n        }\r\n        let tmpsettings = []\r\n        let action = this.state.action\r\n        for (let index = 0; index < action.settings.length; index++) {\r\n            let argument = action.settings[index];\r\n            let value = this.state[\"settings-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmpsettings.push({ reference: argument.id, value: value })\r\n        }\r\n        contentSources.push({\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: tmpsettings,\r\n            reference: this.state.reference\r\n        })\r\n        this.setState({\r\n            contentSources: contentSources,\r\n            action: null,\r\n            source: null,\r\n            reference: \"\"\r\n        })\r\n    }\r\n\r\n    delete(index) {\r\n        let contents = []\r\n        this.state.contents.forEach((content, pindex) => {\r\n            if (pindex != index) { contents.push(content) }\r\n        })\r\n        this.setState({ contents: contents })\r\n    }\r\n\r\n    deleteContent(index) {\r\n        let contentSources = []\r\n        this.state.contentSources.forEach((content, pindex) => {\r\n            if (pindex != index) { contentSources.push(content) }\r\n        })\r\n        this.setState({ contentSources: contentSources })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\" style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                    <div style={{ padding: 10 }}>\r\n                        <Typography variant='h4' > Widget </Typography>\r\n                    </div>\r\n                    <Divider />\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ widgetReference: event.target.value }) }}\r\n                            multiline\r\n                            value={this.state.widgetReference}\r\n                            label=\"Reference\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            style={{ marginLeft: 10 }}\r\n                            onChange={(event) => { this.setState({ icon: event.target.value }) }}\r\n                            multiline\r\n                            value={this.state.icon}\r\n                            label=\"Icon\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                            <List />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ popup: false, icon: icon }) }} />\r\n                        </Popover>\r\n                    </div>\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <Typography variant='h5' > Source </Typography>\r\n                        <Paper variant=\"outlined\" style={{marginTop: 10}}>\r\n                            <TableContainer>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align='left' style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                <Typography variant='subtitle1'> Source </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                <Typography variant='subtitle1'> Argument </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            this.state.contentSources.map((contentSource, index) => {\r\n                                                return (\r\n                                                    <TableRow >\r\n                                                        <TableCell align=\"left\" style={{ width: '30%', borderBottom: 0 }}>\r\n                                                            <Typography variant='subtitle1'> {contentSource.reference} </Typography>\r\n                                                            <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\r\n                                                            <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"left\" style={{ borderBottom: 0 }} >\r\n                                                            <Typography variant='subtitle1'>\r\n                                                                {JSON.stringify(contentSource.arguments)}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\" style={{ borderBottom: 0 }} >\r\n                                                            <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\r\n                                                                <Close />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        <TableRow  >\r\n                                            <TableCell align=\"left\" style={{ width: '30%', borderBottom: 0 }}>\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.setState({ reference: event.target.value }) }}\r\n                                                    style={{ width: '100%' }}\r\n                                                    multiline\r\n                                                    value={this.state.reference}\r\n                                                    label=\"Reference\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                                <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                    <InputLabel>Source</InputLabel>\r\n                                                    <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                                        {\r\n                                                            this.state.sources.map(source => {\r\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                {\r\n                                                    this.state.source ?\r\n                                                        <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                            <InputLabel>Action</InputLabel>\r\n                                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                                {\r\n                                                                    this.state.source.actions.map(action => {\r\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{ width: '40%', borderBottom: 0 }}>\r\n                                                {\r\n                                                    this.state.action && this.state.action.settings.length > 0 ?\r\n                                                        <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\r\n                                                            <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\r\n                                                                {\r\n                                                                    this.state.action.settings.map(setting => {\r\n                                                                        return <Action flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{ borderBottom: 0 }} >\r\n                                                <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Paper>\r\n                    </div>\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <Typography variant='h5' > Content </Typography>\r\n                        <Paper variant=\"outlined\" style={{marginTop: 10}}>\r\n                            <TableContainer>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align='left' style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                <Typography variant='subtitle1'> Type </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                <Typography variant='subtitle1'> Affichage </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.contents.sort((a, b) => { return a.type.rank > b.type.rank }).map((content, index) => (\r\n                                            <TableRow >\r\n                                                <TableCell align=\"left\" style={{ borderBottom: 0 }} >\r\n                                                    <Typography variant='subtitle1'> {content.type.name} </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ borderBottom: 0 }} >\r\n                                                    <Typography variant='subtitle1'> {content.content} </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ borderBottom: 0 }} >\r\n                                                    <IconButton onClick={() => { this.delete(index) }} style={{ borderRadius: 2 }}>\r\n                                                        <Close />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        <TableRow  >\r\n                                            <TableCell align=\"left\" style={{ borderBottom: 0 }} >\r\n                                                <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\r\n                                                    <InputLabel>Type</InputLabel>\r\n                                                    <Select value={this.state.type.id} onChange={(event) => { this.setType(event.target.value) }} label=\"Type\" >\r\n                                                        {\r\n                                                            this.state.types.map(type => {\r\n                                                                return <MenuItem value={type.id} >{type.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{ borderBottom: 0 }} >\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.setState({ content: event.target.value }) }}\r\n                                                    style={{ width: '100%' }}\r\n                                                    multiline\r\n                                                    value={this.state.content}\r\n                                                    label=\"Name\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{ borderBottom: 0 }} >\r\n                                                <IconButton onClick={() => { this.insertContent() }} style={{ borderRadius: 2 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Paper>\r\n                    </div>\r\n                </Paper>\r\n                    <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 5 }}>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewWidget","import React from 'react'\r\nimport Action from '../../../components/Action'\r\nimport { FormControl, Select, InputLabel, MenuItem, Paper, Typography, Divider, IconButton, TextField, TableCell, TableBody, TableContainer, TableHead, Table, TableRow } from '@mui/material'\r\nimport { Close, Add, Delete, ArrowUpward, ArrowDownward } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nclass Widget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            id: props.match.params.id,\r\n            contentSources: [],\r\n            reference: '',\r\n            source: '',\r\n            action: '',\r\n            type: \"\",\r\n            content: \"\",\r\n            sources: [],\r\n            types: [],\r\n            widget: null,\r\n            needSave: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/widgets/\" + this.state.id)\r\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else if (resultConfiguration.error) {\r\n            this.setState({ enabled: true, message: resultConfiguration.package + \" : \" + resultConfiguration.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", loading: false, widget: result.data, sources: resultSource.data, types: resultConfiguration.data.contents.types })\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        let result = await new Request().delete({}).fetch(\"/api/widgets/\" + this.state.widget.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/widget')\r\n        }\r\n    }\r\n\r\n    async deleteSource(source) {\r\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.widget.id + \"/sources/\" + source)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertSource() {\r\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let find = false\r\n        this.state.widget.sources.forEach(contentSource => {\r\n            if (contentSource.reference == this.state.reference) {\r\n                find = true\r\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\r\n            }\r\n        })\r\n        if (find) {\r\n            return\r\n        }\r\n        let tmpsettings = []\r\n        let action = this.state.action\r\n        for (let index = 0; index < action.settings.length; index++) {\r\n            let argument = action.settings[index];\r\n            let value = this.state[\"settings-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmpsettings.push({ reference: argument.id, value: value })\r\n        }\r\n        let result = await new Request().post({\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: tmpsettings,\r\n            reference: this.state.reference\r\n        }).fetch(\"/api/widgets/\" + this.state.id + \"/sources\")\r\n\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ action: null, source: null, reference: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) {\r\n                this.setState({ action: action })\r\n            }\r\n        })\r\n    }\r\n\r\n    async setContent() {\r\n        let result = await new Request().post({ type: this.state.type, content: this.state.content }).fetch(\"/api/widgets/\" + this.state.id + \"/contents\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ content: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteContent(id) {\r\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.id + \"/contents/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async update(content) {\r\n        let widget = this.state.widget\r\n        let contents = widget.contents.map(pContent => {\r\n            if (pContent.id == content.id) {\r\n                pContent.native = content.native\r\n            }\r\n            return pContent\r\n        })\r\n        widget.contents = contents\r\n        this.setState({ widget: widget, needSave: null })\r\n        let result = await new Request().put({ content: content }).fetch(\"/api/widgets/\" + this.state.widget.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.widget) {\r\n            return (\r\n                <div>\r\n                    <Paper variant=\"outlined\" style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' style={{ fontSize: 25 }}>\r\n                                {this.state.widget.reference}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.widget.icon}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Source\r\n                            </Typography>\r\n                            <Paper variant=\"outlined\">\r\n                                <TableContainer>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align='left' style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                    <Typography variant='subtitle1'>Reference</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left' style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                    <Typography variant='subtitle1' >Source</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                    <Typography variant='subtitle1' >Argument</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.widget.sources.map((source, index) => {\r\n                                                    return (\r\n                                                        <TableRow key={index} >\r\n                                                            <TableCell style={{ borderBottom: 0 }} align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.reference}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell style={{ borderBottom: 0 }} align=\"left\">\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.object}\r\n                                                                </Typography>\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.action}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell style={{ borderBottom: 0 }} align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {\r\n                                                                        source.arguments.map((argument, pIndex) => {\r\n                                                                            return (\r\n                                                                                <Typography key={pIndex} variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell style={{ borderBottom: 0 }} align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteSource(source.id) }} style={{ borderRadius: 3 }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Paper>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Paper variant=\"outlined\">\r\n                                <TableContainer>\r\n                                    <Table>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.contentSources.map((contentSource, index) => {\r\n                                                    return (\r\n                                                        <TableRow key={index} >\r\n                                                            <TableCell align=\"left\" style={{  borderBottom: 0 }}>\r\n                                                                <Typography variant='subtitle1'> {contentSource.reference} </Typography>\r\n                                                                <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\r\n                                                                <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\" style={{ borderBottom: 0 }} >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {JSON.stringify(contentSource.arguments)}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\" style={{ borderBottom: 0 }} >\r\n                                                                <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\r\n                                                                    <Close />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <TableRow  >\r\n                                                <TableCell align=\"left\" style={{ width: '30%', borderBottom: 0 }}>\r\n                                                    <TextField\r\n                                                        onChange={(event) => { this.setState({ reference: event.target.value }) }}\r\n                                                        style={{ width: '100%' }}\r\n                                                        multiline\r\n                                                        value={this.state.reference}\r\n                                                        label=\"Reference\"\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 10, marginBottom: 10, width: '100%' }} >\r\n                                                        <InputLabel>Source</InputLabel>\r\n                                                        <Select placeholder='Source' value={this.state.source ? this.state.source.id : ''} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                                            {\r\n                                                                this.state.sources.map((source, pIndex) => {\r\n                                                                    return <MenuItem key={pIndex} value={source.id} >{source.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                    {\r\n                                                        this.state.source ?\r\n                                                            <FormControl variant=\"outlined\" style={{ width: '100%' }} >\r\n                                                                <InputLabel>Action</InputLabel>\r\n                                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : ''} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                                    {\r\n                                                                        this.state.source.actions.map((action, pIndex) => {\r\n                                                                            return <MenuItem key={pIndex} value={action.id} >{action.name}</MenuItem>\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                            : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ width: '40%', borderBottom: 0 }}>\r\n                                                    {\r\n                                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                                            <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\r\n                                                                <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\r\n                                                                    {\r\n                                                                        this.state.action.settings.map((setting, index) => {\r\n                                                                            return (\r\n                                                                                <div style={{ margin: 5 }}>\r\n                                                                                    <Action key={index} flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                                                </div>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ borderBottom: 0 }} >\r\n                                                    <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Paper>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Content\r\n                            </Typography>\r\n                            <Paper variant=\"outlined\">\r\n                                <TableContainer>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align='left' style={{ width: '15%', borderColor: 'rgba(255, 255, 255, 0.12)' }} >\r\n                                                    <Typography variant='subtitle1'>Type</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left' style={{ width: '80%', borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                    <Typography variant='subtitle1' >content</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left' style={{ width: '20%', borderColor: 'rgba(255, 255, 255, 0.12)' }}>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.widget.contents.sort((a, b) => { return a.type.rank > b.type.rank }).map((content, index) => {\r\n                                                    return (\r\n                                                        <TableRow key={index} >\r\n                                                            <TableCell align=\"left\" style={{ borderBottom: 0 }}  >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {content.type.name}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\" style={{ borderBottom: 0 }}  >\r\n                                                                <TextField\r\n                                                                    style={{ width: '100%', marginBottom: 5 }}\r\n                                                                    onChange={(event) => { content.native = event.target.value; this.setState({ needSave: index }) }}\r\n                                                                    onBlur={(event) => { this.update(content) }}\r\n                                                                    multiline\r\n                                                                    value={content.native}\r\n                                                                    variant=\"outlined\"\r\n                                                                />\r\n                                                                {\r\n                                                                    content.content.split(\"\\n\").map((_content, pIndex) => {\r\n                                                                        return (\r\n                                                                            <Typography key={pIndex} variant='body1' color={this.state.needSave == index ? 'primary' : 'inherit'} style={{ fontWeight: _content.type == 'title' ? 'bold' : 'normal' }}>\r\n                                                                                {_content}\r\n                                                                            </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\" style={{ borderBottom: 0 }} >\r\n                                                                <IconButton onClick={() => { this.deleteContent(content.id) }} style={{ borderRadius: 3 }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <TableRow  >\r\n                                                <TableCell align=\"left\" style={{ borderBottom: 0 }} >\r\n                                                    <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\r\n                                                        <InputLabel>Type</InputLabel>\r\n                                                        <Select value={this.state.type} onChange={(event) => { this.setState({ type: event.target.value }) }} label=\"Type\" >\r\n                                                            {\r\n                                                                this.state.types.map((type, pIndex) => {\r\n                                                                    return <MenuItem key={pIndex} value={type.id} >{type.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ borderBottom: 0 }} >\r\n                                                    <TextField\r\n                                                        onChange={(event) => { this.setState({ content: event.target.value }) }}\r\n                                                        style={{ width: '100%' }}\r\n                                                        multiline\r\n                                                        value={this.state.content}\r\n                                                        label=\"Name\"\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ borderBottom: 0 }} >\r\n                                                    <IconButton onClick={() => { this.setContent() }} style={{ borderRadius: 2 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Paper>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete() }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Widget","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'moment'\r\nimport { Add, Delete, Settings, QrCode } from '@mui/icons-material'\r\nimport { FormControl, Button, MenuItem, Select, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton } from '@mui/material'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Smartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            users: [],\r\n            profiles: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/users\")\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n        } else if (resultProfile.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultProfile.package + \" : \" + resultProfile.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                users: result.data,\r\n                profiles: resultProfile.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/users/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateProfile(user, profile) {\r\n        let result = await new Request().put({\r\n            login: user.login,\r\n            profile: profile\r\n        }).fetch(\"/api/users/\" + user.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper variant=\"outlined\" style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <div>\r\n                            <Paper variant=\"outlined\">\r\n                            <TableContainer>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        {this.state.users.sort((a, b) => {\r\n                                            return a.profile > b.profile\r\n                                        }).slice(this.state.page * 10, (this.state.page + 1) * 10).map((user,index) => (\r\n                                            <TableRow hover key={index} style={{ cursor: 'pointer' }}>\r\n                                                <TableCell align=\"left\" style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                                    <Typography variant='body1'>\r\n                                                        {\r\n                                                            user.login\r\n                                                        }\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                                    <FormControl variant=\"outlined\"  >\r\n                                                        <Select disabled={user.login == 'admin'} value={user.profile} onChange={(event) => { this.updateProfile(user, event.target.value) }} >\r\n                                                            {\r\n                                                                this.state.profiles.map((profile,pIndex) => {\r\n                                                                    return (\r\n                                                                        <MenuItem key={pIndex} value={profile.id} >{profile.name}</MenuItem>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{borderColor:'rgba(255, 255, 255, 0.12)'}}>\r\n                                                    <IconButton onClick={() => { this.props.history.push('/qrcode/' + btoa(window.location.origin + \"|\" + user.login + \"|\") ) }} style={{ borderRadius: 3 }}>\r\n                                                        <QrCode />\r\n                                                    </IconButton>\r\n                                                    <IconButton onClick={() => { this.props.history.push('/user/' + user.id +  \"/password\") }} style={{ borderRadius: 3 }}>\r\n                                                        <Settings />\r\n                                                    </IconButton>\r\n                                                    <IconButton onClick={() => { this.delete(user.id) }} style={{ borderRadius: 3 }}>\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            </Paper>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    <Link to=\"/user/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.users.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onPageChange={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Smartobject","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@mui/material'\r\nimport { Save } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewSmartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            profiles: [],\r\n            profile: \"\",\r\n            login: \"\",\r\n            password: \"\",\r\n            confirmationPassword: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", profiles: result.data })\r\n        }\r\n    }\r\n\r\n    async add() {\r\n        if (this.state.login.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing login\" })\r\n        } else if (this.state.password.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing password\" })\r\n        } else if (this.state.password != this.state.confirmationPassword) {\r\n            this.setState({ enabled: true, message: \"Passwords are not the same\" })\r\n        } else {\r\n            let result = await new Request().post({ login: this.state.login, password: this.state.password, profile: this.state.profile }).fetch(\"/api/users\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/user')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant='outlined' elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField placeholder='login' variant=\"outlined\" value={this.state.login} onChange={(event) => { this.setState({ login: event.currentTarget.value }) }} />\r\n                            <TextField type='password' placeholder='password' variant=\"outlined\" value={this.state.password} style={{ marginTop: 10 }} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\r\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{ marginTop: 10 }} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\r\n                            <FormControl variant=\"outlined\" style={{ width: '100%', marginTop: 10 }} >\r\n                                <InputLabel>Profile</InputLabel>\r\n                                <Select label=\"Profile\" value={this.state.profile} onChange={(event) => { this.setState({ profile: event.target.value }) }} >\r\n                                    {\r\n                                        this.state.profiles.map((profile,index) => {\r\n                                            return (\r\n                                                <MenuItem key={index} value={profile.id} >{profile.name}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSmartobject","import React from 'react'\r\n\r\nimport QRCode from 'qrcode.react'\r\nimport { Paper} from '@mui/material'\r\n\r\nclass QrCode extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Paper variant=\"outlined\" style={{padding: 10, display:'flex', justifyContent:'center'}} >\r\n                <QRCode style={{borderRadius: 3}} value={this.props.match.params.id} size={256} includeMargin={true} />\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QrCode","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@mui/material'\r\nimport { Save } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewPassword extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            id: props.match.params.id,\r\n            message: \"\",\r\n            confirmationPassword: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    async changePassword() {\r\n        if(this.state.password.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing password\" })\r\n        } else if(this.state.confirmationPassword.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing confirmation password\" })\r\n        } else if(this.state.password != this.state.confirmationPassword) {\r\n            this.setState({ enabled: true, message: \"Passwords are not the same\" })\r\n        } else {\r\n            let result = await new Request().post({password: this.state.password}).fetch(\"/api/users/\" + this.state.id + \"/password\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/user')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\" style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField placeholder='password' type='password' variant=\"outlined\" value={this.state.password} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\r\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                    <IconButton onClick={() => { this.changePassword() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPassword","import React from 'react'\r\nimport { Drawer, List, Typography, Box, Divider, ListItem, ListItemIcon, ListItemText } from '@mui/material'\r\nimport { ShoppingCart, House, Menu, DevicesOther, ExitToApp, AccountTree, Category, DeviceHub, Https, Extension, Settings, Person } from '@mui/icons-material'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport BottomNavigation from '@mui/material/BottomNavigation'\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction'\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    render() {\r\n        if (this.props.isMobile) {\r\n            return (\r\n                <BottomNavigation\r\n                    elevation={10}\r\n                    style={{ zIndex: 2, justifyContent: 'space-between' }}\r\n                    sx={{ width: '100%', position: 'fixed', bottom: 0, left: 0, right: 0, overflowX: 'visible' }}\r\n                    onChange={(event, newValue) => {\r\n\r\n                    }}\r\n                >\r\n                    <Link to=\"/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                        <BottomNavigationAction style={{ color: 'white' }} label=\"Recents\" icon={<DevicesOther />} />\r\n                    </Link>\r\n                    <Link to=\"/localisation\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                        <BottomNavigationAction style={{ color: 'white' }} label=\"Favorites\" icon={<House />} />\r\n                    </Link>\r\n                    <Link to=\"/module\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                        <BottomNavigationAction style={{ color: 'white' }} label=\"Nearby\" icon={<Category />} />\r\n                    </Link>\r\n                    <Link to=\"/widget\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                        <BottomNavigationAction style={{ color: 'white' }} label=\"Nearby\" icon={<Extension />} />\r\n                    </Link>\r\n                    <Link to=\"/widget\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                        <BottomNavigationAction style={{ color: 'white' }} label=\"Nearby\" icon={<Menu />} />\r\n                    </Link>\r\n                </BottomNavigation>\r\n            )\r\n        }\r\n        return (\r\n            <Drawer variant=\"persistent\" anchor=\"left\" open={true} style={{ width: 240 }} >\r\n                <Box style={{ width: 240, display: 'flex', justifyContent: 'space-between', overflowX: 'hidden' }}>\r\n                    <List style={{ width: '100%' }}>\r\n                        <Box style={{ display: 'flex', justifyContent: 'flex-start', padding: 5, alignContent: 'center', alignSelf: 'center', alignItems: 'center' }}>\r\n                            <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ minHeight: 40, minWidth: 40, height: '7vh', width: '7vh', borderRadius: 7, marginLeft: 15 }} />\r\n                            <Box>\r\n                                <Typography variant='h5' style={{ paddingTop: 15, paddingLeft: 10 }}>\r\n                                    Intendant\r\n                                </Typography>\r\n                                <Typography variant='subtitle1' style={{ paddingTop: 0, paddingBottom: 15, paddingLeft: 10 }}>\r\n                                    Administration\r\n                                </Typography>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Divider />\r\n                        <Link to=\"/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"smartobject\"}>\r\n                                <ListItemIcon>\r\n                                    <DevicesOther />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Smartobject\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/localisation\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"localisation\"}>\r\n                                <ListItemIcon>\r\n                                    <House />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Room\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/module\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"module\"}>\r\n                                <ListItemIcon>\r\n                                    <Category />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Module\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/widget\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"widget\"} >\r\n                                <ListItemIcon>\r\n                                    <Extension />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Widget\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/process\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"process\"} >\r\n                                <ListItemIcon>\r\n                                    <DeviceHub />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Process\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/routine\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"configuration\"} >\r\n                                <ListItemIcon>\r\n                                    <AccountTree />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Routine\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/user\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"user\"} >\r\n                                <ListItemIcon>\r\n                                    <Person />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"User\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/market\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"market\"} >\r\n                                <ListItemIcon>\r\n                                    <ShoppingCart />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Market\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider />\r\n                        <ListItem button key={\"disconnect\"} onClick={() => { this.props.onDisconnect() }} >\r\n                            <ListItemIcon>\r\n                                <ExitToApp />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"Disconnect\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                </Box>\r\n            </Drawer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Add } from '@mui/icons-material'\r\nimport { Typography, Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton } from '@mui/material'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Localisation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            localisations: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/localisations\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                localisations: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <Box>\r\n                            <Paper variant=\"outlined\">\r\n                                <TableContainer>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell style={{borderColor:'rgba(255, 255, 255, 0.12)'}}  align=\"left\">\r\n                                                    <Typography variant='body1'>\r\n                                                        Reference\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.state.localisations.slice(this.state.page * 10, (this.state.page + 1) * 10).map((localisation, index) => (\r\n                                                <TableRow onClick={() => { this.props.history.push(\"/localisation/\" + localisation.id) }} hover key={index} style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell style={{ borderBottom: 0 }}  align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {capitalizeFirstLetter(localisation.name)}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Paper>\r\n                            <Box style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    <Link to=\"/localisation/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.localisations.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onPageChange={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport default Localisation","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@mui/material'\r\nimport { Save } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewLocaliation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    async add() {\r\n        if (this.state.name === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : name is empty\" })\r\n        } else {\r\n            let result = await new Request().post({name: this.state.name}).fetch(\"/api/localisations\")\r\n            if (result.error) {\r\n                this.setState({\r\n                    enabled: true,\r\n                    message: result.package + \" : \" + result.message\r\n                })\r\n            } else {\r\n                this.props.history.push('/localisation')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper variant=\"outlined\" style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'row', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField onChange={(event) => { this.setState({ name: event.nativeEvent.target.value }) }} style={{ width: '150px', marginRight: 10 }} label=\"Name\" variant=\"outlined\" />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewLocaliation","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\nimport { Paper, Typography, TableContainer, TableBody, Divider, ListItem, TableCell, TableRow, Button, TextField, FormControlLabel, IconButton, Switch } from '@mui/material'\r\nimport { FileCopy, Delete, Close, Add } from '@mui/icons-material'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass DetailLocalisation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            localisation: null,\r\n            profiles: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let resultLocalisation = await new Request().get().fetch(\"/api/localisations/\" + this.state.id)\r\n        if (resultLocalisation.error || resultProfile.error) {\r\n            this.props.history.push('/localisation')\r\n        } else {\r\n            this.setState({ localisation: resultLocalisation.data, profiles: resultProfile.data })\r\n        }\r\n        this.setState({ loading: null })\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/localisations/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/localisation')\r\n        }\r\n    }\r\n\r\n    async insertProfile(localisation, profile) {\r\n        let result = await new Request().post({ idProfile: profile.id, }).fetch(\"/api/localisations/\" + localisation.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(localisation, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/localisations/\" + localisation.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.localisation) {\r\n            return (\r\n                <div>\r\n                    <Paper variant=\"outlined\" style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                {capitalizeFirstLetter(this.state.localisation.name)}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10 }}>\r\n                            {\r\n                                this.state.localisation.smartobjects.map((smartobject, index) => {\r\n                                    return (\r\n                                        <div key={index} style={{ paddingTop: 10 }}>\r\n                                            <Typography variant='body1' >\r\n                                                {capitalizeFirstLetter(smartobject.reference)}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map((profile, index) => {\r\n                                    let state = false\r\n                                    this.state.localisation.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem key={index} style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={\r\n                                                <Switch\r\n                                                    checked={state}\r\n                                                    onChange={() => {\r\n                                                        state ? this.deleteProfile(this.state.localisation, profile) : this.insertProfile(this.state.localisation, profile)\r\n                                                    }}\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            } label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper variant=\"outlined\" style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport default DetailLocalisation","import React from 'react'\r\nimport { Typography, Button, ListItemText, ListItem, Divider, List, Paper } from '@mui/material'\r\nimport Theme from '../../../Theme'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Security extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            profiles: [],\r\n            selectProfile: '',\r\n            authorizations: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            if (this.state.selectProfile === \"\") {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    profiles: result.data,\r\n                    selectProfile: result.data[0].id\r\n                })\r\n                this.onSelectProfile(result.data[0].id)\r\n            } else {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    profiles: result.data\r\n                })\r\n                this.onSelectProfile(this.state.selectProfile)\r\n            }\r\n        }\r\n    }\r\n\r\n    getColor(type) {\r\n        switch (type) {\r\n            default:\r\n            case 'GET':\r\n                return Theme.palette.success.main\r\n            case 'POST':\r\n                return Theme.palette.error.main\r\n            case 'PUT':\r\n                return Theme.palette.warning.main\r\n            case 'DELETE':\r\n                return Theme.palette.info.main\r\n        }\r\n    }\r\n\r\n    async onSelectProfile(id) {\r\n        this.setState({\r\n            selectProfile: id\r\n        })\r\n        let result = await new Request().get().fetch(\"/api/profiles/\" + id + \"/authorizations\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                authorizations: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async updateSecure(profile, pAuthorization, secure) {\r\n        let result = await new Request().post({ authorization: pAuthorization, secure: secure }).fetch(\"/api/profiles/\" + profile + \"/authorizations\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper style={{ padding: 10, marginBottom: 10, flexDirection: 'row', display: 'flex' }}>\r\n                    {\r\n                        this.state.profiles.map(profile => {\r\n                            return (\r\n                                <Button color='inherit' style={{ marginLeft: 5, marginRight: 5 }} onClick={() => { this.onSelectProfile(profile.id) }} variant={this.state.selectProfile === profile.id ? 'contained' : 'outlined'} >\r\n                                    {\r\n                                        profile.name\r\n                                    }\r\n                                </Button>\r\n                            )\r\n                        })\r\n                    }\r\n                </Paper>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\r\n                        <ListItem >\r\n                            <ListItemText >\r\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.error.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    Refusé\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        {\r\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 0 }).map(authorization => {\r\n                                return (\r\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 1) }}>\r\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\r\n                                                    {authorization.method}\r\n                                                </Typography>\r\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\r\n                                                    {authorization.reference}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\r\n                        <ListItem >\r\n                            <ListItemText >\r\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.success.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    Authorisé\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        {\r\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 1 }).map(authorization => {\r\n                                return (\r\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 0) }} >\r\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\r\n                                                    {authorization.method}\r\n                                                </Typography>\r\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\r\n                                                    {authorization.reference}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Security","import React from 'react'\r\nimport SmartObject from './contents/SmartObject/List'\r\nimport DetailSmartObject from './contents/SmartObject/Detail'\r\nimport RedirectSmartObject from './contents/SmartObject/Redirect'\r\nimport NewSmartObject from './contents/SmartObject/New'\r\nimport ListProcess from './contents/Process/List'\r\nimport NewProcess from './contents/Process/New'\r\nimport DetailProcess from './contents/Process/Detail'\r\nimport Routine from './contents/Routine/List'\r\nimport NewRoutine from './contents/Routine/New'\r\nimport DetailRoutine from './contents/Routine/Detail'\r\nimport Module from './contents/Module/List'\r\nimport DetailModule from './contents/Module/Detail'\r\nimport Market from './contents/Market/List'\r\nimport Widget from './contents/Widget/List'\r\nimport NewWidget from './contents/Widget/New'\r\nimport DetailWidget from './contents/Widget/Detail'\r\nimport User from './contents/User/List'\r\nimport NewUser from './contents/User/New'\r\nimport QrCode from './contents/QrCode/QrCode'\r\nimport NewPassword from './contents/User/NewPassword'\r\nimport Sidebar from '../components/Sidebar'\r\nimport Localisation from './contents/Localisation/List'\r\nimport NewLocalisation from './contents/Localisation/New'\r\nimport DetailLocalisation from './contents/Localisation/Detail'\r\nimport Authorisation from './contents/Authorisation/List'\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\n\r\nclass Main extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaQueries('(max-width: 900px),(max-height: 560px)')\r\n    }\r\n\r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router basename='/admin'>\r\n                <Sidebar isMobile={this.state.isMobile} onDisconnect={() => { this.props.onDisconnect() }} />\r\n                <main style={{  width:  '100vw', paddingLeft:'10vw', paddingRight: '10vw', overflowX:  'hidden', overflowY: 'visible' }} >\r\n                    <div style={{paddingTop: '5vh', marginLeft: this.state.isMobile ? 0 : 240, marginTop: this.state.isMobile ? 16 : 0, height:'100vh' }}>\r\n                        <Switch>\r\n                            <Route exact path=\"/smartobject\" component={SmartObject} />\r\n                            <Route exact path=\"/smartobject/new\" component={NewSmartObject} />\r\n                            <Route exact path=\"/smartobject/redirect/:object\" component={RedirectSmartObject} />\r\n                            <Route exact path=\"/smartobject/:id\" component={DetailSmartObject} />\r\n                            <Route exact path=\"/module\" component={Module} />\r\n                            <Route exact path=\"/module/:id\" component={DetailModule} />\r\n                            <Route exact path=\"/routine\" component={Routine} />\r\n                            <Route exact path=\"/routine/new\" component={NewRoutine} />\r\n                            <Route exact path=\"/routine/:id\" component={DetailRoutine} />\r\n                            <Route exact path=\"/widget\" component={Widget} />\r\n                            <Route exact path=\"/widget/new\" component={NewWidget} />\r\n                            <Route exact path=\"/widget/authorization\" component={Widget} />\r\n                            <Route exact path=\"/widget/authorization\" component={Widget} />\r\n                            <Route exact path=\"/widget/:id\" component={DetailWidget} />\r\n                            <Route exact path=\"/process\" component={ListProcess} />\r\n                            <Route exact path=\"/process/new\" component={NewProcess} />\r\n                            <Route exact path=\"/process/:id\" component={DetailProcess} />\r\n                            <Route exact path=\"/qrcode/:id\" component={QrCode} />\r\n                            <Route exact path=\"/user\" component={User} />\r\n                            <Route exact path=\"/user/new\" component={NewUser} />\r\n                            <Route exact path=\"/user/:id/password\" component={NewPassword} />\r\n                            <Route exact path=\"/market\" component={Market} />\r\n                            <Route exact path=\"/localisation\" component={Localisation} />\r\n                            <Route exact path=\"/localisation/new\" component={NewLocalisation} />\r\n                            <Route exact path=\"/localisation/:id\" component={DetailLocalisation} />\r\n                            <Route exect path=\"/authorisation\" component={Authorisation} />\r\n                        </Switch>\r\n                    </div>\r\n                </main>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport Package from '../../package.json'\r\nimport { Paper, TextField, Button, Typography } from '@mui/material'\r\nimport Alert from '../components/Alert'\r\nimport Main from './Main'\r\nimport Request from '../utils/Request'\r\n\r\nclass GetStarted extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            authentification: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            password: \"\",\r\n            confirmePassword: \"\",\r\n            login: \"admin\",\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n    \r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n\r\n    async register() {\r\n        if (this.state.password == this.state.confirmePassword) {\r\n            let result = await new Request().put({ password: this.state.password }).fetch(\"/api/getstarted\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.onFinish()\r\n            }\r\n        } else {\r\n            this.setState({ enabled: true, message: 'Password and password confirmation is not the same' })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Paper variant='outlined' style={{ padding: 30, width: this.state.isMobile ? '400px' : '30vw', textAlign: 'center' }}>\r\n                <div >\r\n                    <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7 }} />\r\n                    <div style={{ fontSize: 70, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\r\n                        Intendant\r\n                    </div>\r\n                    <div style={{ fontSize: 14, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 30 }}>\r\n                        At the first launch, you must set the admin password\r\n                    </div>\r\n                </div>\r\n                <div noValidate autoComplete=\"off\" style={{ marginBottom: 10, marginTop: 25}}>\r\n                    <div style={{ marginTop: 10 }}>\r\n                        <TextField value={this.state.password} fullWidth label=\"Password\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\r\n                    </div>\r\n                    <div style={{ marginTop: 10 }}>\r\n                        <TextField value={this.state.confirmePassword} fullWidth label=\"Confirmation\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ confirmePassword: event.nativeEvent.target.value }) }} />\r\n                    </div>\r\n                    <div style={{  marginTop: 15, textAlign: 'end' }}>\r\n                        <Button color='inherit' variant='plain' onClick={() => { this.register() }}  >\r\n                            Let's get started\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GetStarted;\r\n","import React from 'react'\r\nimport Package from '../../package.json'\r\nimport { Paper, TextField, Button, Typography, Switch, IconButton } from '@mui/material'\r\nimport Alert from '../components/Alert'\r\nimport Main from './Main'\r\nimport GetStarted from './GetStarted'\r\nimport Request from '../utils/Request'\r\nimport { Settings } from '@mui/icons-material'\r\n\r\nclass Authentification extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            authentification: true,\r\n            enabled: false,\r\n            getStarted: false,\r\n            message: \"\",\r\n            password: \"\",\r\n            customAddress: false,\r\n            address: window.location.origin,\r\n            login: \"admin\",\r\n            isMobile: false,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n\r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => { \r\n            this.setState({ isMobile: e.matches })\r\n        }\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let server = localStorage.getItem(\"server\")\r\n        let authorization = localStorage.getItem(\"authorization\")\r\n        if(server && authorization) {\r\n            let result = await new Request().get().fetch(\"/api/smartobjects\")\r\n            if(result.error == false) {\r\n                this.setState({ enabled: false, message: \"\", authentification: false })\r\n            }\r\n        } else if (server) {\r\n            this.setState({ address: server.replace(\"http://\", \"\") })\r\n        }\r\n        this.mediaQueries('(max-width: 900px),(max-height: 560px)')\r\n        this.setState({loading: false})\r\n    }\r\n\r\n    async login() {\r\n        if (await this.checkServer()) {\r\n            let result = await new Request().post({ login: this.state.login, password: this.state.password }).fetch(\"/api/authentification\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                localStorage.setItem(\"authorization\", result.token)\r\n                this.setState({ enabled: false, message: \"\", authentification: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    disconnect() {\r\n        localStorage.removeItem(\"authorization\")\r\n        this.setState({ authentification: true, password: \"\" })\r\n    }\r\n\r\n    async checkServer() {\r\n        let ok = true\r\n        let protocol = window.location.protocol + \"//\"\r\n        if(this.state.address.split(\"://\").length > 1) {\r\n            protocol = \"\"\r\n        }\r\n        try {\r\n            let result = await fetch(protocol + this.state.address + \"/api/ping\", {}, 2000)\r\n            let resultJSON = await result.json()\r\n            if (resultJSON.message != \"pong\") {\r\n                this.setState({ enabled: true, message: 'Connection to server failed' })\r\n                ok = false\r\n            } else {\r\n                localStorage.setItem(\"server\",protocol + this.state.address)\r\n                if (resultJSON.getStarted) {\r\n                    this.setState({ getStarted: true })\r\n                    return false\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.setState({ enabled: true, message: 'Connection to server failed' })\r\n            ok = false\r\n        }\r\n        return ok\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loading ) {\r\n            return <div/>\r\n        }\r\n        if (this.state.getStarted) {\r\n            return (\r\n                <GetStarted onFinish={() => { this.setState({ getStarted: false }) }} />\r\n            )\r\n        } else {\r\n            if (this.state.authentification) {\r\n                return (\r\n                    <Paper variant='outlined' style={{ padding: 30, width: this.state.isMobile ? '380px' : '25vw', textAlign: 'center' }}>\r\n                        <div>\r\n                            <div style={{ marginBottom: 50 }}>\r\n                                <img  onClick={() => {this.setState({customAddress: !this.state.customAddress}) }}  src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7, cursor: 'pointer' }} />\r\n                                <div style={{ fontSize: 55, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\r\n                                    Intendant\r\n                                </div>\r\n                                <div style={{ fontSize: 20, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 15 }}>\r\n                                    Administration\r\n                                </div>\r\n                            </div>\r\n                            <form noValidate onSubmit={(e) => { e.preventDefault(); this.login() }} autoComplete=\"off\" style={{ marginBottom: 10 }}>\r\n                                {\r\n                                    this.state.customAddress ?\r\n                                        <div style={{ padding: 5 }}>\r\n                                            <TextField value={this.state.address} fullWidth label=\"Server address\" autoFocus onChange={(event) => { this.setState({ address: event.nativeEvent.target.value }) }} />\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                <div style={{ padding: 5 }}>\r\n                                    <TextField value={this.state.login} fullWidth label=\"Login\" autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ login: event.nativeEvent.target.value }) }} />\r\n                                </div>\r\n                                <div style={{ padding: 5 }}>\r\n                                    <TextField value={this.state.password} fullWidth label=\"Password\" type='password' autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\r\n                                </div>\r\n                                <div style={{ padding: 5, marginTop: 5, textAlign: 'end' }}>\r\n                                    <Button color='inherit' type='submit' variant='plain' on onSubmit={() => { this.login() }} onClick={() => { this.login() }}  >\r\n                                        Connection\r\n                                    </Button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                            {this.state.message}\r\n                        </Alert>\r\n                    </Paper>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Main onDisconnect={() => { this.disconnect() }} />\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Authentification;\r\n","import Authentification from './screens/Authentification'\r\nimport Theme from './Theme'\r\nimport { ThemeProvider, CssBaseline, Box } from '@mui/material'\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={Theme} >\r\n      <CssBaseline />\r\n      <Box style={{ userSelect: 'none', outline: 'none', WebkitTapHighlightColor: 'rgba(41,108,71,0.33)', height: '100vh', width: '100wh', backgroundColor: Theme.palette.background.default, display: 'flex', flexDirection: 'column', alignSelf: 'center', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\r\n        <Authentification />\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}