{"version":3,"sources":["components/Alert.js","utils/Request.js","screens/contents/SmartObject/List.js","components/WeekSchedul.js","Theme.js","components/Action.js","screens/contents/SmartObject/Detail.js","screens/contents/SmartObject/New.js","screens/contents/Process/List.js","utils/Source.js","components/IconList.js","screens/contents/Process/New.js","screens/contents/Process/Detail.js","screens/contents/Routine/List.js","screens/contents/Routine/New.js","screens/contents/Routine/Detail.js","screens/contents/Module/List.js","screens/contents/Module/Detail.js","screens/contents/Configuration/List.js","screens/contents/Market/List.js","screens/contents/Widget/List.js","screens/contents/Widget/New.js","screens/contents/Widget/Detail.js","screens/contents/User/List.js","screens/contents/User/New.js","screens/contents/User/NewPassword.js","components/Sidebar.js","screens/Main.js","screens/GetStarted.js","screens/Authentification.js","App.js","index.js"],"names":["Alert","props","Snackbar","open","autoHideDuration","onClose","severity","elevation","variant","Request","this","method","data","url","a","authorization","localStorage","getItem","server","fetch","headers","body","JSON","stringify","result","json","error","message","Smartobject","state","page","enabled","smartobjects","get","setState","package","loading","Paper","style","display","padding","alignContent","justifyContent","alignItems","alignSelf","Typography","fontSize","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","slice","map","smartobject","to","id","textDecoration","color","hover","cursor","reference","height","width","filter","src","process","status","icon","Moment","lastUse","format","name","flexDirection","marginTop","marginBottom","textAlign","IconButton","borderRadius","Add","TablePagination","count","length","rowsPerPage","rowsPerPageOptions","onChangePage","event","React","Component","Week","value","sunday","monday","tuesday","wednesday","friday","saturday","time","timeSplit","split","thursday","onChange","paddingTop","paddingBottom","paddingLeft","paddingRight","flex","noChangeMode","size","onClick","onChangeMode","Cached","marginRight","marginLeft","Button","fullWidth","calculate","TextField","defaultValue","currentTarget","placeholder","responsiveFontSizes","createMuiTheme","palette","type","primary","main","Colors","secondary","typography","fontFamily","shape","position","top","left","transform","backgroundColor","Theme","background","paper","Action","action","modal","default","tmp","minWidth","updateAction","Modal","Fade","in","WeekSchedul","FormControl","InputLabel","Select","target","label","values","MenuItem","styles","colors","triangle","onChangeComplete","hex","borderWidth","borderStyle","borderColor","Slider","valueLabelDisplay","orientation","min","max","step","Checkbox","defaultChecked","DetailSmartObject","match","params","profiles","referenceArguments","valueArguments","executeInformation","resultProfile","resultSmartobject","history","push","delete","settings","index","argument","undefined","post","componentDidMount","pArguments","profile","idProfile","module","Divider","arguments","pArgument","navigator","clipboard","writeText","margin","FileCopy","deleteSmartobjectArguments","Delete","nativeEvent","insertSmartobjectArguments","actions","maxWidth","disabled","executeAction","gridRowGap","gridTemplateColumns","setting","bind","Close","parse","forEach","pprofile","ListItem","FormControlLabel","control","Switch","checked","deleteProfile","insertProfile","NewSmartobject","types","resultType","pModule","key","setModule","updateSettings","add","Save","Process","processs","_process","description","espace","Source","query","resultModule","resultProcess","sources","includes","mode","inputs","input","name_enable","name_disable","IconList","icons","resultJSON","Grid","container","spacing","item","xs","search","onSelect","New","popup","espaces","inputReference","inputName","inputType","inputMode","isChecked","source","arrSources","getSource","resultSource","resultEspace","fSource","fAction","enable","nameEnable","nameDisable","modeArgument","pIndex","InputProps","endAdornment","InputAdornment","Popover","anchorOrigin","vertical","horizontal","transformOrigin","setInput","removeModeArgument","removeSource","setSource","setAction","confirmationModule","set","NewProcess","referenceInput","nameInput","typeInput","modeInput","idsource","referenceSettings","valueSettings","startIcon","Autorenew","deleteProcessInput","insertProcessInput","object","Check","deleteSource","addSource","Routine","routines","put","routine","updateStatus","success","PlayArrow","Pause","Edit","duplicate","NewRoutine","modalTrigger","modalEffect","watch","triggers","effects","statement","expected","trigger","effect","toString","updateName","updateIcon","updateWatch","Card","textTransform","removeTrigger","reset","removeEffect","save","addTrigger","addEffect","Module","modules","pmodule","md5","Detail","hashId","_module","Configuration","pageSmartobject","pageModule","Store","DevicesOther","Category","markets","pageMarket","pPackage","resultPing","resultMarket","market","currentVersion","version","uninstall","GetApp","install","disableElevation","Widget","widgets","widget","contents","sort","b","rank","content","_content","fontWeight","NewWidget","image","contentSources","widgetReference","resultConfiguration","find","contentSource","tmpsettings","pindex","multiline","deleteContent","insertSource","setType","insertContent","needSave","pContent","native","onBlur","update","setContent","users","user","login","updateProfile","Settings","password","confirmationPassword","NewPassword","changePassword","Sidebar","isMobile","Drawer","anchor","button","ListItemIcon","ListItemText","Extension","DeviceHub","AccountTree","Person","ShoppingCart","onDisconnect","ExitToApp","Main","mediaQueries","mediaMatch","window","matchMedia","matches","addListener","e","basename","exact","path","SmartObject","NewSmartObject","DetailModule","DetailRoutine","DetailWidget","ListProcess","DetailProcess","User","NewUser","Market","GetStarted","authentification","confirmePassword","onFinish","lineHeight","noValidate","autoComplete","inputProps","maxLength","register","Authentification","getStarted","customAddress","address","location","origin","service","replace","checkServer","setItem","token","removeItem","ok","protocol","onSubmit","preventDefault","autoFocus","on","disconnect","App","ThemeProvider","theme","CssBaseline","Box","userSelect","outline","WebkitTapHighlightColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ade7168.chunk.js","sourcesContent":["import MuiAlert from '@material-ui/lab/Alert'\nimport { Snackbar } from '@material-ui/core'\n\nfunction Alert(props) {\n    return (\n        <Snackbar open={props.open} autoHideDuration={6000} onClose={() => props.onClose()}>\n            <MuiAlert severity={props.severity} elevation={6} variant=\"filled\" {...props} />\n        </Snackbar>\n    )\n}\n\nexport default Alert","class Request {\n\n    constructor() {\n        this.method = 'GET'\n    }\n\n    post(data) {\n        this.method = 'POST'\n        this.data = data\n        return this\n    }\n\n    get() {\n        this.method = 'GET'\n        return this\n    }\n\n    delete() {\n        this.method = 'DELETE'\n        return this\n    }\n\n    put(data) {\n        this.method = 'PUT'\n        this.data = data\n        return this\n    }\n\n    async fetch(url) {\n        let authorization = localStorage.getItem(\"authorization\")\n        let server = localStorage.getItem(\"server\")\n        try {\n            let result = await fetch(server + url, {\n                method: this.method,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + authorization\n                },\n                body: this.method == 'POST' || this.method == 'PUT' ? JSON.stringify(this.data) : null\n            })\n            return await result.json()\n        } catch (error) {\n            return {\n                error: true,\n                message: \"An error has occurred\"\n            }\n        }\n    }\n\n}\n\nexport default Request","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport Moment from 'moment'\nimport { Add } from '@material-ui/icons'\nimport { Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton  } from '@material-ui/core'\nimport Icon from '../../../utils/Icon'\nimport Request from '../../../utils/Request'\nimport Alert from '../../../components/Alert'\n\nclass Smartobject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            smartobjects: []\n        }\n    }\n\n    async componentDidMount() {\n            let result = await new Request().get().fetch(\"/api/smartobjects\")\n            if (result.error) {\n                this.setState({\n                    enabled: true,\n                    message: result.package + \" : \" + result.message\n                })\n            } else {\n                this.setState({\n                    enabled: false,\n                    message: \"\",\n                    smartobjects: result.data\n                })\n            }\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    this.state.loading ?\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\n                                Chargement des smartobject\n                            </Typography>\n                        </Paper>\n                        :\n                        <div>\n                            <TableContainer component={Paper}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"left\">\n                                                <Typography variant='body1'>\n                                                    Reference\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography variant='body1'>\n                                                    Status\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography variant='body1'>\n                                                    Last use\n                                                </Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.smartobjects.slice(this.state.page * 10, (this.state.page + 1) * 10).map((smartobject) => (\n                                            <Link to={\"/smartobject/\" + smartobject.id} style={{ textDecoration: 'none', color: 'white', display:'contents' }}>\n                                                <TableRow hover key={smartobject.name} style={{ cursor: 'pointer' }}>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {smartobject.reference}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"center\">\n                                                        <Typography variant='body1'>\n                                                            <img style={{ height: 25, width: 25, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + smartobject.status.icon + \".svg\"} />\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"center\">\n                                                        <Typography variant='body1'>\n                                                            {Moment(smartobject.lastUse).format(\"hh:mm DD/MM\") }\n                                                        </Typography>\n                                                    </TableCell>\n                                                </TableRow>\n                                            </Link>\n\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                                    <Link to=\"/smartobject/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                                        <IconButton style={{ borderRadius: 0 }}>\n                                            <Add />\n                                        </IconButton>\n                                    </Link>\n                                </Paper>\n                                <TablePagination\n                                    component=\"div\"\n                                    count={this.state.smartobjects.length}\n                                    rowsPerPage={10}\n                                    page={this.state.page}\n                                    rowsPerPageOptions={[]}\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\n                                />\n                            </div>\n                        </div>\n                }\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    { this.state.message }\n                </Alert>\n            </>\n        )\n    }\n}\n\nexport default Smartobject","import React from 'react'\nimport { TextField, Button, IconButton } from '@material-ui/core'\nimport { Save, Cached } from '@material-ui/icons'\n\nclass Week extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: \"\",\n            sunday: false,\n            monday: false,\n            tuesday: false,\n            wednesday: false,\n            friday: false,\n            saturday: false,\n            time: \"00:00\"\n        }\n    }\n\n    calculate() {\n        let timeSplit = this.state.time.split(\":\")\n        if(timeSplit.length != 2) { return }\n        let value =  timeSplit[1] + ' ' +  timeSplit[0]  + ' * * ' +  \n            (this.state.sunday ? \"0,\" : \"\") +\n            (this.state.monday ? \"1,\" : \"\") +\n            (this.state.tuesday ? \"2,\" : \"\") +\n            (this.state.wednesday ? \"3,\" : \"\") +\n            (this.state.thursday ? \"4,\" : \"\") +\n            (this.state.friday ? \"5,\" : \"\") +\n            (this.state.saturday ? \"6,\" : \"\")\n\n        value = value.slice(0,value.length - 1 )\n        this.props.onChange(value)\n    }\n\n    render() {\n        return (<div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, paddingLeft: 5, paddingRight: 5, flexDirection: 'column' }}>\n            <div style={{ display: 'flex', flexDirection: 'row', alignContent: 'center', alignItems: 'center', flex: 1, justifyContent: 'space-between' }}>\n                {\n                    this.props.noChangeMode ? null : \n                    <div style={{ flex: 1 }}>\n                        <IconButton size='small' onClick={() => { this.props.onChangeMode() }} variant='outlined'>\n                            <Cached />\n                        </IconButton>\n                    </div>\n                }\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.sunday ? 'contained' : 'outlined'} onClick={() => {this.setState({sunday: !this.state.sunday},() => {this.calculate()})}}  >{\"Sunday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.monday ? 'contained' : 'outlined'} onClick={() => {this.setState({monday: !this.state.monday},() => {this.calculate()})}} >{\"Monday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.tuesday ? 'contained' : 'outlined'} onClick={() => {this.setState({tuesday: !this.state.tuesday},() => {this.calculate()})}} >{\"Tuesday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.wednesday ? 'contained' : 'outlined'} onClick={() => {this.setState({wednesday: !this.state.wednesday},() => {this.calculate()})}} >{\"Wednesday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.thursday ? 'contained' : 'outlined'} onClick={() => {this.setState({thursday: !this.state.thursday},() => {this.calculate()})}} >{\"Thursday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.friday ? 'contained' : 'outlined'} onClick={() => {this.setState({friday: !this.state.friday},() => {this.calculate()})}} >{\"Friday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.saturday ? 'contained' : 'outlined'} onClick={() => {this.setState({saturday: !this.state.saturday},() => {this.calculate()})}} >{\"Saturday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }} >\n                    <TextField  defaultValue='00:00'  size='small' value={this.state.time}  onChange={(event) => { this.setState({ time: event.currentTarget.value },() => {this.calculate()}) }}  placeholder='hh:mm' variant='outlined' />\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nexport default Week","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport * as Colors from '@material-ui/core/colors'\n\nexport default responsiveFontSizes(createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: Colors.pink[600],\n    },\n    secondary: {\n      main: Colors.lightBlue[500],\n    },\n  },\n  typography: {\n    fontFamily: \"'Poppins', sans-serif\",\n    \"fontWeightLight\": 400,\n    \"fontWeightRegular\": 500,\n    \"fontWeightMedium\": 600\n  },\n  shape: {\n    borderRadius: 4\n  }\n}))","import React from 'react'\nimport { TextField, Button, Checkbox, Fade, Paper, Typography,Modal, Slider, FormControl, Select, MenuItem, InputLabel } from '@material-ui/core'\nimport { TwitterPicker } from 'react-color'\nimport WeekSchedul from './WeekSchedul'\nimport Theme from '../Theme'\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: Theme.palette.background.paper,\n    padding: 10,\n    borderRadius: 5\n}\n\nclass Action extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            action: this.props.action,\n            setState: this.props.setState,\n            modal: false,\n            value: this.props.action.default\n        }\n    }\n\n    updateAction(action, value) {\n        let tmp = {}\n        tmp[\"argument-\" + action.id] = value\n        this.state.setState(tmp)\n        this.setState({\n            value: value\n        })\n    }\n\n    render() {\n        switch (this.state.action.type) {\n            case 'text':\n                return (\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\n                    </div>\n                )\n            case 'cron':\n                return (\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, width: '200px' }} >\n                        <Modal open={this.state.modal} onClose={() => { this.setState({ modal: false }) }} >\n                        <Fade in={this.state.modal} >\n                            <Paper style={style}>\n                            <WeekSchedul noChangeMode onChange={(value) => { this.updateAction(this.state.action, value); this.setState({value: value}) }} onChangeMode={() => { }} />\n                            </Paper>\n                        </Fade>\n                    </Modal>\n                        <Button variant='outlined' style={{flexDirection:'column', width: '200px'}} size='large' onClick={() => {this.setState({modal: true})}}>\n                            <Typography style={{fontSize: this.state.value.length > 0 ? 12 : 14, padding: 8, color: this.state.value.length > 0 ? 'white': 'rgba(255, 255, 255, 0.6)' }}>\n                                {this.state.value.length == 0 ? this.state.action.id : this.state.value}\n                            </Typography>\n                        </Button>\n                    </div>\n                )\n            case 'number':\n                return (\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\n                    </div>\n                )\n            case 'select':\n                return (\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10 }} >\n                        <FormControl variant=\"outlined\" style={{ width: '150px' }} >\n                            <InputLabel>{this.state.action.id}</InputLabel>\n                            <Select onChange={(event) => { this.updateAction(this.state.action, event.target.value) }} label={this.state.action.id} >\n                                {\n                                    this.state.action.values.map(value => {\n                                        return <MenuItem value={value} >{value}</MenuItem>\n                                    })\n                                }\n                            </Select>\n                        </FormControl>\n                    </div>\n                )\n            case 'colorpicker':\n                return (\n                    <div elevation={3} style={{ alignItems: 'flex-start', display: 'flex', padding: 10, marginRight: 5, flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row' }} >\n                        <TwitterPicker\n                            styles={{ padding: 0 }}\n                            colors={['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']}\n                            triangle='hide'\n                            color={this.state.value}\n                            onChangeComplete={(color) => { this.updateAction(this.state.action, color.hex) }}\n                        />\n                    </div>\n                )\n            case 'slider':\n                return (\n                    <div elevation={3} style={{minWidth: 100, height: \"fit-content\", alignSelf: 'flex-start', borderWidth: 1, borderStyle: 'solid', borderRadius: 5, borderColor: 'rgba(255, 255, 255, 0.23)', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15, marginRight: 10 }} >\n                        <Typography variant='body1' style={{ textAlign: 'center', color: 'rgba(255, 255, 255, 0.5)', padding: 0 }} >\n                            {this.state.action.id}\n                        </Typography>\n                        <div style={{ marginBottom: 2, marginTop: 2 }} />\n                        <Slider\n                            defaultValue={0}\n                            valueLabelDisplay=\"auto\"\n                            orientation={this.props.orientation ? this.props.orientation : 'horizontal'}\n                            min={this.state.action.min}\n                            max={this.state.action.max}\n                            step={this.state.action.step}\n                            onChange={(event, value) => { this.updateAction(this.state.action, value) }}\n                        />\n                    </div>\n                )\n            case 'checkbox':\n                return (\n                    <div elevation={3} style={{ height: \"fit-content\", alignSelf: 'center', borderWidth: 1, borderStyle: 'solid', borderRadius: 5, borderColor: 'rgba(255, 255, 255, 0.23)', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15, marginRight: 10 }} >\n                        <Typography variant='body1' style={{ textAlign: 'center', color: 'rgba(255, 255, 255, 0.5)', padding: 0 }}>\n                            {this.state.action.id}\n                        </Typography>\n                        <Checkbox defaultChecked={this.state.action.default} color='primary' onChange={(event, value) => { this.updateAction(this.state.action, value) }} />\n                    </div>\n                )\n            default:\n                return null\n        }\n    }\n\n}\n\nexport default Action","import React from 'react'\nimport JSONPretty from 'react-json-pretty'\nimport { Paper, Typography, TableContainer, TableBody, Divider, ListItem, TableCell, TableRow, Button, TextField, FormControlLabel, IconButton, Switch } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport { FileCopy, Delete, Close, Add } from '@material-ui/icons'\nimport AlertComponent from '../../../components/Alert'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\n\nclass DetailSmartObject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: props.match.params.id,\n            smartobject: null,\n            profiles: [],\n            enabled: false,\n            loading: null,\n            message: \"\",\n            referenceArguments: \"\",\n            valueArguments: \"\",\n            executeInformation: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects/\" + this.state.id)\n        if (resultProfile.error || resultSmartobject.error) {\n            this.props.history.push('/smartobject')\n        } else {\n            this.setState({ smartobject: resultSmartobject.data, profiles: resultProfile.data })\n        }\n        this.setState({ loading: null })\n    }\n\n    async delete(id) {\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.props.history.push('/smartobject')\n        }\n    }\n\n    async executeAction(action, settings) {\n        this.setState({loading: action})\n        let tmp = {}\n        for (let index = 0; index < settings.length; index++) {\n            let argument = settings[index];\n            let value = this.state[\"argument-\" + argument.id]\n            if (value == undefined) {\n                value = argument.default\n            }\n            tmp[argument.id] = value\n        }\n        let result = await new Request().post({ settings: tmp }).fetch(\"/api/smartobjects/\" + this.state.id + \"/actions/\" + action)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message, loading: null })\n        } else {\n            if (result.data) {\n                this.setState({ executeInformation: JSON.stringify(result.data) })\n            }\n            this.componentDidMount()\n        }\n    }\n\n    async deleteSmartobjectArguments(pArguments) {\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + pArguments.smartobject + \"/arguments/\" + pArguments.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async insertSmartobjectArguments(id, reference, value) {\n        let result = await new Request().post({ reference: reference, value: value }).fetch(\"/api/smartobjects/\" + id + \"/arguments\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ referenceArguments: \"\", valueArguments: \"\" })\n            this.componentDidMount()\n        }\n    }\n\n    async insertProfile(smartobject, profile) {\n        let result = await new Request().post({idProfile: profile.id, }).fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async deleteProfile(smartobject, profile) {\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles/\" + profile.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        if (this.state.smartobject) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\n                        <div style={{ padding: 10 }}>\n                            <Typography variant='h4' >\n                                {this.state.smartobject.reference}\n                            </Typography>\n                            <Typography variant='subtitle1' >\n                                {this.state.smartobject.module}\n                            </Typography>\n                        </div>\n                        <Divider />\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Configuration\n                            </Typography>\n                            <div style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'row' }}>\n                                <TableContainer component={Paper} >\n                                    <TableBody>\n                                        {this.state.smartobject.arguments.map((pArgument) => (\n                                            <TableRow key={pArgument.id} >\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='subtitle1'>\n                                                        {pArgument.reference}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\" style={{ width: '70%' }}>\n                                                    <Typography variant='subtitle1'>\n                                                        {pArgument.value.slice(0, 50) + (pArgument.value.length > 50 ? \" (...)\" : \"\")}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\n                                                    <IconButton onClick={() => { navigator.clipboard.writeText(pArgument.value) }} style={{ borderRadius: 5, margin: 0 }}>\n                                                        <FileCopy />\n                                                    </IconButton>\n                                                </TableCell>\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\n                                                    <IconButton onClick={() => { this.deleteSmartobjectArguments(pArgument) }} style={{ borderRadius: 5, margin: 0 }}>\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                        <TableRow key={\"-1\"} >\n                                            <TableCell align=\"left\">\n                                                <TextField value={this.state.referenceArguments} onChange={(event) => { this.setState({ referenceArguments: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\n                                                </TextField>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                <TextField value={this.state.valueArguments} onChange={(event) => { this.setState({ valueArguments: event.nativeEvent.target.value }) }} placeholder='Value' style={{ width: '100%' }}>\n                                                </TextField>\n                                            </TableCell>\n                                            <TableCell align=\"right\" style={{ padding: 4 }}>\n                                                <IconButton onClick={() => { this.insertSmartobjectArguments(this.state.smartobject.id, this.state.referenceArguments, this.state.valueArguments) }} style={{ borderRadius: 5, margin: 0 }}>\n                                                    <Add />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                {\"Action\"}\n                            </Typography>\n                            {\n                                this.state.smartobject.actions.map(action => {\n                                    return (\n                                        <Paper style={{ padding: 10, marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', width: '100%', maxWidth: '100%' }}>\n                                            <Button disabled={this.state.loading == action.id} onClick={() => { this.executeAction(action.id, action.settings) }} variant={this.state.loading == action.id ? 'contained' : 'outlined'} style={{ width: '250px', height: '100%' }} >\n                                                {action.name}\n                                            </Button>\n                                            \n                                            {\n                                                action.settings.length > 0 ?\n                                                    <div style={{ display: 'grid', gridRowGap:'10px', gridTemplateColumns: 'repeat(5,min-content)' , marginTop: 10, marginBottom: 10 }}>\n                                                        {\n                                                            action.settings.map(setting => {\n                                                                return <Action flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\n                                                            })\n                                                        }\n                                                    </div> : null\n                                            }\n                                        </Paper>\n                                    )\n                                })\n                            }\n                        </div>\n                        {\n                            this.state.executeInformation.length > 0 ?\n                                <div style={{ padding: 10 }}>\n                                    <Alert severity=\"success\" action={\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\n                                            <Close />\n                                        </IconButton>\n                                    }>\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\n                                    </Alert>\n                                </div>\n                                :\n                                null\n                        }\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Authorization\n                            </Typography>\n                            {\n                                this.state.profiles.map(profile => {\n                                    let state = false\n                                    this.state.smartobject.profiles.forEach(pprofile => {\n                                        if (pprofile.profile == profile.id) {\n                                            state = true\n                                        }\n                                    })\n                                    return (\n                                        <ListItem style={{ padding: 1 }}  >\n                                            <FormControlLabel control={\n                                                <Switch\n                                                    checked={state}\n                                                    onChange={() => { \n                                                        state ? this.deleteProfile(this.state.smartobject,profile) : this.insertProfile(this.state.smartobject,profile)\n                                                    }}\n                                                    color=\"primary\"\n                                                />\n                                            } label={profile.name} />\n                                        </ListItem>\n                                    )\n                                })\n                            }\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\n                        <IconButton onClick={() => { this.delete(this.state.id) }} style={{ borderRadius: 5 }}>\n                            <Delete />\n                        </IconButton>\n                    </Paper>\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        { this.state.message }\n                    </AlertComponent>\n                </div>\n            )\n        } else {\n            return (\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </AlertComponent>\n            )\n        }\n    }\n}\n\nexport default DetailSmartObject","import React from 'react'\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\nimport { Save } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass NewSmartobject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            module: false,\n            reference: \"\",\n            enabled: false,\n            message: \"\",\n            types: [],\n            smartobjects: []\n        }\n    }\n\n    async componentDidMount() {\n        let resultType = await new Request().get().fetch(\"/api/configurations/smartobject\")\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects\")\n        if (resultType.error || resultSmartobject.error) {\n            this.setState({ enabled: true, message: resultType.package + \" : \" + resultType.message })\n        } else {\n            this.setState({\n                enabled: false,\n                message: \"\",\n                types: resultType.data,\n                smartobjects: resultSmartobject.data\n            })\n        }\n    }\n\n    setModule(name) {\n        this.state.types.forEach(pModule => {\n            if (pModule.name === name) {\n                this.setState({\n                    module: pModule\n                })\n            }\n        })\n    }\n\n    updateSettings(key, value) {\n        let tmp = {}\n        tmp[\"settings-\" + key] = value\n        this.setState(tmp)\n    }\n\n    async add() {\n        if (this.state.reference === \"\") {\n            this.setState({ enabled: true, message: \"Missing-parameter : reference is empty\" })\n        } else if (this.state.module.name === \"\") {\n            this.setState({ enabled: true, message: \"Missing-parameter : type not selected\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.module.settings.length; index++) {\n                let setting = this.state.module.settings[index];\n                settings.push({\n                    reference: setting.id,\n                    value: this.state[\"settings-\" + setting.name] ? this.state[\"settings-\" + setting.name] : \"\"\n                })\n            }\n            let result = await new Request().post({ module: this.state.module.name, reference: this.state.reference, settings: settings }).fetch(\"/api/smartobjects\")\n            if (result.error) {\n                this.setState({\n                    enabled: true,\n                    message: result.package + \" : \" + result.message\n                })\n            } else {\n                this.props.history.push('/smartobject')\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'row', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\n                            <TextField onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }} style={{ width: '150px', marginRight: 10 }} label=\"Reference\" variant=\"outlined\" />\n                            <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px' }} >\n                                <InputLabel>Module</InputLabel>\n                                <Select value={this.state.module.name} onChange={(event) => { this.setModule(event.target.value) }} label=\"Connexion\" >\n                                    {\n                                        this.state.types.map(pModule => {\n                                            return <MenuItem value={pModule.name} >{pModule.name}</MenuItem>\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                    {\n                        this.state.module ?\n                            this.state.module.settings.length === 0 ?\n                                null\n                                :\n                                <div style={{ display: 'flex', flexDirection: 'column', padding: 10 }}>\n                                    <Typography variant='body1' style={{ fontSize: 20 }}>Configuration</Typography>\n                                    {\n                                        this.state.module.settings.map(settings => {\n                                            if (settings.type == \"smartobject\") {\n                                                return (\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 10, width: '300px' }} >\n                                                    <InputLabel>{settings.name}</InputLabel>\n                                                        <Select onChange={(event) => { this.updateSettings(settings.name, event.target.value) }}  >\n                                                            {\n                                                                this.state.smartobjects.filter(smartobject => {\n                                                                    return smartobject.module == settings.reference\n                                                                }).map(pModule => {\n                                                                    return <MenuItem value={pModule.id} >{pModule.reference}</MenuItem>\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                )\n                                            } else if(settings.type == \"select\") {\n                                                return (\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 10, width: '300px' }} >\n                                                    <InputLabel>{settings.name}</InputLabel>\n                                                        <Select onChange={(event) => { this.updateSettings(settings.name, event.target.value) }}  >\n                                                            {\n                                                                settings.values.map(pModule => {\n                                                                    return <MenuItem value={pModule} >{pModule}</MenuItem>\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                )\n                                            } else {\n                                                return (\n                                                    <TextField\n                                                        onChange={(event) => { this.updateSettings(settings.name, event.nativeEvent.target.value) }}\n                                                        style={{ width: '300px', marginTop: 10 }}\n                                                        label={settings.name}\n                                                        variant=\"outlined\"\n                                                    />\n                                                )\n                                            }\n                                        })\n                                    }\n                                </div>\n                            : null\n                    }\n                </Paper>\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\n                        <Save />\n                    </IconButton>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default NewSmartobject","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Add } from '@material-ui/icons'\nimport { Typography, TablePagination, TableRow, Table, TableCell, TableHead, TableContainer, TableBody, Paper, IconButton } from '@material-ui/core'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass Process extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            processs: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/process\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ processs: result.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {this.state.processs.slice(this.state.page * 10, (this.state.page + 1) * 10).map((_process) => (\n                                <Link to={\"/process/\" + _process.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\n                                    <TableRow hover key={_process.name} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + _process.icon + \".svg\"} />\n                                    </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {_process.reference}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {_process.description}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {_process.espace.reference}\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </Link>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                            <Link to=\"/process/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                                <IconButton style={{ borderRadius: 0 }}>\n                                    <Add />\n                                </IconButton>\n                            </Link>\n                        </Paper>\n                    </div>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.processs.length}\n                        rowsPerPage={10}\n                        page={this.state.page}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    { this.state.message }\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Process","import Request from './Request'\n\nclass Source {\n\n    static async getSource(query = []) {\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects\")\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\n        let resultProcess = await new Request().get().fetch(\"/api/process\")\n        if (resultProcess.error) {\n            return resultProcess\n        } else if (resultModule.error) {\n            return resultModule\n        } else if (resultSmartobject.error) {\n            return resultSmartobject\n        } else {\n            let sources = []\n            if (query.includes(\"smartobject\")) {\n                resultSmartobject.data.forEach(smartobject => {\n                    let actions = []\n                    smartobject.actions.forEach(action => {\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\n                    })\n                    sources.push({ id: smartobject.id, name: \"Smartobject \" + smartobject.reference, actions: actions, type: 'smartobject' })\n                })\n            }\n            if (query.includes(\"module\")) {\n                resultModule.data.forEach(pModule => {\n                    let actions = []\n                    pModule.actions.forEach(action => {\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\n                    })\n                    sources.push({ id: pModule.name, name: \"Module \" + pModule.name, actions: actions, type: 'module' })\n                })\n            }\n            if (query.includes(\"process\")) {\n                resultProcess.data.forEach(process => {\n                    let actions = []\n                    if (process.mode == \"simple\") {\n                        actions.push({\n                            id: \"auto\",\n                            name: process.name,\n                            settings: process.inputs.map(input => {\n                                return { id: input.reference, name: input.name, type: input.type }\n                            })\n                        })\n                    } else {\n                        actions.push({\n                            id: \"enable\",\n                            name: process.name_enable,\n                            settings: process.inputs.map(input => {\n                                return { id: input.reference, name: input.name, type: input.type }\n                            })\n                        })\n                        actions.push({\n                            id: \"disable\",\n                            name: process.name_disable,\n                            settings: process.inputs.map(input => {\n                                return { id: input.reference, name: input.name, type: input.type }\n                            })\n                        })\n                    }\n                    sources.push({ id: process.id, name: \"Processus \" + process.reference, actions: actions, type: 'process' })\n                })\n            }\n            return { data: sources, error: false, package: '', message: '' }\n        }\n    }\n\n}\n\nexport default Source","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\nclass IconList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            icons: [],\n            mode: 'normal'\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            let result = await fetch(process.env.PUBLIC_URL + '/ressource/icon.json')\n            let resultJSON = await result.json()\n            this.setState({ icons: resultJSON })\n        } catch (error) {\n            this.setState({ icons: [] })\n        }\n    }\n\n    render() {\n        return (\n            <Grid container spacing={1} style={{ width: '32vw', height: '32vw',  padding: 10, marginRight: 10 }}>\n                <Grid item xs={6} >\n                    <Paper onClick={() => { this.setState({ mode: 'normal' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star.svg\"} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={6} >\n                    <Paper onClick={() => { this.setState({ mode: 'outline' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star-outline.svg\"} />\n                    </Paper>\n                </Grid>\n                {\n\n                    this.state.icons.filter(icon => {\n                        if (icon.search(\"outline\") != -1 && this.state.mode == \"outline\") {\n                            return true\n                        } else if (icon.search(\"outline\") == -1 && this.state.mode == \"normal\") {\n                            return true\n                        } else {\n                            return false\n                        }\n                    }).map(icon => {\n                        return (\n                            <Grid item xs >\n                                <Paper onClick={() => {this.props.onSelect && this.props.onSelect(icon)}} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\n                                    <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + icon + \".svg\"} />\n                                </Paper>\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        )\n    }\n\n}\n\nexport default IconList","import React from 'react'\n\nimport { Popover, InputAdornment, Checkbox, Typography, Paper, Grid, InputLabel, MenuItem, FormControl, Select, TableBody, TableContainer, TextField, TableCell, Table, TableRow, Switch, Button, IconButton } from '@material-ui/core'\n\nimport { Delete, List } from '@material-ui/icons'\n\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\nimport IconList from '../../../components/IconList'\n\nclass New extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            popup: false,\n            message: \"\",\n            espaces: [],\n            reference: '',\n            icon: '',\n            description: '',\n            name: '',\n            name_disable: '',\n            name_enable: '',\n            mode: 'simple',\n            module: null,\n            espace: false,\n            inputReference: \"\",\n            inputName: \"\",\n            inputType: null,\n            inputMode: false,\n            inputs: [],\n            sources: [],\n            isChecked: false,\n            action: null,\n            source: null,\n            arrSources: []\n        }\n    }\n\n    async componentDidMount() {\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\n        if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else if (resultEspace.error) {\n            this.setState({ enabled: true, message: resultEspace.package + \" : \" + resultEspace.message })\n        } else {\n            this.setState({\n                enabled: false,\n                message: \"\",\n                espaces: resultEspace.data,\n                sources: resultSource.data\n            })\n        }\n    }\n\n    setSource(id) {\n        let fSource = false\n        this.state.sources.forEach(source => {\n            if (source.id === id) { fSource = source }\n        })\n        this.setState({ source: fSource })\n    }\n\n    setAction(id) {\n        let fAction = false\n        this.state.source.actions.forEach(action => {\n            if (action.id === id) { fAction = action }\n        })\n        this.setState({ action: fAction })\n    }\n\n    setInput() {\n        if (this.state.inputReference === \"\") {\n            this.setState({ enabled: true, message: \"Reference is missing\" })\n            return\n        }\n        if (this.state.inputType === \"\") {\n            this.setState({ enabled: true, message: \"Type is missing\" })\n            return\n        }\n        if (this.state.inputName === \"\") {\n            this.setState({ enabled: true, message: \"Name is missing\" })\n            return\n        }\n        let inputs = this.state.inputs\n        inputs.push({\n            name: this.state.inputName,\n            type: this.state.inputType,\n            reference: this.state.inputReference,\n            enable: this.state.inputMode ? 1 : 0\n        })\n        this.setState({ inputs: inputs, inputName: \"\", inputType: null, inputReference: \"\", inputMode: false })\n    }\n\n    async set() {\n        if (this.state.reference === \"\") {\n            this.setState({ enabled: true, message: \"Reference is missing\" })\n            return\n        }\n        if (this.state.icon === \"\") {\n            this.setState({ enabled: true, message: \"Icon is missing\" })\n            return\n        }\n        if (this.state.description === \"\") {\n            this.setState({ enabled: true, message: \"Description is missing\" })\n            return\n        }\n        if (this.state.espace === false) {\n            this.setState({ enabled: true, message: \"Espace is missing\" })\n            return\n        }\n        let body = {\n            description: this.state.description,\n            nameEnable: this.state.name_enable,\n            nameDisable: this.state.name_disable,\n            name: this.state.name,\n            espace: this.state.espace,\n            sources: this.state.arrSources,\n            reference: this.state.reference,\n            icon: this.state.icon,\n            mode: this.state.mode,\n            inputs: this.state.inputs\n        }\n        let result = await new Request().post(body).fetch(\"/api/process\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.props.history.push('/process')\n        }\n    }\n\n    updateAction(action, value) {\n        let tmp = {}\n        tmp[\"argument-\" + action.id] = value\n        this.setState(tmp)\n    }\n\n    removeModeArgument(index) {\n        let tmp = []\n        this.state.inputs.forEach((modeArgument, pIndex) => {\n            if (index !== pIndex) { tmp.push(modeArgument) }\n        })\n        this.setState({ inputs: tmp })\n    }\n\n    confirmationModule() {\n        if (this.state.action === false) {\n            this.setState({ enabled: true, message: \"Action missing\" })\n            return\n        }\n        if (this.state.source.actions.length === 0) {\n            this.setState({ enabled: true, message: \"Module missing\" })\n            return\n        }\n        let settings = []\n        for (let index = 0; index < this.state.action.settings.length; index++) {\n            let setting = this.state.action.settings[index]\n            let value = this.state[\"argument-\" + setting.id]\n            if (value == undefined) {\n                value = setting.default\n            }\n            settings.push({ reference: setting.id, value: value })\n        }\n        let action = {\n            source: this.state.source,\n            action: this.state.action,\n            arguments: settings,\n            enable: this.state.isChecked\n        }\n        let tmp = this.state.arrSources\n        tmp.push(action)\n        this.setState({ arrSources: tmp, action: null, source: null, isChecked: false })\n    }\n\n    removeSource(index) {\n        let tmp = []\n        this.state.arrSources.forEach((action, pIndex) => {\n            if (index !== pIndex) { tmp.push(action) }\n        })\n        this.setState({ arrSources: [] }, () => {\n            this.setState({ arrSources: tmp })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                    <div style={{ justifyContent: 'start', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\n                        <TextField\n                            onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }}\n                            style={{ width: '20%', margin: 10 }}\n                            label=\"Réference\"\n                            value={this.state.reference}\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            onChange={(event) => { this.setState({ icon: event.nativeEvent.target.value }) }}\n                            style={{ width: '20%', margin: 10 }}\n                            label=\"Icon\"\n                            variant=\"outlined\"\n                            value={this.state.icon}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\n                                            <List />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <Popover\n                            open={this.state.popup}\n                            onClose={() => { this.setState({ popup: false }) }}\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\n                        >\n                            <IconList onSelect={(icon) => { this.setState({ icon: icon, popup: false }) }} />\n                        </Popover>\n                        <TextField\n                            onChange={(event) => { this.setState({ description: event.nativeEvent.target.value }) }}\n                            style={{ width: '50%', margin: 10 }}\n                            label=\"Description\"\n                            variant=\"outlined\"\n                        />\n                        <FormControl variant=\"outlined\" style={{ margin: 10, width: '150px' }} >\n                            <InputLabel>Espace</InputLabel>\n                            <Select onChange={(event) => { this.setState({ espace: event.target.value }) }} label=\"Espace\" >\n                                {\n                                    this.state.espaces.map(espace => {\n                                        return <MenuItem value={espace.id} >{espace.name}</MenuItem>\n                                    })\n                                }\n                            </Select>\n                        </FormControl>\n                        <Typography variant='h5' style={{ margin: 10 }}>\n                            Mode\n                        </Typography>\n                        <Grid style={{ margin: 10 }} container alignItems=\"center\" >\n                            <Grid item>\n                                <Typography variant='subtitle1'>Simple</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Switch checked={this.state.mode === 'switch'} onChange={(event, checked) => { this.setState({ mode: checked ? 'switch' : 'simple' }) }} name=\"checkedC\" />\n                            </Grid>\n                            <Grid item>\n                                <Typography variant='subtitle1'>Switch</Typography>\n                            </Grid>\n                        </Grid>\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\n                            {\n                                this.state.mode === 'switch' ?\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <TextField\n                                            onChange={(event) => { this.setState({ name_enable: event.nativeEvent.target.value }) }}\n                                            style={{ width: '45%', margin: 10 }}\n                                            label=\"Texte actif\"\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            onChange={(event) => { this.setState({ name_disable: event.nativeEvent.target.value }) }}\n                                            style={{ width: '45%', margin: 10 }}\n                                            label=\"Texte passif\"\n                                            variant=\"outlined\"\n                                        />\n                                    </div> :\n                                    <div >\n                                        <TextField\n                                            onChange={(event) => { this.setState({ name: event.nativeEvent.target.value }) }}\n                                            style={{ margin: 10, width: '45%' }}\n                                            label=\"Texte\"\n                                            variant=\"outlined\"\n                                        />\n                                    </div>\n                            }\n                        </TableContainer>\n                        <Typography variant='h5' style={{ margin: 10 }}>\n                            Argument\n                        </Typography>\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\n                            <TextField\n                                value={this.state.inputReference}\n                                onChange={(event) => { this.setState({ inputReference: event.nativeEvent.target.value }) }}\n                                style={{ width: '30%', margin: 10 }}\n                                label=\"Reference\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                value={this.state.inputName}\n                                onChange={(event) => { this.setState({ inputName: event.nativeEvent.target.value }) }}\n                                style={{ width: '30%', margin: 10 }}\n                                label=\"Name\"\n                                variant=\"outlined\"\n                            />\n                            <FormControl variant=\"outlined\" style={{ margin: 10, width: '25%' }} >\n                                <InputLabel>Type</InputLabel>\n                                <Select value={this.state.inputType} onChange={(event) => { this.setState({ inputType: event.target.value }) }} label=\"Type\" >\n                                    <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\n                                    <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\n                                    <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\n                                    <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\n                                </Select>\n                            </FormControl>\n                            {\n                                this.state.mode === 'switch' ?\n                                    <Checkbox onChange={(event, checked) => { this.setState({ inputMode: checked }) }} /> : null\n                            }\n                            <Button style={{ margin: 10 }} onClick={() => { this.setInput() }} variant='outlined'>\n                                Ajouter\n                            </Button>\n                            <Table>\n                                <TableBody>\n                                    {\n                                        this.state.inputs.map((modeArgument, index) => {\n                                            return (\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {modeArgument.reference}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {modeArgument.name}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {modeArgument.type}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    {\n                                                        this.state.mode === 'switch' ?\n                                                            <TableCell align=\"center\">\n                                                                <Checkbox disabled defaultChecked={modeArgument.mode} />\n                                                            </TableCell> : null\n                                                    }\n                                                    <TableCell align=\"right\">\n                                                        <IconButton onClick={() => { this.removeModeArgument(index) }}>\n                                                            <Delete />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                    }\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <Typography variant='h5' style={{ margin: 10 }}>Action </Typography>\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\n                            <Table>\n                                <TableBody>\n                                    {\n                                        this.state.arrSources.map((action, index) => {\n                                            return (\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {action.source.name}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {action.action.name}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {\n                                                                action.arguments.map(argument => {\n                                                                    return (\n                                                                        <Typography variant='body1'>\n                                                                            {argument.reference + \" : \" + argument.value}\n                                                                        </Typography>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Typography>\n                                                    </TableCell>\n                                                    {this.state.mode === 'simple' ? null : <TableCell align=\"center\">\n                                                        <Checkbox disabled defaultChecked={action.enable} />\n                                                    </TableCell>}\n                                                    <TableCell align=\"center\">\n                                                        <IconButton onClick={() => { this.removeSource(index) }}>\n                                                            <Delete />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                    }\n                                    <TableRow >\n                                        <TableCell align=\"left\" style={{ minWidth: '30%' }}>\n                                            <FormControl fullWidth>\n                                                <InputLabel>Source</InputLabel>\n                                                <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\n                                                    {\n                                                        this.state.sources.map(source => {\n                                                            return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                        </TableCell>\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\n                                            {\n                                                this.state.source ?\n                                                    <FormControl fullWidth >\n                                                        <InputLabel>Action</InputLabel>\n                                                        <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\n                                                            {\n                                                                this.state.source.actions.map(action => {\n                                                                    return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                    : null\n                                            }\n                                        </TableCell>\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\n                                            <div>\n                                            </div>\n                                            {\n                                                this.state.action ?\n                                                    this.state.action.settings.map(argument => {\n                                                        return (\n                                                            <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\n                                                                <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\n                                                            </div>\n                                                        )\n                                                    }) : null\n                                            }\n                                        </TableCell>\n                                        {this.state.mode === 'simple' ? null :\n                                            <TableCell align=\"center\">\n                                                <Checkbox onChange={(event, checked) => { this.setState({ isChecked: checked }) }} />\n                                            </TableCell>\n                                        }\n                                    </TableRow>\n                                    <Button style={{ margin: 10 }} onClick={() => { this.confirmationModule() }} variant='outlined'>\n                                        Ajouter\n                                    </Button>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                    <Button style={{ margin: 10 }} onClick={() => { this.set() }} variant='outlined'>Save</Button>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}> {this.state.message} </Alert>\n            </div>\n        )\n    }\n}\n\nexport default New","import React from 'react'\nimport JSONPretty from 'react-json-pretty'\n\nimport { MenuItem, Switch, ListItem, FormControlLabel, Checkbox, InputLabel, IconButton, TableHead, TextField, Typography, Paper, Divider, TableBody, TableContainer, TableCell, Table, TableRow, FormControl, Select, Button } from '@material-ui/core'\n\nimport { Check, Close, Delete, Autorenew, Add } from '@material-ui/icons'\n\nimport Alert from '../../../components/Alert'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\n\nclass NewProcess extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: props.match.params.id,\n            enabled: false,\n            message: \"\",\n            process: null,\n            profiles: [],\n            executeInformation: \"\",\n            referenceInput: \"\",\n            nameInput: \"\",\n            typeInput: null,\n            modeInput: 0,\n            action: null,\n            source: null,\n            loading: false,\n            isChecked: false,\n            sources: []\n        }\n    }\n\n\n    async componentDidMount() {\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\n        let result = await new Request().get().fetch(\"/api/process/\" + this.state.id)\n        if (resultEspace.error) {\n            this.setState({\n                enabled: true,\n                message: resultEspace.package + \" : \" + resultEspace.message\n            })\n        } else if (result.error) {\n            this.setState({\n                enabled: true,\n                message: result.package + \" : \" + result.message\n            })\n        } else {\n            this.setState({\n                process: result.data,\n                profiles: resultProfile.data,\n                espaces: resultEspace.data,\n                sources: resultSource.data\n            })\n        }\n        this.setState({ loading: null })\n    }\n\n    setSource(id) {\n        let fSource = false\n        this.state.sources.forEach(source => {\n            if (source.id === id) { fSource = source }\n        })\n        this.setState({ source: fSource })\n    }\n\n    setAction(id) {\n        let fAction = false\n        this.state.source.actions.forEach(action => {\n            if (action.id === id) { fAction = action }\n        })\n        this.setState({ action: fAction })\n    }\n\n    async addSource() {\n        if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Action missing\" })\n            return\n        }\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Source missing\" })\n            return\n        }\n        let settings = []\n        for (let index = 0; index < this.state.action.settings.length; index++) {\n            let setting = this.state.action.settings[index]\n            let value = this.state[\"argument-\" + setting.id]\n            if (value == undefined) {\n                value = setting.default\n            }\n            settings.push({ reference: setting.id, value: value })\n        }\n        let action = {\n            source: this.state.source,\n            action: this.state.action,\n            arguments: settings,\n            enable: this.state.isChecked\n        }\n        let result = await new Request().post(action).fetch(\"/api/process/\" + this.state.id + \"/actions\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async deleteSource(idsource) {\n        let result = await new Request().delete().fetch(\"/api/process/\" + this.state.id + \"/actions/\" + idsource)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async delete(id) {\n        let result = await new Request().delete().fetch(\"/api/process/\" + id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.props.history.push('/process')\n        }\n    }\n\n    async executeAction() {\n        this.setState({ loading: true })\n        let tmp = {}\n        for (let index = 0; index < this.state.process.inputs.length; index++) {\n            let input = this.state.process.inputs[index];\n            let value = this.state[\"argument-\" + input.id]\n            if (value == undefined) {\n                value = input.default\n            }\n            tmp[input.reference] = value\n        }\n        let result = await new Request().post({ inputs: tmp }).fetch(\"/api/process/\" + this.state.process.id + \"/execute\")\n        if (result.error) {\n            this.setState({ loading: null, enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            if (result.data) {\n                this.setState({ executeInformation: JSON.stringify(result.data) })\n            }\n            this.componentDidMount()\n        }\n    }\n\n    async insertProfile(process, profile) {\n        let result = await new Request().post({ idProfile: profile.id, }).fetch(\"/api/process/\" + process.id + \"/profiles\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async deleteProfile(process, profile) {\n        let result = await new Request().delete().fetch(\"/api/process/\" + process.id + \"/profiles/\" + profile.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async deleteProcessInput(input) {\n        let result = await new Request().delete({}).fetch(\"/api/process/\" + this.state.process.id + \"/inputs/\" + input.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async insertProcessInput() {\n        if (this.state.typeInput == null) {\n            this.setState({ enabled: true, message: \"Missing-parameter : type is empty\" })\n            return\n        }\n        let result = await new Request().post({\n            reference: this.state.referenceInput,\n            name: this.state.nameInput,\n            type: this.state.typeInput,\n            enable: this.state.modeInput\n        }).fetch(\"/api/process/\" + this.state.process.id + \"/inputs\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({\n                referenceSettings: \"\",\n                valueSettings: \"\",\n                referenceInput: \"\",\n                nameInput: \"\",\n                modeInput: 0\n            })\n            this.componentDidMount()\n        }\n    }\n\n    updateAction(action, value) {\n        let tmp = {}\n        tmp[\"argument-\" + action.id] = value\n        this.setState(tmp)\n    }\n\n    render() {\n        if (this.state.process) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 25 }}>\n                        <Typography variant='h4'>\n                            {this.state.process.reference}\n                        </Typography>\n                        <Typography variant='subtitle1'>\n                            {this.state.process.espace.name}\n                        </Typography>\n                        <Typography variant='subtitle1'>\n                            {this.state.process.description}\n                        </Typography>\n                        <Divider style={{ marginTop: 10, marginBottom: 10 }} />\n                        <div  >\n                            <Typography variant='h5' style={{ marginBottom: 5 }}>Action</Typography>\n                            {\n                                this.state.process.mode == \"simple\" ?\n                                    this.state.process.mode === \"simple\" ?\n                                        <Button disabled={this.state.loading} style={{ alignSelf: 'center', marginTop: 10 }} variant={this.state.process.enable === 2 ? \"contained\" : \"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" startIcon={<Autorenew />}>\n                                            {this.state.process.name}\n                                        </Button> : null\n                                    :\n                                    <div style={{ flexDirection: 'column', display: 'flex', width: '20%' }}>\n                                        {\n                                            this.state.process.enable == 1 ?\n                                                <Button disabled={this.state.loading} style={{ marginTop: 10 }} variant={\"contained\"} onClick={() => { this.executeAction() }} color=\"default\" >\n                                                    {this.state.process.name_enable}\n                                                </Button> :\n                                                <Button disabled={this.state.loading} style={{ marginTop: 10 }} variant={\"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" >\n                                                    {this.state.process.name_disable}\n                                                </Button>\n                                        }\n                                    </div>\n                            }\n                        </div>\n                        <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\n                            {\n                                this.state.process.inputs.filter(input => {\n                                    return input.enable == this.state.process.enable\n                                }).map(input => {\n                                    return <Action setState={this.setState.bind(this)} action={input} flexDirection='column' orientation='horizontal' />\n                                })\n                            }\n                        </div>\n                        <div style={{ marginTop: 15 }} >\n                            <Typography variant='h5'>\n                                Input\n                            </Typography>\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableBody>\n                                            {\n                                                this.state.process.inputs.map(input =>\n                                                    <TableRow key={input.id}>\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.reference}</Typography></TableCell>\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.name}</Typography> </TableCell>\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.type}</Typography></TableCell>\n                                                        <TableCell align=\"center\"><Typography variant='body1'>{input.enable}</Typography></TableCell>\n                                                        <TableCell align=\"left\">\n                                                            <IconButton onClick={() => { this.deleteProcessInput(input) }} style={{ borderRadius: 5, margin: 0 }}>\n                                                                <Delete />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            }\n                                            <TableRow key={-1}>\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\n                                                    <TextField value={this.state.referenceInput} onChange={(event) => { this.setState({ referenceInput: event.nativeEvent.target.value }) }} placeholder='Reference' style={{ width: '100%' }}>\n                                                    </TextField>\n                                                </TableCell>\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\n                                                    <TextField value={this.state.nameInput} onChange={(event) => { this.setState({ nameInput: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\n                                                    </TextField>\n                                                </TableCell>\n                                                <TableCell align=\"left\" style={{ width: '20%' }}>\n                                                    <FormControl variant=\"outlined\" style={{ width: '100%' }} >\n                                                        <InputLabel>Type</InputLabel>\n                                                        <Select value={this.state.typeInput} onChange={(event) => { this.setState({ typeInput: event.target.value }) }} label=\"Type\" >\n                                                            <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\n                                                            <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\n                                                            <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\n                                                            <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n                                                </TableCell>\n                                                <TableCell align=\"center\" style={{ width: '10%' }}>\n                                                    {\n                                                        this.state.process.mode === 'switch' ?\n                                                            <Checkbox value={this.state.modeInput == 0} onChange={(event, checked) => { this.setState({ modeInput: checked ? 1 : 0 }) }} /> : null\n                                                    }\n                                                </TableCell>\n                                                <TableCell align=\"left\" >\n                                                    <IconButton onClick={() => { this.insertProcessInput() }} style={{ borderRadius: 5, margin: 0 }}>\n                                                        <Add />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        <div style={{ marginTop: 15 }} >\n                            <Typography variant='h5'>\n                                Module\n                            </Typography>\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell align=\"left\"><Typography variant='body1'>Module</Typography></TableCell>\n                                                <TableCell align=\"left\"><Typography variant='body1'>Type</Typography></TableCell>\n                                                <TableCell align=\"left\"><Typography variant='body1'>Action</Typography></TableCell>\n                                                <TableCell align=\"left\"><Typography variant='body1'>Arguments</Typography></TableCell>\n                                                <TableCell align=\"center\"><Typography variant='body1'>Mode</Typography></TableCell>\n                                                <TableCell align=\"left\"></TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {\n                                                this.state.process.actions.map(action =>\n                                                    <TableRow key={action.id}>\n                                                        <TableCell align=\"left\" style={{ width: '15%' }}><Typography variant='body1'>{action.object}</Typography></TableCell>\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.type}</Typography> </TableCell>\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.action}</Typography></TableCell>\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}>{action.arguments.map(argument => {\n                                                            return <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\n                                                        })}</TableCell>\n                                                        <TableCell align=\"center\" style={{ width: '15%' }}>{action.enable === 0 ? <Close /> : action.enable === 1 ? <Check /> : <Autorenew />}</TableCell>\n                                                        <TableCell align=\"left\">\n                                                            <IconButton onClick={() => { this.deleteSource(action.id) }}>\n                                                                <Delete />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            }\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                                <TableContainer style={{ marginTop: 15 }} component={Paper}>\n                                    <Table>\n                                        <TableRow>\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel>Source</InputLabel>\n                                                    <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\n                                                        {\n                                                            this.state.sources.map(source => {\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                            })\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            </TableCell>\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\n                                                {\n                                                    this.state.source ?\n                                                        <FormControl fullWidth >\n                                                            <InputLabel>Action</InputLabel>\n                                                            <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\n                                                                {\n                                                                    this.state.source.actions.map(action => {\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                                    })\n                                                                }\n                                                            </Select>\n                                                        </FormControl>\n                                                        : null\n                                                }\n                                            </TableCell>\n\n                                            <TableCell align=\"left\" style={{ width: '20%' }}>\n                                                {\n                                                    this.state.action ?\n                                                        this.state.action.settings.map(argument => {\n                                                            return (\n                                                                <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\n                                                                    <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\n                                                                </div>\n                                                            )\n                                                        }) : null\n                                                }\n                                            </TableCell>\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\n                                                {\n                                                    this.state.process.mode === 'switch' ?\n                                                        <Checkbox onChange={(event, isChecked) => { this.setState({ isChecked: isChecked }) }} /> : null\n                                                }\n                                            </TableCell>\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\n                                                <IconButton onClick={() => { this.addSource() }}>\n                                                    <Add />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        {\n                            this.state.executeInformation.length > 0 ?\n                                <div style={{ padding: 10 }}>\n                                    <Alert severity=\"success\" action={\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\n                                            <Close />\n                                        </IconButton>\n                                    }>\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\n                                    </Alert>\n                                </div>\n                                :\n                                null\n                        }\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Authorization\n                            </Typography>\n                            {\n                                this.state.profiles.map(profile => {\n                                    let state = false\n                                    this.state.process.profiles.forEach(pprofile => {\n                                        if (pprofile.profile == profile.id) {\n                                            state = true\n                                        }\n                                    })\n                                    return (\n                                        <ListItem style={{ padding: 1 }}  >\n                                            <FormControlLabel control={<Switch\n                                                checked={state}\n                                                onChange={() => {\n                                                    state ? this.deleteProfile(this.state.process, profile) : this.insertProfile(this.state.process, profile)\n                                                }}\n                                                color=\"primary\"\n                                            />} label={profile.name} />\n                                        </ListItem>\n                                    )\n                                })\n                            }\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\n                        <IconButton onClick={() => { this.delete(this.state.process.id) }} style={{ borderRadius: 5 }}>\n                            <Delete />\n                        </IconButton>\n                    </Paper>\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        {this.state.message}\n                    </Alert>\n                </div>\n            )\n        } else {\n            return (\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            )\n        }\n    }\n}\n\nexport default NewProcess","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport { IconButton, Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\nimport { Add, Delete, FileCopy, PlayArrow, Edit, Pause } from '@material-ui/icons'\n\nimport Alert from '../../../components/Alert'\nimport Theme from '../../../Theme'\nimport Request from '../../../utils/Request'\n\nclass Routine extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            loading: true,\n            enabled: false,\n            message: \"\",\n            routines: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/routines\")\n        if (result.error) {\n            this.setState({\n                enabled: true,\n                message: result.package + \" : \" + result.message\n            })\n        } else {\n            this.setState({\n                enabled: false,\n                message: \"\",\n                loading: false,\n                routines: result.data\n            })\n        }\n    }\n\n    async delete(id) {\n        let result = await new Request().delete().fetch(\"/api/routines/\" + id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async duplicate(id) {\n        let result = await new Request().put().fetch(\"/api/routines/\" + id + \"/duplicate\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async updateStatus(id, status) {\n        let result = await new Request().put({ status: status }).fetch(\"/api/routines/\" + id + \"/status\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {this.state.routines.slice(this.state.page * 10, (this.state.page + 1) * 10).map((routine) => (\n                                <TableRow key={routine.id} >\n                                    <TableCell align=\"left\">\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + routine.icon + \".svg\"} />\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {routine.name}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        <div style={{ flex: 1, flexDirection: 'row', display: 'flex', alignContent: 'center', alignItems: 'center', justifyContent: 'end' }}>\n                                            <IconButton onClick={() => { this.updateStatus(routine.id, routine.status === 0 ? 1 : 0) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2, backgroundColor: routine.status === 1 ? Theme.palette.success.main : null }}>\n                                                {routine.status === 0 ? <PlayArrow /> : <Pause />}\n                                            </IconButton>\n                                            <IconButton onClick={() => { this.props.history.push('/routine/' + routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\n                                                <Edit />\n                                            </IconButton>\n                                            <IconButton onClick={() => { this.duplicate(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\n                                                <FileCopy />\n                                            </IconButton>\n                                            <IconButton onClick={() => { this.delete(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\n                                                <Delete />\n                                            </IconButton>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                    <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                        <Link to=\"/routine/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <IconButton style={{ borderRadius: 0 }}>\n                                <Add />\n                            </IconButton>\n                        </Link>\n                    </Paper>\n                    <TablePagination component=\"div\" count={this.state.routines.length} rowsPerPage={10} page={this.state.page} rowsPerPageOptions={[]} onChangePage={(event, page) => { this.setState({ page: page }) }} />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Routine","import React from 'react'\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\nimport { Save, Add, List, Cached } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Source from '../../../utils/Source'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\nimport Theme from '../../../Theme'\nimport WeekSchedul from '../../../components/WeekSchedul'\nimport IconList from '../../../components/IconList'\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    backgroundColor: Theme.palette.background.paper,\n    padding: 10,\n    borderRadius: 5\n}\n\nclass NewRoutine extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            message: \"\",\n            routine: null,\n            sources: [],\n            mode: 'counter',\n            modalTrigger: false,\n            modalEffect: false,\n            routine: {\n                watch: 1,\n                triggers: [],\n                effects: [],\n                name: \"\",\n                icon: \"\"\n            }\n        }\n    }\n\n    async componentDidMount() {\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\"])\n        if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else {\n            this.setState({ sources: resultSource.data })\n        }\n    }\n\n    reset() {\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\n    }\n\n    setSource(id) {\n        this.state.sources.map(source => {\n            if (source.id == id) { this.setState({ source: source, action: null }) }\n        })\n    }\n\n    setAction(id) {\n        this.state.source.actions.map(action => {\n            if (action.id == id) { this.setState({ action: action }) }\n        })\n    }\n\n    updateIcon(icon) {\n        let routine = this.state.routine\n        routine.icon = icon\n        this.setState({ routine: routine })\n    }\n\n    updateName(name) {\n        let routine = this.state.routine\n        routine.name = name\n        this.setState({ routine: routine })\n    }\n\n    updateWatch(watch) {\n        let routine = this.state.routine\n        routine.watch = watch\n        this.setState({ routine: routine })\n    }\n\n    addTrigger() {\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Missing source\" })\n        } else if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Missing action\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.action.settings.length; index++) {\n                let setting = this.state.action.settings[index];\n                let value = this.state[\"argument-\" + setting.id]\n                if (value == undefined) {\n                    value = setting.default\n                }\n                settings.push({ reference: setting.id, value: value })\n            }\n            let routine = this.state.routine\n            routine.triggers.push({\n                source: this.state.source.id,\n                type: this.state.source.type,\n                action: this.state.action.id,\n                arguments: settings,\n                result: this.state.result,\n                statement: this.state.statement,\n                expected: this.state.expected\n            })\n            this.setState({\n                routine: routine,\n                modalTrigger: false,\n                action: null,\n                source: null,\n                result: null,\n                statement: null,\n                expected: null\n            })\n        }\n    }\n\n    addEffect() {\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Missing source\" })\n        } else if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Missing action\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.action.settings.length; index++) {\n                let setting = this.state.action.settings[index];\n                let value = this.state[\"argument-\" + setting.id]\n                if (value == undefined) {\n                    value = setting.default\n                }\n                settings.push({ reference: setting.id, value: value })\n            }\n            let routine = this.state.routine\n            routine.effects.push({\n                source: this.state.source.id,\n                type: this.state.source.type,\n                action: this.state.action.id,\n                arguments: settings\n            })\n            this.setState({\n                routine: routine,\n                modalEffect: false,\n                action: null,\n                source: null\n            })\n        }\n    }\n\n    removeTrigger(pIndex) {\n        let routine = this.state.routine\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\n        routine.triggers = triggers\n        this.setState({ routine: routine })\n    }\n\n    removeEffect(pIndex) {\n        let routine = this.state.routine\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\n        routine.effects = effects\n        this.setState({ routine: routine })\n    }\n\n    async save() {\n        if (this.state.routine.name.length == 0) {\n            this.setState({ enabled: true, message: \"Missing name\" })\n        } else if (this.state.routine.icon.length == 0) {\n            this.setState({ enabled: true, message: \"Missing icon\" })\n        } else if (this.state.routine.effects.length == 0) {\n            this.setState({ enabled: true, message: \"Missing effect\" })\n        } else {\n            let result = await new Request().post({\n                name: this.state.routine.name,\n                watch: this.state.routine.watch.toString(),\n                icon: this.state.routine.icon,\n                triggers: this.state.routine.triggers,\n                effects: this.state.routine.effects,\n                mode: this.state.mode\n            }).fetch(\"/api/routines\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.history.push('/routine')\n            }\n        }\n    }\n\n    render() {\n        if (this.state.routine) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                        <div>\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\n                                                    <List />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                ></TextField>\n                                <Popover\n                                    open={this.state.popup}\n                                    onClose={() => { this.setState({ popup: false }) }}\n                                    anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\n                                    transformOrigin={{ vertical: 'top', horizontal: 'center', }}\n                                >\n                                    <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon) }} />\n                                </Popover>\n                            </div>\n                            {\n                                this.state.mode == 'counter' ?\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 5, paddingRight: 5 }}>\n                                            <div style={{ flex: 1 }}>\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\n                                                    <Cached />\n                                                </IconButton>\n                                            </div>\n                                            <div style={{ display: 'flex', flex: 20, justifyContent: 'center' }}>\n                                                <Slider\n                                                    defaultValue={0}\n                                                    valueLabelDisplay=\"auto\"\n                                                    orientation={'horizontal'}\n                                                    min={0}\n                                                    max={1440}\n                                                    step={1}\n                                                    value={this.state.routine.watch}\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div> :\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25,  borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\n                                    </div>\n                            }\n\n                        </div>\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\n                            <div style={{ flex: 1, padding: 5 }} >\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\n\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\n                                    this.state.routine.triggers.map((trigger, index) => {\n                                        return (\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\n                                                <div  >\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\n                                                    {\n                                                        trigger.arguments.length > 0 ?\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                {\n                                                                    trigger.arguments.map(setting => {\n                                                                        return (\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                                {\n                                                    trigger.result && trigger.statement && trigger.expected ?\n                                                        <div>\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\n                                                            </div>\n                                                        </div>\n                                                        : null\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <Add />\n                                    </Button>\n                                </Card>\n                            </div>\n                            <div style={{ flex: 1, padding: 5 }} >\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\n                                    {\n                                        this.state.routine.effects.map((effect, index) => {\n                                            return (\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\n                                                    {\n                                                        effect.arguments.length > 0 ?\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                {\n                                                                    effect.arguments.map(setting => {\n                                                                        return (\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <Add />\n                                    </Button>\n                                </Card>\n                            </div>\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\n                            <Save />\n                        </IconButton>\n                    </Paper>\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        {this.state.message}\n                    </Alert>\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\n                        <Fade in={this.state.modalTrigger} >\n                            <Paper style={style}>\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                                    <Typography variant='h5' >\n                                        New Trigger\n                                    </Typography>\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                        <InputLabel>Source</InputLabel>\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                            {\n                                                this.state.sources.map(source => {\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                })\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                    {\n                                        this.state.source ?\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                                <InputLabel>Action</InputLabel>\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                    {\n                                                        this.state.source.actions.map(action => {\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                            : null\n                                    }\n                                    {\n                                        this.state.action && this.state.action.settings.length > 0 ?\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\n                                                    {\n                                                        this.state.action.settings.map(setting => {\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} /></div>\n                                                        })\n                                                    }\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\n                                        </div>\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\n                                            <InputLabel>Condition</InputLabel>\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\n                                        </div>\n                                    </div>\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\n                        <Fade in={this.state.modalEffect} >\n                            <Paper style={style}>\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                                    <Typography variant='h5' >\n                                        New effect\n                                    </Typography>\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                        <InputLabel>Source</InputLabel>\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                            {\n                                                this.state.sources.map(source => {\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                })\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                    {\n                                        this.state.source ?\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                                <InputLabel>Action</InputLabel>\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                    {\n                                                        this.state.source.actions.map(action => {\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                            : null\n                                    }\n                                    {\n                                        this.state.action && this.state.action.settings.length > 0 ?\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\n                                                    {\n                                                        this.state.action.settings.map(setting => {\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} /></div>\n                                                        })\n                                                    }\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Fade>\n                    </Modal>\n                </div>\n            )\n        } else {\n            return (\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            )\n        }\n    }\n}\n\nexport default NewRoutine","import React from 'react'\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\nimport { Save, Add, List, Cached } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\nimport Action from '../../../components/Action'\nimport Theme from '../../../Theme'\nimport IconList from '../../../components/IconList'\nimport WeekSchedul from '../../../components/WeekSchedul'\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    backgroundColor: Theme.palette.background.paper,\n    padding: 10,\n    borderRadius: 5\n}\n\nclass NewRoutine extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            popup: false,\n            id: props.match.params.id,\n            enabled: false,\n            message: \"\",\n            routine: null,\n            sources: [],\n            modalTrigger: false,\n            modalEffect: false,\n            mode: \"counter\"\n        }\n    }\n\n    async componentDidMount() {\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\"])\n        let result = await new Request().get().fetch(\"/api/routines/\" + this.state.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else {\n            this.setState({mode: result.data.mode, routine: result.data, sources: resultSource.data })\n        }\n    }\n\n    reset() {\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\n    }\n\n    setSource(id) {\n        this.state.sources.map(source => {\n            if (source.id == id) { this.setState({ source: source, action: null }) }\n        })\n    }\n\n    setAction(id) {\n        this.state.source.actions.map(action => {\n            if (action.id == id) { this.setState({ action: action }) }\n        })\n    }\n\n    updateIcon(icon) {\n        let routine = this.state.routine\n        routine.icon = icon\n        this.setState({ routine: routine })\n    }\n\n    updateName(name) {\n        let routine = this.state.routine\n        routine.name = name\n        this.setState({ routine: routine })\n    }\n\n    updateWatch(watch) {\n        let routine = this.state.routine\n        routine.watch = watch\n        this.setState({ routine: routine })\n    }\n\n    addTrigger() {\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Missing source\" })\n        } else if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Missing action\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.action.settings.length; index++) {\n                let setting = this.state.action.settings[index];\n                let value = this.state[\"argument-\" + setting.id]\n                if (value == undefined) {\n                    value = setting.default\n                }\n                settings.push({ reference: setting.id, value: value })\n            }\n            let routine = this.state.routine\n            routine.triggers.push({\n                source: this.state.source.id,\n                type: this.state.source.type,\n                action: this.state.action.id,\n                arguments: settings,\n                result: this.state.result,\n                statement: this.state.statement,\n                expected: this.state.expected\n            })\n            this.setState({\n                routine: routine,\n                modalTrigger: false,\n                action: null,\n                source: null,\n                result: null,\n                statement: null,\n                expected: null\n            })\n        }\n    }\n\n    addEffect() {\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Missing source\" })\n        } else if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Missing action\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.action.settings.length; index++) {\n                let setting = this.state.action.settings[index];\n                let value = this.state[\"argument-\" + setting.id]\n                if (value == undefined) {\n                    value = setting.default\n                }\n                settings.push({ reference: setting.id, value: value })\n            }\n            let routine = this.state.routine\n            routine.effects.push({\n                source: this.state.source.id,\n                type: this.state.source.type,\n                action: this.state.action.id,\n                arguments: settings\n            })\n            this.setState({\n                routine: routine,\n                modalEffect: false,\n                action: null,\n                source: null\n            })\n        }\n    }\n\n    removeTrigger(pIndex) {\n        let routine = this.state.routine\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\n        routine.triggers = triggers\n        this.setState({ routine: routine })\n    }\n\n    removeEffect(pIndex) {\n        let routine = this.state.routine\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\n        routine.effects = effects\n        this.setState({ routine: routine })\n    }\n\n    async save() {\n        if (this.state.routine.name.length == 0) {\n            this.setState({ enabled: true, message: \"Missing name\" })\n        } else if (this.state.routine.icon.length == 0) {\n            this.setState({ enabled: true, message: \"Missing icon\" })\n        } else if (this.state.routine.effects.length == 0) {\n            this.setState({ enabled: true, message: \"Missing effect\" })\n        } else {\n            let result = await new Request().put({\n                name: this.state.routine.name,\n                watch: this.state.routine.watch.toString(),\n                icon: this.state.routine.icon,\n                triggers: this.state.routine.triggers,\n                effects: this.state.routine.effects,\n                mode: this.state.mode\n            }).fetch('/api/routines/' + this.state.id)\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.history.push('/routine/')\n            }\n        }\n    }\n\n    render() {\n        if (this.state.routine) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                        <div>\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }} \n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\n                                                <List />\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                ></TextField>\n                            \n                        <Popover\n                            open={this.state.popup}\n                            onClose={() => { this.setState({ popup: false }) }}\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\n                        >\n                            <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon)}} />\n                        </Popover>\n                            \n                            </div>\n                            {\n                                this.state.mode == 'counter' ?\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 5, paddingRight: 5 }}>\n                                            <div style={{ flex: 1 }}>\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\n                                                    <Cached />\n                                                </IconButton>\n                                            </div>\n                                            <div style={{ display: 'flex', flex: 15, justifyContent: 'center' }}>\n                                                <Slider\n                                                    defaultValue={0}\n                                                    valueLabelDisplay=\"auto\"\n                                                    orientation={'horizontal'}\n                                                    min={0}\n                                                    max={1440}\n                                                    step={1}\n                                                    value={this.state.routine.watch}\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div> :\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\n                                    </div>\n                            }\n                        </div>\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\n                            <div style={{ flex: 1, padding: 5 }} >\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\n\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\n                                    this.state.routine.triggers.map((trigger, index) => {\n                                        return (\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\n                                                <div  >\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\n                                                    {\n                                                        trigger.arguments.length > 0 ?\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                {\n                                                                    trigger.arguments.map(setting => {\n                                                                        return (\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                                {\n                                                    trigger.result && trigger.statement && trigger.expected ?\n                                                        <div>\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\n                                                            </div>\n                                                        </div>\n                                                        : null\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <Add />\n                                    </Button>\n                                </Card>\n                            </div>\n                            <div style={{ flex: 1, padding: 5 }} >\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\n                                    {\n                                        this.state.routine.effects.map((effect, index) => {\n                                            return (\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\n                                                    {\n                                                        effect.arguments.length > 0 ?\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                {\n                                                                    effect.arguments.map(setting => {\n                                                                        return (\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <Add />\n                                    </Button>\n                                </Card>\n                            </div>\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\n                            <Save />\n                        </IconButton>\n                    </Paper>\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        {this.state.message}\n                    </Alert>\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\n                        <Fade in={this.state.modalTrigger} >\n                            <Paper style={style}>\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                                    <Typography variant='h5' >\n                                        New Trigger\n                                    </Typography>\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                        <InputLabel>Source</InputLabel>\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                            {\n                                                this.state.sources.map(source => {\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                })\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                    {\n                                        this.state.source ?\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                                <InputLabel>Action</InputLabel>\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                    {\n                                                        this.state.source.actions.map(action => {\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                            : null\n                                    }\n                                    {\n                                        this.state.action && this.state.action.settings.length > 0 ?\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\n                                                    {\n                                                        this.state.action.settings.map(setting => {\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action setState={this.setState.bind(this)} action={setting} flexDirection='column' orientation='horizontal'  /></div>\n                                                        })\n                                                    }\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\n                                        </div>\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\n                                            <InputLabel>Condition</InputLabel>\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\n                                        </div>\n                                    </div>\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\n                        <Fade in={this.state.modalEffect} >\n                            <Paper style={style}>\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                                    <Typography variant='h5' >\n                                        New effect\n                                    </Typography>\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                        <InputLabel>Source</InputLabel>\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                            {\n                                                this.state.sources.map(source => {\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                })\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                    {\n                                        this.state.source ?\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                                <InputLabel>Action</InputLabel>\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                    {\n                                                        this.state.source.actions.map(action => {\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                            : null\n                                    }\n                                    {\n                                        this.state.action && this.state.action.settings.length > 0 ?\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\n                                                    {\n                                                        this.state.action.settings.map(setting => {\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action setState={this.setState.bind(this)} action={setting} /></div>\n                                                        })\n                                                    }\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Fade>\n                    </Modal>\n                </div>\n            )\n        } else {\n            return (\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            )\n        }\n    }\n}\n\nexport default NewRoutine","import React from 'react'\nimport { Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\nimport md5 from 'md5'\nimport { Link } from \"react-router-dom\"\nimport Request from '../../../utils/Request'\nimport Alert from '../../../components/Alert'\n\nclass Module extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            modules: []\n        }\n    }\n\n    async componentDidMount() {\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\n        if (resultModule.error) {\n            this.setState({ enabled: true, message: resultModule.package + \" : \" + resultModule.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Identifiant\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.modules.slice(this.state.page * 10, (this.state.page + 1) * 10).map((pmodule) => (\n                                <Link to={\"/module/\" + md5(pmodule.name)} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\n                                    <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {pmodule.name}\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </Link>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignContent: 'center', alignItems: 'center' }}>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.modules.length}\n                        rowsPerPage={10}\n                        page={this.state.page}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Module","import React from 'react'\nimport md5 from 'md5'\nimport JSONPretty from 'react-json-pretty'\n\nimport { Alert } from '@material-ui/lab'\nimport { Close } from '@material-ui/icons'\nimport { Paper, Typography, Divider, Button, IconButton } from '@material-ui/core'\nimport AlertComponent from '../../../components/Alert'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\n\nclass Detail extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            hashId: props.match.params.id,\n            loading: null,\n            module: null,\n            enabled: false,\n            message: \"\",\n            executeInformation: \"\",\n            severity: \"error\"\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/configurations/module\")\n        if (result.error) {\n            this.setState({\n                enabled: true,\n                severity: \"error\",\n                message: result.package + \" : \" + result.message\n            })\n            this.props.history.push('/module')\n        } else {\n            let _module = false\n            result.data.forEach(pModule => {\n                if (md5(pModule.name) == this.state.hashId) {\n                    _module = pModule\n                }\n            })\n            if (_module) {\n                this.setState({\n                    module: _module\n                })\n            } else {\n                this.props.history.push('/module')\n            }\n        }\n        this.setState({ loading: null })\n    }\n\n    async executeAction(action, settings) {\n        this.setState({ loading: action })\n        let tmp = {}\n        for (let index = 0; index < settings.length; index++) {\n            let argument = settings[index];\n            let value = this.state[\"argument-\" + argument.id]\n            if (value == undefined) {\n                value = argument.default\n            }\n            tmp[argument.id] = value\n        }\n        let result = await new Request().post({ settings: tmp, reference: this.state.module.reference }).fetch(\"/api/modules/\" + md5(this.state.module.name) + \"/actions/\" + action)\n        if (result.error) {\n            this.setState({\n                enabled: true,\n                severity: \"error\",\n                message: result.package + \" : \" + result.message\n            })\n            this.setState({ loading: null })\n        } else {\n            if (result.data) {\n                this.setState({\n                    executeInformation: JSON.stringify(result.data)\n                })\n            } else {\n                this.setState({\n                    enabled: true,\n                    severity: \"success\",\n                    message: \"Success\"\n                })\n            }\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        if (this.state.module) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\n                        <div style={{ padding: 10 }}>\n                            <Typography variant='h4' >\n                                {this.state.module.name.split(\"/\")[1]}\n                            </Typography>\n                            <Typography variant='subtitle1' >\n                                {this.state.module.name}\n                            </Typography>\n                        </div>\n                        <Divider />\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            {\n                                this.state.module.actions.map(action => {\n                                    return (\n                                        <Paper style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', padding: 10 }}>\n                                            <Button disabled={this.state.loading == action.id} onClick={() => { this.executeAction(action.id, action.settings) }} variant={this.state.loading == action.id ? 'contained' : 'outlined'} style={{ width: '250px', height: '100%' }} >\n                                                {action.name}\n                                            </Button>\n                                            {\n                                                action.settings.length > 0 ?\n                                                    <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\n                                                        {\n                                                            action.settings.map(setting => {\n                                                                return <Action flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\n                                                            })\n                                                        }\n                                                    </div>\n                                                    : null\n                                            }\n                                        </Paper>\n                                    )\n                                })\n                            }\n                        </div>\n                        {\n                            this.state.executeInformation.length > 0 ?\n                                <div style={{ padding: 10 }}>\n                                    <Alert severity=\"success\" action={\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\n                                            <Close />\n                                        </IconButton>\n                                    }>\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\n                                    </Alert>\n                                </div>\n                                :\n                                null\n                        }\n                    </Paper>\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\n                        {this.state.message}\n                    </AlertComponent>\n                </div>\n            )\n        } else {\n            return (\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\n                    {this.state.message}\n                </AlertComponent>\n            )\n        }\n    }\n}\n\nexport default Detail","import React from 'react'\nimport {IconButton, Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead } from '@material-ui/core'\n\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport { Link } from \"react-router-dom\"\nimport { Category, DevicesOther, Store } from '@material-ui/icons'\n\nclass Configuration extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            pageSmartobject: 0,\n            pageModule: 0,\n            enabled: false,\n            message: \"\",\n            modules: [],\n            smartobjects: []\n        }\n    }\n\n    async componentDidMount() {\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\n        if (resultModule.error) {\n            this.setState({ enabled: true, message: resultModule.package + \" : \" + resultModule.message })\n        } else if (resultSmartobject.error) {\n            this.setState({ enabled: true, message: resultSmartobject.package + \" : \" + resultSmartobject.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data, smartobjects: resultSmartobject.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Identifiant\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Name\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.smartobjects.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.id}\n                                        </Typography>\n                                    </TableCell><TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.name}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center'}}>\n                <div style={{ flexDirection: 'row', display: 'flex' }}>\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                            <Link to=\"/market/module\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <IconButton style={{ borderRadius: 0 }}>\n                                    <Store />\n                                </IconButton>\n                            </Link>\n                            </Paper>\n                    </div>\n                        <TablePagination\n                        component=\"div\"\n                        count={this.state.smartobjects.length}\n                        rowsPerPage={10}\n                        page={this.state.pageSmartobject}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ pageSmartobject: page }) }}\n                    />\n                </div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Identifiant\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Name\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.modules.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.id}\n                                        </Typography>\n                                    </TableCell><TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.name}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                <div style={{ flexDirection: 'row', display: 'flex' }}>\n                        <Paper style={{width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                            <Link to=\"/market/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <IconButton style={{ borderRadius: 0 }}>\n                                    {this.state.id != \"smartobject\" ? <DevicesOther/> : <Category />}\n                                </IconButton>\n                            </Link>\n                            </Paper>\n                    </div>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.modules.length}\n                        rowsPerPage={10}\n                        page={this.state.pageModule}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ pageModule: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Configuration","import React from 'react'\nimport { IconButton, Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead, Button } from '@material-ui/core'\n\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport { Link } from \"react-router-dom\"\nimport { Category, DevicesOther, Close, GetApp } from '@material-ui/icons'\n\nclass Configuration extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            message: \"\",\n            markets: [],\n            pageMarket: 0,\n            severity: \"error\",\n            loading: false\n        }\n    }\n\n    async install(pPackage) {\n        this.setState({ loading: true })\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/install\")\n        if (result.error) {\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ severity: \"info\", enabled: true, message: pPackage + \" was installed\" })\n            this.componentDidMount()\n        }\n    }\n\n    async upgrade(pPackage) {\n        this.setState({ loading: true })\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/upgrade\")\n        if (result.error) {\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ severity: \"info\", enabled: true, message: pPackage + \" was upgraded\" })\n            this.componentDidMount()\n        }\n    }\n\n    async uninstall(pPackage) {\n        this.setState({ loading: true })\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/uninstall\")\n        if (result.error) {\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ severity: \"info\", enabled: true, message: pPackage + \" was removed\" })\n            this.componentDidMount()\n        }\n    }\n\n    async componentDidMount() {\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\n        let resultPing = await new Request().get().fetch(\"/api/ping\")\n        let result = await fetch(\"https://market.intendant.io\")\n        let resultMarket = await result.json()\n        resultMarket = resultMarket.map(market => {\n            market.mode = \"install\"\n            market.currentVersion = \"0.0.0\"\n            return market\n        })\n        resultMarket = resultMarket.map(market => {\n            if (market.name == \"@intendant/core\") {\n                if (resultPing.version != market.version) {\n                    market.mode = \"upgrade\"\n                } else {\n                    market.mode = \"none\"\n                }\n                market.currentVersion = resultPing.version\n            }\n            return market\n        })\n        resultModule.data.forEach(pModule => {\n            resultMarket = resultMarket.map(market => {\n                if (market.name == pModule.name) {\n                    market.currentVersion = pModule.version\n                    if (market.version == pModule.version) {\n                        market.mode = \"remove\"\n                    } else {\n                        market.mode = \"update\"\n                    }\n                }\n                return market\n\n            })\n        })\n        resultSmartobject.data.forEach(pModule => {\n            resultMarket = resultMarket.map(market => {\n                if (market.name == pModule.name) {\n                    market.currentVersion = pModule.version\n                    if (market.version == pModule.version) {\n                        market.mode = \"remove\"\n                    } else {\n                        market.mode = \"update\"\n                    }\n                }\n\n                return market\n            })\n        })\n        this.setState({ markets: resultMarket })\n        if (resultModule.error) {\n            this.setState({ severity: \"error\", enabled: true, message: resultModule.package + \" : \" + resultModule.message })\n        } else if (resultSmartobject.error) {\n            this.setState({ severity: \"error\", enabled: true, message: resultSmartobject.package + \" : \" + resultSmartobject.message })\n        } else {\n            this.setState({ modules: resultModule.data, smartobjects: resultSmartobject.data })\n        }\n        this.setState({ loading: false })\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Name\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Type\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='center'>\n                                    <Typography variant='body1'>\n                                        Version\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='center'>\n                                    <Typography variant='body1'>\n                                        Action\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.markets.slice(this.state.pageMarket * 20, (this.state.pageMarket + 1) * 20).map((pmodule) => (\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.name}\n                                        </Typography>\n                                    </TableCell><TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.type}\n                                        </Typography>\n                                    </TableCell><TableCell align=\"center\">\n                                        <Typography variant='body1'>\n                                            {pmodule.version}\n                                        </Typography>\n                                    </TableCell><TableCell align=\"center\">\n                                        <Typography variant='body1'>\n                                            {\n                                                    pmodule.mode == \"none\" ? \n                                                    <Typography variant='body1'>\n                                                        Updated\n                                                    </Typography>\n                                                        :\n                                                    pmodule.mode == \"remove\" ?\n                                                        <Button disabled={this.state.loading} size='small' startIcon={<Close />} onClick={() => { this.uninstall(pmodule.name) }} variant=\"outlined\" >\n                                                            Remove\n                                                        </Button>\n                                                        :\n                                                        pmodule.mode == \"upgrade\" ?\n                                                            <Button disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => { this.uninstall(pmodule.name) }} variant=\"outlined\" >\n                                                                Upgrade\n                                                            </Button>\n                                                            :\n                                                            pmodule.mode == \"install\" ?\n                                                                <Button disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => { this.install(pmodule.name) }} variant=\"outlined\" disableElevation  >\n                                                                    Install\n                                                                </Button>\n                                                                :\n                                                                pmodule.mode == \"update\" ?\n                                                                    <Button disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => { this.install(pmodule.name) }} variant=\"outlined\" disableElevation  >\n                                                                        Update\n                                                                    </Button>\n                                                                    :\n                                                                    <Button disabled={true} size='small' startIcon={<GetApp />} onClick={() => { this.install(pmodule.name) }} variant=\"outlined\" disableElevation  >\n                                                                        Unknown\n                                                                    </Button>\n                                            }\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.markets.length}\n                        rowsPerPage={20}\n                        page={this.state.pageMarket}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ pageMarket: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Configuration","import React from 'react'\nimport { Add } from '@material-ui/icons'\nimport { Typography, Paper, TableBody, TableContainer , TableHead ,TableCell, Table, TableRow, TablePagination, IconButton  } from '@material-ui/core'\nimport { Link } from \"react-router-dom\"\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass Widget extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            widgets: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/widgets\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", widgets: result.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {this.state.widgets.slice(this.state.page * 10, (this.state.page + 1) * 10).map((widget) => (\n                                <Link to={\"/widget/\" + widget.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\n                                    <TableRow hover key={widget.reference} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + widget.icon + \".svg\"} />\n                                    </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {widget.reference}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            {widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map(content => {\n                                                return content.content.split(\"\\n\").map(_content => {\n                                                    return (\n                                                        <Typography variant='body1' style={{ fontWeight: content.type.reference == 'title' ? 'bold' : 'normal' }}>\n                                                            {_content}\n                                                        </Typography>\n                                                    )\n                                                })\n                                            })}\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {widget.icon}\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </Link>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                            <Link to=\"/widget/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                                <IconButton style={{ borderRadius: 0 }}>\n                                    <Add />\n                                </IconButton>\n                            </Link>\n                        </Paper>\n                    </div>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.widgets.length}\n                        rowsPerPage={10}\n                        page={this.state.page}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    { this.state.message }\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Widget","import React from 'react'\nimport Alert from '../../../components/Alert'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\n\nimport { Popover, InputAdornment, TableRow, Table, MenuItem, FormControl, TableCell, IconButton, Typography, InputLabel, Button, TextField, Paper, TableBody, TableContainer, TableHead, Divider, Select } from '@material-ui/core'\nimport { Close, Add, List } from '@material-ui/icons'\nimport IconList from '../../../components/IconList'\n\nclass NewWidget extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            message: \"\",\n            popup: false,\n            content: null,\n            description: \"\",\n            image: \"\",\n            sources: [],\n            contentSources: [],\n            source: null,\n            action: null,\n            widgetReference: \"\",\n            reference: \"\",\n            icon: \"\",\n            type: \"title\",\n            types: [],\n            contents: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/smartobjects\")\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\n        let resultSource = await Source.getSource([\"smartobject\",\"module\"])\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else if (resultConfiguration.error) {\n            this.setState({ enabled: true, message: resultConfiguration.package + \" : \" + resultConfiguration.message })\n        } else if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", loading: false, sources: resultSource.data, type: false, types: resultConfiguration.data.contents.types })\n        }\n    }\n\n    setSource(id) {\n        this.state.sources.map(source => {\n            if (source.id == id) { this.setState({ source: source, action: null }) }\n        })\n    }\n\n\n    setAction(id) {\n        this.state.source.actions.map(action => {\n            if (action.id == id) {\n                this.setState({ action: action })\n            }\n        })\n    }\n\n    setType(id) {\n        this.state.types.map(type => {\n            if (type.id == id) {\n                this.setState({ type: type })\n            }\n        })\n    }\n\n    async save() {\n        if (this.state.widgetReference.length == 0 || this.state.contentSources.length == 0 || this.state.icon.length == 0) {\n            this.setState({ enabled: true, message: \"Missing parameters\" })\n            return\n        }\n        let authorization = localStorage.getItem(\"authorization\")\n        let server = localStorage.getItem(\"server\")\n        let result = await fetch(server + \"/api/widgets\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \" + authorization\n            },\n            body: JSON.stringify({\n                reference: this.state.widgetReference,\n                sources: this.state.contentSources,\n                contents: this.state.contents,\n                icon: this.state.icon\n            })\n        })\n        let resultJSON = await result.json()\n        if (resultJSON.error) {\n            this.setState({ enabled: true, message: resultJSON.package + \" : \" + resultJSON.message })\n        } else {\n            this.props.history.push('/widget')\n        }\n    }\n\n\n    insertContent() {\n        let contents = this.state.contents\n        contents.push({ type: this.state.type, content: this.state.content })\n        this.setState({ contents: contents, content: \"\" })\n    }\n\n    insertSource() {\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\n            this.setState({ enabled: true, message: \"Missing parameters\" })\n            return\n        }\n        let find = false\n        let contentSources = this.state.contentSources\n        contentSources.forEach(contentSource => {\n            if (contentSource.reference == this.state.reference) {\n                find = true\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\n            }\n        })\n        if (find) {\n            return\n        }\n        let tmpsettings = []\n        let action = this.state.action\n        for (let index = 0; index < action.settings.length; index++) {\n            let argument = action.settings[index];\n            let value = this.state[\"argument-\" + argument.id]\n            if (value == undefined) {\n                value = argument.default\n            }\n            tmpsettings.push({ reference: argument.id, value: value })\n        }\n        contentSources.push({\n            source: this.state.source,\n            action: this.state.action,\n            arguments: tmpsettings,\n            reference: this.state.reference\n        })\n        this.setState({\n            contentSources: contentSources,\n            action: null,\n            source: null,\n            reference: \"\"\n        })\n    }\n\n    delete(index) {\n        let contents = []\n        this.state.contents.forEach((content, pindex) => {\n            if (pindex != index) { contents.push(content) }\n        })\n        this.setState({ contents: contents })\n    }\n\n    deleteContent(index) {\n        let contentSources = []\n        this.state.contentSources.forEach((content, pindex) => {\n            if (pindex != index) { contentSources.push(content) }\n        })\n        this.setState({ contentSources: contentSources })\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\n                    <div style={{ padding: 10 }}>\n                        <Typography variant='h4' > Widget </Typography>\n                    </div>\n                    <Divider />\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\n                        <TextField\n                            onChange={(event) => { this.setState({ widgetReference: event.target.value }) }}\n                            multiline\n                            value={this.state.widgetReference}\n                            label=\"Reference\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            style={{ marginLeft: 10 }}\n                            onChange={(event) => { this.setState({ icon: event.target.value }) }}\n                            multiline\n                            value={this.state.icon}\n                            label=\"Icon\"\n                            variant=\"outlined\"\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\n                                            <List />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <Popover\n                            open={this.state.popup}\n                            onClose={() => { this.setState({ popup: false }) }}\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}\n                        >\n                            <IconList onSelect={(icon) => { this.setState({ popup: false, icon: icon }) }} />\n\n                        </Popover>\n                    </div>\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\n                        <Typography variant='h5' > Source </Typography>\n                        <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\n                            <TableContainer component={Paper}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align='left'>\n                                                <Typography variant='subtitle1'> Source </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                <Typography variant='subtitle1'> Argument </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            this.state.contentSources.map((contentSource, index) => {\n                                                return (\n                                                    <TableRow >\n                                                        <TableCell align=\"left\" style={{ width: '30%' }}>\n                                                            <Typography variant='subtitle1'> {contentSource.reference} </Typography>\n                                                            <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\n                                                            <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\n                                                        </TableCell>\n                                                        <TableCell align=\"left\">\n                                                            <Typography variant='subtitle1'>\n                                                                {JSON.stringify(contentSource.arguments)}\n                                                            </Typography>\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">\n                                                            <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\n                                                                <Close />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            })\n                                        }\n                                        <TableRow  >\n                                            <TableCell align=\"left\" style={{ width: '30%' }}>\n                                                <TextField\n                                                    onChange={(event) => { this.setState({ reference: event.target.value }) }}\n                                                    style={{ width: '100%' }}\n                                                    multiline\n                                                    value={this.state.reference}\n                                                    label=\"Reference\"\n                                                    variant=\"outlined\"\n                                                />\n                                                <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\n                                                    <InputLabel>Source</InputLabel>\n                                                    <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                                        {\n                                                            this.state.sources.map(source => {\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                            })\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                                {\n                                                    this.state.source ?\n                                                        <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\n                                                            <InputLabel>Action</InputLabel>\n                                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                                {\n                                                                    this.state.source.actions.map(action => {\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                                    })\n                                                                }\n                                                            </Select>\n                                                        </FormControl>\n                                                        : null\n                                                }\n                                            </TableCell>\n                                            <TableCell align=\"right\" style={{ width: '40%' }}>\n                                                {\n                                                    this.state.action && this.state.action.settings.length > 0 ?\n                                                        <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\n                                                            <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\n                                                                {\n                                                                    this.state.action.settings.map(setting => {\n                                                                        return <Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} />\n                                                                    })\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                        : null\n                                                }\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\n                                                    <Add />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </div>\n                    </div>\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\n                        <Typography variant='h5' > Content </Typography>\n                        <div style={{ marginTop: 10, marginBottom: 10 }}>\n                            <TableContainer component={Paper}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align='left'>\n                                                <Typography variant='subtitle1'> Type </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                <Typography variant='subtitle1'> Affichage </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.contents.sort((a, b) => { return a.type.rank > b.type.rank }).map((content, index) => (\n                                            <TableRow >\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='subtitle1'> {content.type.name} </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='subtitle1'> {content.content} </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton onClick={() => { this.delete(index) }} style={{ borderRadius: 2 }}>\n                                                        <Close />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                        <TableRow  >\n                                            <TableCell align=\"left\">\n                                                <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\n                                                    <InputLabel>Type</InputLabel>\n                                                    <Select value={this.state.type.id} onChange={(event) => { this.setType( event.target.value ) }} label=\"Type\" >\n                                                        {\n                                                            this.state.types.map(type => {\n                                                                return <MenuItem value={type.id} >{type.name}</MenuItem>\n                                                            })\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                <TextField\n                                                    onChange={(event) => { this.setState({ content: event.target.value }) }}\n                                                    style={{ width: '100%' }}\n                                                    multiline\n                                                    value={this.state.content}\n                                                    label=\"Name\"\n                                                    variant=\"outlined\"\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <IconButton onClick={() => { this.insertContent() }} style={{ borderRadius: 2 }}>\n                                                    <Add />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </div>\n                    </div>\n                    <Button style={{ marginTop: 5, marginBottom: 5 }} onClick={() => { this.save() }} variant='outlined'>\n                        Save\n                    </Button>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default NewWidget","import React from 'react'\nimport Action from '../../../components/Action'\nimport { FormControl, Select, InputLabel, MenuItem, Paper, Typography, Divider, IconButton, TextField, TableCell, TableBody, TableContainer, TableHead, Table, TableRow } from '@material-ui/core'\nimport { Close, Add, Delete, ArrowUpward, ArrowDownward } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\n\nclass Widget extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            message: \"\",\n            id: props.match.params.id,\n            contentSources: [],\n            reference: '',\n            source: null,\n            action: null,\n            type: \"title\",\n            content: \"\",\n            sources: [],\n            types: [],\n            widget: null,\n            needSave: null\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/widgets/\" + this.state.id)\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else if (resultConfiguration.error) {\n            this.setState({ enabled: true, message: resultConfiguration.package + \" : \" + resultConfiguration.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", loading: false, widget: result.data, sources: resultSource.data, types: resultConfiguration.data.contents.types})\n        }\n    }\n\n    async delete() {\n        let result = await new Request().delete({}).fetch(\"/api/widgets/\" + this.state.widget.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.props.history.push('/widget')\n        }\n    }\n\n    async deleteSource(source) {\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.widget.id + \"/sources/\" + source)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async insertSource() {\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\n            this.setState({ enabled: true, message: \"Missing parameters\" })\n            return\n        }\n        let find = false\n        this.state.widget.sources.forEach(contentSource => {\n            if (contentSource.reference == this.state.reference) {\n                find = true\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\n            }\n        })\n        if (find) {\n            return\n        }\n        let tmpsettings = []\n        let action = this.state.action\n        for (let index = 0; index < action.settings.length; index++) {\n            let argument = action.settings[index];\n            let value = this.state[\"argument-\" + argument.id]\n            if (value == undefined) {\n                value = argument.default\n            }\n            tmpsettings.push({ reference: argument.id, value: value })\n        }\n        let result = await new Request().post({\n            source: this.state.source,\n            action: this.state.action,\n            arguments: tmpsettings,\n            reference: this.state.reference\n        }).fetch(\"/api/widgets/\" + this.state.id + \"/sources\")\n\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ action: null, source: null, reference: \"\" })\n            this.componentDidMount()\n        }\n    }\n\n    setSource(id) {\n        this.state.sources.map(source => {\n            if (source.id == id) { this.setState({ source: source, action: null }) }\n        })\n    }\n\n\n    setAction(id) {\n        this.state.source.actions.map(action => {\n            if (action.id == id) {\n                this.setState({ action: action })\n            }\n        })\n    }\n\n    async setContent() {\n        let result = await new Request().post({type: this.state.type, content: this.state.content}).fetch(\"/api/widgets/\" + this.state.id + \"/contents\")\n        if(result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ content: \"\" })\n            this.componentDidMount()\n        }\n    }\n\n    async deleteContent(id) {\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.id + \"/contents/\" + id)\n        if(result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async update(content) {\n        let widget = this.state.widget\n        let contents = widget.contents.map(pContent => {\n            if (pContent.id == content.id) {\n                pContent.native = content.native\n            }\n            return pContent\n        })\n        widget.contents = contents\n        this.setState({ widget: widget, needSave: null })\n        let result = await new Request().put({ content: content }).fetch(\"/api/widgets/\" + this.state.widget.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        if (this.state.widget) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                        <div style={{ padding: 10 }}>\n                            <Typography variant='h4' style={{ fontSize: 25 }}>\n                                {this.state.widget.reference}\n                            </Typography>\n                            <Typography variant='subtitle1' >\n                                {this.state.widget.icon}\n                            </Typography>\n                        </div>\n                        <Divider />\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Source\n                            </Typography>\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell align='left' >\n                                                    <Typography variant='subtitle1'>Reference</Typography>\n                                                </TableCell>\n                                                <TableCell align='left'>\n                                                    <Typography variant='subtitle1' >Source</Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='subtitle1' >Argument</Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {\n                                                this.state.widget.sources.map((source, index) => {\n                                                    return (\n                                                        <TableRow >\n                                                            <TableCell align=\"left\" >\n                                                                <Typography variant='subtitle1'>\n                                                                    {source.reference}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"left\">\n                                                                <Typography variant='subtitle1'>\n                                                                    {source.object}\n                                                                </Typography>\n                                                                <Typography variant='subtitle1'>\n                                                                    {source.action}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"left\" >\n                                                                <Typography variant='subtitle1'>\n                                                                    {\n                                                                        source.arguments.map(argument => {\n                                                                            return (\n                                                                                <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\n                                                                            )\n                                                                        })\n                                                                    }\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"right\">\n                                                                <IconButton onClick={() => { this.deleteSource(source.id) }} style={{ borderRadius: 3 }}>\n                                                                    <Delete />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    )\n                                                })\n                                            }\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableBody>\n                                            {\n                                                this.state.contentSources.map((contentSource, index) => {\n                                                    return (\n                                                        <TableRow >\n                                                            <TableCell align=\"left\" style={{ width: '30%' }}>\n                                                                <Typography variant='subtitle1'> {contentSource.reference} </Typography>\n                                                                <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\n                                                                <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"left\">\n                                                                <Typography variant='subtitle1'>\n                                                                    {JSON.stringify(contentSource.arguments)}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"right\">\n                                                                <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\n                                                                    <Close />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    )\n                                                })\n                                            }\n                                            <TableRow  >\n                                                <TableCell align=\"left\" style={{ width: '30%' }}>\n                                                    <TextField\n                                                        onChange={(event) => { this.setState({ reference: event.target.value }) }}\n                                                        style={{ width: '100%' }}\n                                                        multiline\n                                                        value={this.state.reference}\n                                                        label=\"Reference\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\n                                                        <InputLabel>Source</InputLabel>\n                                                        <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                                            {\n                                                                this.state.sources.map(source => {\n                                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                    {\n                                                        this.state.source ?\n                                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\n                                                                <InputLabel>Action</InputLabel>\n                                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                                    {\n                                                                        this.state.source.actions.map(action => {\n                                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                                        })\n                                                                    }\n                                                                </Select>\n                                                            </FormControl>\n                                                            : null\n                                                    }\n                                                </TableCell>\n                                                <TableCell align=\"right\" style={{ width: '40%' }}>\n                                                    {\n                                                        this.state.action && this.state.action.settings.length > 0 ?\n                                                            <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\n                                                                <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\n                                                                    {\n                                                                        this.state.action.settings.map(setting => {\n                                                                            return <Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} />\n                                                                        })\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                            : null\n                                                    }\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\n                                                        <Add />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Content\n                            </Typography>\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell align='left' style={{width: '15%'}} >\n                                                    <Typography variant='subtitle1'>Type</Typography>\n                                                </TableCell>\n                                                <TableCell align='left' style={{ width: '80%' }}>\n                                                    <Typography variant='subtitle1' >content</Typography>\n                                                </TableCell>\n                                                <TableCell align='left' style={{width: '20%'}}>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {\n                                                this.state.widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map((content, index) => {\n                                                    return (\n                                                        <TableRow >\n                                                            <TableCell align=\"left\" >\n                                                                <Typography variant='subtitle1'>\n                                                                    {content.type.name}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"left\" >\n                                                                <TextField\n                                                                    style={{ width: '100%', marginBottom: 5 }}\n                                                                    onChange={(event) => { content.native = event.target.value; this.setState({needSave: index}) }}\n                                                                    onBlur={(event) => {this.update(content) }}\n                                                                    multiline\n                                                                    value={content.native}\n                                                                    variant=\"outlined\"\n                                                                />\n                                                                {\n                                                                    content.content.split(\"\\n\").map(_content => {\n                                                                        return (\n                                                                            <Typography variant='body1' color={this.state.needSave == index ? 'primary' : 'inherit'} style={{ fontWeight: _content.type == 'title' ? 'bold' : 'normal' }}>\n                                                                                {_content}\n                                                                            </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </TableCell>\n                                                            <TableCell align=\"right\">\n                                                                <IconButton onClick={() => { this.deleteContent(content.id) }} style={{ borderRadius: 3 }}>\n                                                                    <Delete />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    )\n                                                })\n                                            }\n                                            <TableRow  >\n                                                <TableCell align=\"left\">\n                                                    <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\n                                                        <InputLabel>Type</InputLabel>\n                                                        <Select value={this.state.type} onChange={(event) => { this.setState({ type: event.target.value }) }} label=\"Type\" >\n                                                            {\n                                                                this.state.types.map(type => {\n                                                                    return <MenuItem value={type.id} >{type.name}</MenuItem>\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <TextField\n                                                        onChange={(event) => { this.setState({ content: event.target.value }) }}\n                                                        style={{ width: '100%' }}\n                                                        multiline\n                                                        value={this.state.content}\n                                                        label=\"Name\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton onClick={() => { this.setContent() }} style={{ borderRadius: 2 }}>\n                                                        <Add />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\n                        <IconButton onClick={() => { this.delete() }} style={{ borderRadius: 5 }}>\n                            <Delete />\n                        </IconButton>\n                    </Paper>\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        {this.state.message}\n                    </Alert>\n                </div>\n            )\n        } else {\n            return (\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            )\n        }\n    }\n}\n\nexport default Widget","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport Moment from 'moment'\nimport { Add, Delete, Settings } from '@material-ui/icons'\nimport { FormControl, Button, MenuItem, Select, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton } from '@material-ui/core'\nimport Request from '../../../utils/Request'\nimport Alert from '../../../components/Alert'\n\nclass Smartobject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            users: [],\n            profiles: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/users\")\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\n        if (result.error) {\n            this.setState({\n                enabled: true,\n                message: result.package + \" : \" + result.message\n            })\n        } else if (resultProfile.error) {\n            this.setState({\n                enabled: true,\n                message: resultProfile.package + \" : \" + resultProfile.message\n            })\n        } else {\n            this.setState({\n                enabled: false,\n                message: \"\",\n                users: result.data,\n                profiles: resultProfile.data\n            })\n        }\n    }\n\n    async delete(id) {\n        let result = await new Request().delete().fetch(\"/api/users/\" + id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async updateProfile(user, profile) {\n        let result = await new Request().put({\n            login: user.login,\n            profile: profile\n        }).fetch(\"/api/users/\" + user.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    this.state.loading ?\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\n                                Chargement des smartobject\n                            </Typography>\n                        </Paper>\n                        :\n                        <div>\n                            <TableContainer component={Paper}>\n                                <Table>\n                                    <TableBody>\n                                        {this.state.users.sort((a, b) => {\n                                            return a.profile > b.profile\n                                        }).slice(this.state.page * 10, (this.state.page + 1) * 10).map((user) => (\n                                            <TableRow hover key={user.id} style={{ cursor: 'pointer' }}>\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='body1'>\n                                                        {\n                                                            user.login\n                                                        }\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <FormControl variant=\"outlined\"  >\n                                                        <Select disabled={user.login == 'admin'} value={user.profile} onChange={(event) => { this.updateProfile(user, event.target.value) }} >\n                                                            {\n                                                                this.state.profiles.map(profile => {\n                                                                    return (\n                                                                        <MenuItem value={profile.id} >{profile.name}</MenuItem>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton onClick={() => { this.props.history.push('/user/' + user.id +  \"/password\") }} style={{ borderRadius: 3 }}>\n                                                        <Settings />\n                                                    </IconButton>\n                                                    <IconButton onClick={() => { this.delete(user.id) }} style={{ borderRadius: 3 }}>\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                                    <Link to=\"/user/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                                        <IconButton style={{ borderRadius: 0 }}>\n                                            <Add />\n                                        </IconButton>\n                                    </Link>\n                                </Paper>\n                                <TablePagination\n                                    component=\"div\"\n                                    count={this.state.users.length}\n                                    rowsPerPage={10}\n                                    page={this.state.page}\n                                    rowsPerPageOptions={[]}\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\n                                />\n                            </div>\n                        </div>\n                }\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </>\n        )\n    }\n}\n\nexport default Smartobject","import React from 'react'\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\nimport { Save } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass NewSmartobject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            message: \"\",\n            profiles: [],\n            profile: 1,\n            login: \"\",\n            password: \"\",\n            confirmationPassword: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/profiles\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", profiles: result.data })\n        }\n    }\n\n    async add() {\n        if(this.state.login.length == 0) {\n            this.setState({ enabled: true, message: \"Missing login\" })\n        } else if(this.state.password.length == 0) {\n            this.setState({ enabled: true, message: \"Missing password\" })\n        } else if(this.state.password != this.state.confirmationPassword) {\n                this.setState({ enabled: true, message: \"Passwords are not the same\" })\n            } else {\n            let result = await new Request().post({login: this.state.login, password: this.state.password, profile: this.state.profile}).fetch(\"/api/users\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.history.push('/user')\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\n                            <TextField placeholder='login' variant=\"outlined\" value={this.state.login} onChange={(event) => { this.setState({ login: event.currentTarget.value }) }} />\n                            <TextField type='password' placeholder='password' variant=\"outlined\" value={this.state.password} style={{ marginTop: 10 }} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\n                        <FormControl variant=\"outlined\" style={{ width: '100%', marginTop: 10 }} >\n                                <Select value={this.state.profile} onChange={(event) => { this.setState({ profile: event.target.value }) }} >\n                                    {\n                                        this.state.profiles.map(profile => {\n                                            return (\n                                                <MenuItem value={profile.id} >{profile.name}</MenuItem>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                </Paper>\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\n                        <Save />\n                    </IconButton>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default NewSmartobject","import React from 'react'\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\nimport { Save } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass NewPassword extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            id: props.match.params.id,\n            message: \"\",\n            confirmationPassword: \"\",\n            password: \"\"\n        }\n    }\n\n    async changePassword() {\n        if(this.state.password.length == 0) {\n            this.setState({ enabled: true, message: \"Missing password\" })\n        } else if(this.state.confirmationPassword.length == 0) {\n            this.setState({ enabled: true, message: \"Missing confirmation password\" })\n        } else if(this.state.password != this.state.confirmationPassword) {\n            this.setState({ enabled: true, message: \"Passwords are not the same\" })\n        } else {\n            let result = await new Request().post({password: this.state.password}).fetch(\"/api/users/\" + this.state.id + \"/password\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.history.push('/user')\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\n                            <TextField placeholder='password' type='password' variant=\"outlined\" value={this.state.password} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\n                        </div>\n                    </div>\n                </Paper>\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                    <IconButton onClick={() => { this.changePassword() }} style={{ borderRadius: 0 }} variant='outlined'>\n                        <Save />\n                    </IconButton>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default NewPassword","import React from 'react'\nimport { Drawer, List, Typography, Divider, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport {ShoppingCart, DevicesOther, ExitToApp, AccountTree, Category, DeviceHub, Https, Extension, Settings, Person} from '@material-ui/icons'\nimport { Link } from \"react-router-dom\"\n\nclass Sidebar extends React.Component {\n\n    render() {\n        if(this.props.isMobile) {\n            return null\n        }\n        return (\n            <Drawer variant=\"persistent\" anchor=\"left\" open={true} style={{ width: 240 }} >\n                <div style={{ width: 240, display:'flex', justifyContent:'space-between' }}>\n                    <List>\n                        <div style={{display:'flex', justifyContent:'flex-start', padding: 5, alignContent:'center', alignSelf:'center', alignItems:'center'}}>\n                        <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '7vh', width: '7vh', borderRadius: 7, marginLeft: 15 }} />\n                        <div>\n                        <Typography variant='h5' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 15, paddingLeft: 10 }}>\n                            Intendant\n                        </Typography>\n                        <Typography variant='subtitle1' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 0, paddingBottom: 15, paddingLeft: 10 }}>\n                            Administration\n                        </Typography>\n                        </div>  \n                            </div>\n                    \n                        <Divider />\n                        <Link to=\"/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"smartobject\"}>\n                                <ListItemIcon>\n                                    <DevicesOther />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Smartobject\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/module\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"module\"}>\n                                <ListItemIcon>\n                                    <Category />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Module\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/widget\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"widget\"} >\n                                <ListItemIcon>\n                                    <Extension />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Widget\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/process\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"process\"} >\n                                <ListItemIcon>\n                                    <DeviceHub />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Process\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/routine\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"configuration\"} >\n                                <ListItemIcon>\n                                    <AccountTree />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Routine\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/user\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"user\"} >\n                                <ListItemIcon>\n                                    <Person />\n                                </ListItemIcon>\n                                <ListItemText primary={\"User\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/market\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"market\"} >\n                                <ListItemIcon>\n                                    <ShoppingCart />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Market\"} />\n                            </ListItem>\n                        </Link>\n                        <Divider />\n                        <ListItem button key={\"disconnect\"} onClick={() => {this.props.onDisconnect()}} >\n                            <ListItemIcon>\n                                <ExitToApp />\n                            </ListItemIcon>\n                            <ListItemText primary={\"Disconnect\"} />\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n        )\n    }\n\n}\n\nexport default Sidebar","import React from 'react'\nimport SmartObject from './contents/SmartObject/List'\nimport DetailSmartObject from './contents/SmartObject/Detail'\nimport NewSmartObject from './contents/SmartObject/New'\nimport ListProcess from './contents/Process/List'\nimport NewProcess from './contents/Process/New'\nimport DetailProcess from './contents/Process/Detail'\nimport Routine from './contents/Routine/List'\nimport NewRoutine from './contents/Routine/New'\nimport DetailRoutine from './contents/Routine/Detail'\nimport Module from './contents/Module/List'\nimport DetailModule from './contents/Module/Detail'\nimport Configuration from './contents/Configuration/List'\nimport Market from './contents/Market/List'\nimport Widget from './contents/Widget/List'\nimport NewWidget from './contents/Widget/New'\nimport DetailWidget from './contents/Widget/Detail'\nimport User from './contents/User/List'\nimport NewUser from './contents/User/New'\nimport NewPassword from './contents/User/NewPassword'\nimport Sidebar from '../components/Sidebar'\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isMobile: false\n        }\n    }\n\n    componentDidMount() {\n        this.mediaQueries('(max-width: 900px)')\n    }\n\n    mediaQueries(query) {\n        let mediaMatch = window.matchMedia(query);\n        this.setState({ isMobile: mediaMatch.matches })\n        const handler = e => this.setState({ isMobile: e.matches })\n        mediaMatch.addListener(handler)\n    }\n\n    render() {\n        return (\n            <Router basename='/admin'>\n                <Sidebar isMobile={this.state.isMobile} onDisconnect={() => { this.props.onDisconnect() }} />\n                <main style={{ padding: 20, width: this.state.isMobile ? '95vw' :  '80vw', height: '100vh' }} >\n                    <div style={{ marginLeft: this.state.isMobile ? 0 : 240, marginTop: this.state.isMobile ? 0 : 32 }}>\n                        <Switch>\n                            <Route exact path=\"/smartobject\" component={SmartObject} />\n                            <Route exact path=\"/smartobject/new\" component={NewSmartObject} />\n                            <Route exact path=\"/smartobject/:id\" component={DetailSmartObject} />\n                            <Route exact path=\"/module\" component={Module} />\n                            <Route exact path=\"/module/:id\" component={DetailModule} />\n                            <Route exact path=\"/routine\" component={Routine} />\n                            <Route exact path=\"/routine/new\" component={NewRoutine} />\n                            <Route exact path=\"/routine/:id\" component={DetailRoutine} />\n                            <Route exact path=\"/widget\" component={Widget} />\n                            <Route exact path=\"/widget/new\" component={NewWidget} />\n                            <Route exact path=\"/widget/authorization\" component={Widget} />\n                            <Route exact path=\"/widget/:id\" component={DetailWidget} />\n                            <Route exact path=\"/process\" component={ListProcess} />\n                            <Route exact path=\"/process/new\" component={NewProcess} />\n                            <Route exact path=\"/process/:id\" component={DetailProcess} />\n                            <Route exact path=\"/user\" component={User} />\n                            <Route exact path=\"/user/new\" component={NewUser} />\n                            <Route exact path=\"/user/:id/password\" component={NewPassword} />\n                            <Route exact path=\"/configuration\" component={Configuration} />\n                            <Route exact path=\"/market\" component={Market} />\n                        </Switch>\n                    </div>\n                </main>\n            </Router>\n        )\n    }\n}\n\nexport default Main","import React from 'react'\nimport Package from '../../package.json'\nimport { Paper, TextField, Button, Typography } from '@material-ui/core'\nimport Alert from '../components/Alert'\nimport Main from './Main'\nimport Request from '../utils/Request'\n\nclass GetStarted extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            authentification: true,\n            enabled: false,\n            message: \"\",\n            password: \"\",\n            confirmePassword: \"\",\n            login: \"admin\",\n            isMobile: false\n        }\n    }\n\n    componentDidMount() {\n        this.mediaQueries('(max-width: 900px)')\n    }\n    \n    mediaQueries(query) {\n        let mediaMatch = window.matchMedia(query);\n        this.setState({ isMobile: mediaMatch.matches })\n        const handler = e => this.setState({ isMobile: e.matches })\n        mediaMatch.addListener(handler)\n    }\n\n\n    async register() {\n        if (this.state.password == this.state.confirmePassword) {\n            let result = await new Request().put({ password: this.state.password }).fetch(\"/api/getstarted\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.onFinish()\n            }\n        } else {\n            this.setState({ enabled: true, message: 'Password and password confirmation is not the same' })\n        }\n    }\n\n\n    render() {\n        return (\n            <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '30vw', textAlign: 'center' }}>\n                <div >\n                    <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7 }} />\n                    <div style={{ fontSize: 70, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\n                        Intendant\n                    </div>\n                    <div style={{ fontSize: 14, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 30 }}>\n                        At the first launch, you must set the admin password\n                    </div>\n                </div>\n                <div noValidate autoComplete=\"off\" style={{ marginBottom: 10}}>\n                    <div style={{ marginTop: 10 }}>\n                        <TextField value={this.state.password} fullWidth label=\"Password\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\n                    </div>\n                    <div style={{ marginTop: 10 }}>\n                        <TextField value={this.state.confirmePassword} fullWidth label=\"Confirmation\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ confirmePassword: event.nativeEvent.target.value }) }} />\n                    </div>\n                    <div style={{  marginTop: 15, textAlign: 'end' }}>\n                        <Button variant='plain' onClick={() => { this.register() }}  >\n                            Let's get started\n                        </Button>\n                    </div>\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </Paper>\n        )\n    }\n\n}\n\nexport default GetStarted;\n","import React from 'react'\nimport Package from '../../package.json'\nimport { Paper, TextField, Button, Typography, Switch, IconButton } from '@material-ui/core'\nimport Alert from '../components/Alert'\nimport Main from './Main'\nimport GetStarted from './GetStarted'\nimport Request from '../utils/Request'\nimport { Settings } from '@material-ui/icons'\n\nclass Authentification extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            authentification: true,\n            enabled: false,\n            getStarted: false,\n            message: \"\",\n            password: \"\",\n            customAddress: false,\n            address: window.location.origin,\n            login: \"admin\",\n            isMobile: false\n        }\n    }\n\n\n    mediaQueries(query) {\n        let mediaMatch = window.matchMedia(query);\n        this.setState({ isMobile: mediaMatch.matches })\n        const handler = e => this.setState({ isMobile: e.matches })\n        mediaMatch.addListener(handler)\n    }\n\n    componentDidMount() {\n        let service = localStorage.getItem(\"server\")\n        if (service) {\n            this.setState({ address: service.replace(\"http://\", \"\") })\n        }\n        this.mediaQueries('(max-width: 900px)')\n    }\n\n    async login() {\n        if (await this.checkServer()) {\n            let result = await new Request().post({ login: this.state.login, password: this.state.password }).fetch(\"/api/authentification\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                localStorage.setItem(\"authorization\", result.token)\n                this.setState({ enabled: false, message: \"\", authentification: false })\n            }\n        }\n    }\n\n    disconnect() {\n        localStorage.removeItem(\"authorization\")\n        this.setState({ authentification: true, password: \"\" })\n    }\n\n    async checkServer() {\n        let ok = true\n        let protocol = window.location.protocol + \"//\"\n        if(this.state.address.split(\"://\").length > 1) {\n            protocol = \"\"\n        }\n        try {\n            let result = await fetch(protocol + this.state.address + \"/api/ping\", {}, 2000)\n            let resultJSON = await result.json()\n            if (resultJSON.message != \"pong\") {\n                this.setState({ enabled: true, message: 'Connection to server failed' })\n                ok = false\n            } else {\n                localStorage.setItem(\"server\",protocol + this.state.address)\n                if (resultJSON.getStarted) {\n                    this.setState({ getStarted: true })\n                    return false\n                }\n            }\n        } catch (error) {\n            this.setState({ enabled: true, message: 'Connection to server failed' })\n            ok = false\n        }\n        return ok\n    }\n\n    render() {\n        if (this.state.getStarted) {\n            return (\n                <GetStarted onFinish={() => { this.setState({ getStarted: false }) }} />\n            )\n        } else {\n            if (this.state.authentification) {\n                return (\n                    <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '25vw', textAlign: 'center' }}>\n                        <div>\n                            <div style={{ marginBottom: 50 }}>\n                                <img  onClick={() => {this.setState({customAddress: !this.state.customAddress}) }}  src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7, cursor: 'pointer' }} />\n                                <div style={{ fontSize: 55, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\n                                    Intendant\n                                </div>\n                                <div style={{ fontSize: 20, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 15 }}>\n                                    Administration\n                                </div>\n                            </div>\n                            <form noValidate onSubmit={(e) => { e.preventDefault(); this.login() }} autoComplete=\"off\" style={{ marginBottom: 10 }}>\n                                {\n                                    this.state.customAddress ?\n                                        <div style={{ padding: 5 }}>\n                                            <TextField value={this.state.address} fullWidth label=\"Server address\" autoFocus onChange={(event) => { this.setState({ address: event.nativeEvent.target.value }) }} />\n                                        </div>\n                                        :\n                                        null\n                                }\n\n                                <div style={{ padding: 5 }}>\n                                    <TextField value={this.state.login} fullWidth label=\"Login\" autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ login: event.nativeEvent.target.value }) }} />\n                                </div>\n                                <div style={{ padding: 5 }}>\n                                    <TextField value={this.state.password} fullWidth label=\"Password\" type='password' autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\n                                </div>\n                                <div style={{ padding: 5, marginTop: 5, textAlign: 'end' }}>\n                                    <Button type='submit' variant='plain' on onSubmit={() => { this.login() }} onClick={() => { this.login() }}  >\n                                        Connection\n                                    </Button>\n                                </div>\n                            </form>\n                        </div>\n                        <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                            {this.state.message}\n                        </Alert>\n                    </Paper>\n                )\n            } else {\n                return (\n                    <Main onDisconnect={() => { this.disconnect() }} />\n                )\n            }\n        }\n    }\n\n}\n\nexport default Authentification;\n","import Authentification from './screens/Authentification'\nimport Theme from './Theme'\nimport { ThemeProvider, CssBaseline, Box } from '@material-ui/core'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={Theme} >\n      <CssBaseline />\n      <Box style={{ userSelect: 'none', outline: 'none', WebkitTapHighlightColor: 'rgba(41,108,71,0.33)', height: '100vh', width: '100wh', backgroundColor: Theme.palette.background.default, display: 'flex', flexDirection: 'column', alignSelf: 'center', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\n        <Authentification />\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}