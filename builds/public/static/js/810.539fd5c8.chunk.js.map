{"version":3,"file":"static/js/810.539fd5c8.chunk.js","mappings":"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","sources":["components/views/AddButton.js","components/WidgetItem.js","screens/contents/Widget/List.js"],"sourcesContent":["import React from 'react'\r\nimport { Card, IconButton } from '@mui/material'\r\nimport { Add } from '@mui/icons-material'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction AddButton(props) {\r\n    return (\r\n        <Card variant='outlined' style={{ width: 'min-content', marginTop: 8, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n            <Link to={props.to}>\r\n                <IconButton style={{borderRadius: 0 }} >\r\n                    <Add  />\r\n                </IconButton>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default AddButton","import React from 'react'\r\nimport Action from './Action'\r\n\r\n\r\nimport { Grid, Card, CardActionArea, CardContent, Badge, Collapse, IconButton, Typography, Button, Paper, Divider, CardHeader, CardActions } from '@mui/material'\r\nimport { ExpandLess, Delete } from '@mui/icons-material'\r\nimport WidgetSkeleton from './WidgetSkeleton'\r\n\r\nclass WidgetItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            widget: this.props.widget,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.widget != this.state.widget) {\r\n            this.setState({\r\n                widget: this.props.widget\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <WidgetSkeleton />\r\n        }\r\n        return (\r\n            <Grid key={this.props.index} item xs={12} md={6} lg={4}>\r\n                <Card variant='outlined'   >\r\n                    <CardActionArea onClick={() => { this.props.onSelect() }}>\r\n                        <CardContent>\r\n                            {\r\n                                this.state.widget.values.filter(value => value.type == \"title\").map((value, ppIndex) => {\r\n                                    return (\r\n                                        <Typography key={ppIndex} variant='subtitle1' component='div'>\r\n                                           {String.capitalizeFirstLetter(value.value)}\r\n                                        </Typography>\r\n                                    )\r\n                                })\r\n                            }\r\n                            {\r\n                                this.state.widget.values.filter(value => value.type == \"text\").length > 0 &&\r\n                                <Divider style={{ marginBottom: 10, marginTop: 5 }} />\r\n                            }\r\n                            {\r\n                                this.state.widget.values.filter(value => value.type == \"text\").map((value, ppIndex) => {\r\n                                    return (\r\n                                        <Typography key={ppIndex} variant='body2' color={value.style && value.style.color  ? this.state.widget.dataSources[value.style.color] : \"text.secondary\"}>\r\n                                            {String.capitalizeFirstLetter(value.value)}\r\n                                        </Typography>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <Collapse in={this.props.open} timeout=\"auto\" unmountOnExit>\r\n                        <CardActions>\r\n                            <IconButton size='small' onClick={() => { this.props.onDelete() }}>\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </CardActions>\r\n                    </Collapse>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WidgetItem","import React from 'react'\r\nimport { Typography, Paper, Grid, Card } from '@mui/material'\r\nimport Request from '../../../utils/Request'\r\n\r\nimport WidgetItem from '../../../components/WidgetItem'\r\nimport AddButton from '../../../components/views/AddButton'\r\nimport Loading from '../../../components/Loading'\r\nimport Desktop from '../../../components/Desktop'\r\n\r\nclass Widget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            widgets: [],\r\n            open: false,\r\n            widget: {\r\n                id: -1\r\n            }\r\n        }\r\n        props.setTitle(\"Widget\")\r\n        props.setActionType(\"list\")\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/widgets\")\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n        } else {\r\n            this.setState({ loading: false, widgets: result.data })\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        let result = await new Request().delete({}).fetch(\"/api/widgets/\" + this.state.widget.id)\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n        } else {\r\n            this.setState({ loading: true, anchorEl: null, popover: false }, () => { this.componentDidMount() })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Desktop isMobile={this.props.isMobile}>\r\n                    <Paper variant=\"outlined\" style={{ padding: 12, justifyContent: 'left' }}>\r\n                        <Typography variant='h6' fontWeight='bold' >Widget</Typography>\r\n                        <Typography variant='subtitle2' color=\"text.secondary\" >Show what you need</Typography>\r\n                    </Paper>\r\n                </Desktop>\r\n                <Loading loading={this.state.loading}>\r\n                    <Grid container spacing={1} style={{ marginTop: 0 }}>\r\n                        {\r\n                            this.state.widgets.length == 0 ?\r\n                                <Grid item xs={12} md={12} lg={12}>\r\n                                    <Card variant='outlined' style={{ padding: 12 }}  >\r\n                                        <Typography variant='subtitle1' color=\"text.secondary\" >You have not added a widget</Typography>\r\n                                    </Card>\r\n                                </Grid>\r\n                                :\r\n                                this.state.widgets.map((widget, index) => (\r\n                                    <WidgetItem\r\n                                        key={index}\r\n                                        index={index}\r\n                                        onDelete={() => { this.delete() }}\r\n                                        onSelect={() => { this.setState({ widget: widget, open: true }) }}\r\n                                        open={this.state.open && this.state.widget.id == widget.id}\r\n                                        widget={widget}\r\n                                    />\r\n                                ))\r\n                        }\r\n                    </Grid>\r\n                    <AddButton to=\"/widget/new\" />\r\n                </Loading>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Widget"],"names":["props","variant","style","width","marginTop","alignContent","justifyContent","alignSelf","to","borderRadius","WidgetItem","state","widget","loading","this","setState","WidgetSkeleton","Grid","item","xs","md","lg","Card","CardActionArea","onClick","onSelect","CardContent","values","filter","value","type","map","ppIndex","Typography","component","String","capitalizeFirstLetter","length","Divider","marginBottom","color","dataSources","Collapse","in","open","timeout","unmountOnExit","CardActions","IconButton","size","onDelete","Delete","index","React","Widget","widgets","id","setTitle","setActionType","Request","get","fetch","result","error","setMessage","package","message","data","delete","anchorEl","popover","componentDidMount","Desktop","isMobile","Paper","padding","fontWeight","Loading","container","spacing","AddButton"],"sourceRoot":""}