{"version":3,"sources":["components/Alert.js","utils/Request.js","screens/contents/SmartObject/List.js","components/WeekSchedul.js","Theme.js","components/Action.js","screens/contents/SmartObject/Detail.js","screens/contents/SmartObject/New.js","screens/contents/Process/List.js","utils/Source.js","components/IconList.js","screens/contents/Process/New.js","screens/contents/Process/Detail.js","screens/contents/Routine/List.js","screens/contents/Routine/New.js","screens/contents/Routine/Detail.js","screens/contents/Module/List.js","screens/contents/Module/Detail.js","screens/contents/Configuration/List.js","screens/contents/Market/List.js","screens/contents/Widget/List.js","screens/contents/Widget/New.js","screens/contents/Widget/Detail.js","screens/contents/User/List.js","screens/contents/User/New.js","screens/contents/QrCode/QrCode.js","screens/contents/User/NewPassword.js","components/Sidebar.js","screens/contents/Localisation/List.js","screens/contents/Localisation/New.js","screens/contents/Localisation/Detail.js","screens/contents/Authorisation/List.js","screens/Main.js","screens/GetStarted.js","screens/Authentification.js","App.js","index.js"],"names":["Alert","props","Snackbar","open","autoHideDuration","onClose","severity","elevation","variant","Request","this","method","data","url","a","authorization","localStorage","getItem","server","fetch","headers","body","JSON","stringify","result","json","error","message","package","Package","name","Smartobject","state","page","enabled","smartobjects","get","setState","loading","Paper","style","display","padding","alignContent","justifyContent","alignItems","alignSelf","Typography","fontSize","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","slice","map","smartobject","to","id","textDecoration","color","hover","cursor","reference","height","width","filter","src","process","status","icon","string","localisation","charAt","toUpperCase","Moment","lastUse","format","flexDirection","marginTop","marginBottom","textAlign","IconButton","borderRadius","Add","TablePagination","count","length","rowsPerPage","rowsPerPageOptions","onChangePage","event","React","Component","Week","value","sunday","monday","tuesday","wednesday","friday","saturday","time","timeSplit","split","thursday","onChange","paddingTop","paddingBottom","paddingLeft","paddingRight","flex","noChangeMode","size","onClick","onChangeMode","Cached","marginRight","marginLeft","Button","fullWidth","calculate","TextField","defaultValue","currentTarget","placeholder","responsiveFontSizes","createMuiTheme","palette","type","primary","main","Colors","secondary","typography","fontFamily","shape","position","top","left","transform","backgroundColor","Theme","background","paper","Action","action","modal","default","tmp","minWidth","updateAction","Modal","Fade","in","WeekSchedul","FormControl","InputLabel","Select","target","label","values","MenuItem","styles","colors","triangle","onChangeComplete","hex","borderWidth","borderStyle","borderColor","Slider","valueLabelDisplay","orientation","min","max","step","Checkbox","defaultChecked","DetailSmartObject","match","params","profiles","localisations","referenceArguments","valueArguments","executeInformation","resultProfile","resultLocalisation","resultSmartobject","history","push","delete","settings","index","argument","undefined","post","componentDidMount","pArguments","profile","idProfile","idLocalisation","forEach","pLocalisation","updateLocalisation","module","Divider","arguments","pArgument","navigator","clipboard","writeText","margin","FileCopy","deleteSmartobjectArguments","Delete","nativeEvent","insertSmartobjectArguments","actions","maxWidth","disabled","executeAction","gridRowGap","gridTemplateColumns","setting","bind","Close","parse","setLocalisation","pprofile","ListItem","FormControlLabel","control","Switch","checked","deleteProfile","insertProfile","NewSmartobject","types","resultType","pModule","key","setModule","updateSettings","add","Save","Process","processs","_process","description","espace","Source","query","resultModule","resultProcess","resultEssentials","sources","includes","essentials","pEssential","mode","inputs","input","name_enable","name_disable","IconList","icons","resultJSON","Grid","container","spacing","item","xs","search","onSelect","New","popup","espaces","inputReference","inputName","inputType","inputMode","isChecked","source","arrSources","getSource","resultSource","resultEspace","fSource","fAction","enable","nameEnable","nameDisable","modeArgument","pIndex","InputProps","endAdornment","InputAdornment","Popover","anchorOrigin","vertical","horizontal","transformOrigin","setInput","removeModeArgument","removeSource","setSource","setAction","confirmationModule","set","NewProcess","referenceInput","nameInput","typeInput","modeInput","console","log","idsource","referenceSettings","valueSettings","startIcon","Autorenew","deleteProcessInput","insertProcessInput","object","Check","deleteSource","addSource","Routine","routines","put","routine","updateStatus","success","PlayArrow","Pause","Edit","duplicate","NewRoutine","modalTrigger","modalEffect","watch","triggers","effects","statement","expected","trigger","effect","toString","updateName","updateIcon","updateWatch","Card","textTransform","removeTrigger","reset","removeEffect","save","addTrigger","addEffect","Module","modules","pmodule","md5","Detail","hashId","_module","Configuration","pageSmartobject","pageModule","Store","DevicesOther","Category","markets","pageMarket","pPackage","resultPing","resultMarket","market","currentVersion","version","uninstall","GetApp","upgrade","install","disableElevation","Widget","widgets","widget","contents","sort","b","rank","content","_content","fontWeight","NewWidget","image","contentSources","widgetReference","resultConfiguration","find","contentSource","tmpsettings","pindex","multiline","deleteContent","insertSource","setType","insertContent","needSave","pContent","native","onBlur","update","setContent","users","user","login","updateProfile","btoa","window","location","origin","Settings","password","confirmationPassword","QrCode","includeMargin","NewPassword","changePassword","Sidebar","isMobile","Drawer","anchor","button","ListItemIcon","ListItemText","House","Extension","DeviceHub","AccountTree","Person","ShoppingCart","onDisconnect","ExitToApp","Localisation","NewLocaliation","capitalizeFirstLetter","DetailLocalisation","Security","selectProfile","authorizations","onSelectProfile","warning","info","pAuthorization","secure","updateSecure","getColor","Main","mediaQueries","mediaMatch","matchMedia","matches","addListener","e","basename","exact","path","SmartObject","NewSmartObject","DetailModule","DetailRoutine","DetailWidget","ListProcess","DetailProcess","User","NewUser","Market","NewLocalisation","exect","Authorisation","GetStarted","authentification","confirmePassword","onFinish","lineHeight","noValidate","autoComplete","inputProps","maxLength","register","Authentification","getStarted","customAddress","address","service","replace","checkServer","setItem","token","removeItem","ok","protocol","onSubmit","preventDefault","autoFocus","on","disconnect","App","ThemeProvider","theme","CssBaseline","Box","userSelect","outline","WebkitTapHighlightColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c2284f6.chunk.js","sourcesContent":["import MuiAlert from '@material-ui/lab/Alert'\r\nimport { Snackbar } from '@material-ui/core'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <Snackbar open={props.open} autoHideDuration={6000} onClose={() => props.onClose()}>\r\n            <MuiAlert severity={props.severity} elevation={6} variant=\"filled\" {...props} />\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default Alert","import Package from '../../package.json'\r\nclass Request {\r\n\r\n    constructor() {\r\n        this.method = 'GET'\r\n    }\r\n\r\n    post(data) {\r\n        this.method = 'POST'\r\n        this.data = data\r\n        return this\r\n    }\r\n\r\n    get() {\r\n        this.method = 'GET'\r\n        return this\r\n    }\r\n\r\n    delete() {\r\n        this.method = 'DELETE'\r\n        return this\r\n    }\r\n\r\n    put(data) {\r\n        this.method = 'PUT'\r\n        this.data = data\r\n        return this\r\n    }\r\n\r\n    async fetch(url) {\r\n        let authorization = localStorage.getItem(\"authorization\")\r\n        let server = localStorage.getItem(\"server\")\r\n        try {\r\n            let result = await fetch(server + url, {\r\n                method: this.method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + authorization\r\n                },\r\n                body: this.method == 'POST' || this.method == 'PUT' ? JSON.stringify(this.data) : null\r\n            })\r\n            return await result.json()\r\n        } catch (error) {\r\n            return {\r\n                error: true,\r\n                message: \"An error has occurred\", \r\n                package: Package.name\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Request","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'moment'\r\nimport { Add } from '@mui/icons-material'\r\nimport { Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton  } from '@material-ui/core'\r\nimport Icon from '../../../utils/Icon'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Smartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            smartobjects: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n            let result = await new Request().get().fetch(\"/api/smartobjects\")\r\n            if (result.error) {\r\n                this.setState({\r\n                    enabled: true,\r\n                    message: result.package + \" : \" + result.message\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    smartobjects: result.data\r\n                })\r\n            }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <div>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='body1'>\r\n                                                    Reference\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Typography variant='body1'>\r\n                                                    Status\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Typography variant='body1'>\r\n                                                    Localisation\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Typography variant='body1'>\r\n                                                    Last use\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.smartobjects.slice(this.state.page * 10, (this.state.page + 1) * 10).map((smartobject) => (\r\n                                            <Link to={\"/smartobject/\" + smartobject.id} style={{ textDecoration: 'none', color: 'white', display:'contents' }}>\r\n                                                <TableRow hover key={smartobject.name} style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {smartobject.reference}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography variant='body1'>\r\n                                                            <img style={{ height: 25, width: 25, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + smartobject.status.icon + \".svg\"} />\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {capitalizeFirstLetter(smartobject.localisation.name)}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {Moment(smartobject.lastUse).format(\"hh:mm DD/MM\") }\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </Link>\r\n\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                                    <Link to=\"/smartobject/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.smartobjects.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport default Smartobject","import React from 'react'\r\nimport { TextField, Button, IconButton } from '@material-ui/core'\r\nimport { Save, Cached } from '@mui/icons-material'\r\n\r\nclass Week extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: \"\",\r\n            sunday: false,\r\n            monday: false,\r\n            tuesday: false,\r\n            wednesday: false,\r\n            friday: false,\r\n            saturday: false,\r\n            time: \"00:00\"\r\n        }\r\n    }\r\n\r\n    calculate() {\r\n        let timeSplit = this.state.time.split(\":\")\r\n        if(timeSplit.length != 2) { return }\r\n        let value =  timeSplit[1] + ' ' +  timeSplit[0]  + ' * * ' +  \r\n            (this.state.sunday ? \"0,\" : \"\") +\r\n            (this.state.monday ? \"1,\" : \"\") +\r\n            (this.state.tuesday ? \"2,\" : \"\") +\r\n            (this.state.wednesday ? \"3,\" : \"\") +\r\n            (this.state.thursday ? \"4,\" : \"\") +\r\n            (this.state.friday ? \"5,\" : \"\") +\r\n            (this.state.saturday ? \"6,\" : \"\")\r\n\r\n        value = value.slice(0,value.length - 1 )\r\n        this.props.onChange(value)\r\n    }\r\n\r\n    render() {\r\n        return (<div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, paddingLeft: 5, paddingRight: 5, flexDirection: 'column' }}>\r\n            <div style={{ display: 'flex', flexDirection: 'row', alignContent: 'center', alignItems: 'center', flex: 1, justifyContent: 'space-between' }}>\r\n                {\r\n                    this.props.noChangeMode ? null : \r\n                    <div style={{ flex: 1 }}>\r\n                        <IconButton size='small' onClick={() => { this.props.onChangeMode() }} variant='outlined'>\r\n                            <Cached />\r\n                        </IconButton>\r\n                    </div>\r\n                }\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button fullWidth size='small' variant={this.state.sunday ? 'contained' : 'outlined'} onClick={() => {this.setState({sunday: !this.state.sunday},() => {this.calculate()})}}  >{\"Sunday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button fullWidth size='small' variant={this.state.monday ? 'contained' : 'outlined'} onClick={() => {this.setState({monday: !this.state.monday},() => {this.calculate()})}} >{\"Monday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button fullWidth size='small' variant={this.state.tuesday ? 'contained' : 'outlined'} onClick={() => {this.setState({tuesday: !this.state.tuesday},() => {this.calculate()})}} >{\"Tuesday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button fullWidth size='small' variant={this.state.wednesday ? 'contained' : 'outlined'} onClick={() => {this.setState({wednesday: !this.state.wednesday},() => {this.calculate()})}} >{\"Wednesday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button fullWidth size='small' variant={this.state.thursday ? 'contained' : 'outlined'} onClick={() => {this.setState({thursday: !this.state.thursday},() => {this.calculate()})}} >{\"Thursday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button fullWidth size='small' variant={this.state.friday ? 'contained' : 'outlined'} onClick={() => {this.setState({friday: !this.state.friday},() => {this.calculate()})}} >{\"Friday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\r\n                    <Button fullWidth size='small' variant={this.state.saturday ? 'contained' : 'outlined'} onClick={() => {this.setState({saturday: !this.state.saturday},() => {this.calculate()})}} >{\"Saturday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }} >\r\n                    <TextField  defaultValue='00:00'  size='small' value={this.state.time}  onChange={(event) => { this.setState({ time: event.currentTarget.value },() => {this.calculate()}) }}  placeholder='hh:mm' variant='outlined' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Week","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\r\nimport * as Colors from '@material-ui/core/colors'\r\n\r\nexport default responsiveFontSizes(createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: Colors.pink[600],\r\n    },\r\n    secondary: {\r\n      main: Colors.lightBlue[500],\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    \"fontWeightLight\": 400,\r\n    \"fontWeightRegular\": 500,\r\n    \"fontWeightMedium\": 600\r\n  },\r\n  shape: {\r\n    borderRadius: 4\r\n  }\r\n}))","import React from 'react'\r\nimport { TextField, Button, Checkbox, Fade, Paper, Typography, Modal, Slider, FormControl, Select, MenuItem, InputLabel } from '@material-ui/core'\r\nimport { TwitterPicker } from 'react-color'\r\nimport WeekSchedul from './WeekSchedul'\r\nimport Theme from '../Theme'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass Action extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            action: this.props.action,\r\n            setState: this.props.setState,\r\n            modal: false,\r\n            value: this.props.action.default\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"argument-\" + action.id] = value\r\n        this.state.setState(tmp)\r\n        this.setState({\r\n            value: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        switch (this.state.action.type) {\r\n            case 'text':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\r\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id == \"default\" ? \"\" : this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\r\n                    </div>\r\n                )\r\n            case 'cron':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, width: '200px' }} >\r\n                        <Modal open={this.state.modal} onClose={() => { this.setState({ modal: false }) }} >\r\n                            <Fade in={this.state.modal} >\r\n                                <Paper style={style}>\r\n                                    <WeekSchedul noChangeMode onChange={(value) => { this.updateAction(this.state.action, value); this.setState({ value: value }) }} onChangeMode={() => { }} />\r\n                                </Paper>\r\n                            </Fade>\r\n                        </Modal>\r\n                        <Button variant='outlined' style={{ flexDirection: 'column', width: '200px' }} size='large' onClick={() => { this.setState({ modal: true }) }}>\r\n                            <Typography style={{ fontSize: this.state.value.length > 0 ? 12 : 14, padding: 8, color: this.state.value.length > 0 ? 'white' : 'rgba(255, 255, 255, 0.6)' }}>\r\n                                {this.state.value.length == 0 ? this.state.action.id == \"default\" ? \"\" : this.state.action.id : this.state.value}\r\n                            </Typography>\r\n                        </Button>\r\n                    </div>\r\n                )\r\n            case 'number':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\r\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\r\n                    </div>\r\n                )\r\n            case 'select':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10 }} >\r\n                        <FormControl variant=\"outlined\" style={{ width: '150px' }} >\r\n                            {\r\n                                this.state.action.id == \"default\" ? null :\r\n                                    <InputLabel>{this.state.action.id}</InputLabel>\r\n                            }\r\n                            <Select onChange={(event) => { this.updateAction(this.state.action, event.target.value) }} label={this.state.action.id == \"default\" ? null : this.state.action.id} >\r\n                                {\r\n                                    this.state.action.values.map(value => {\r\n                                        return <MenuItem value={value} >{value}</MenuItem>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                )\r\n            case 'colorpicker':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'flex-start', display: 'flex', padding: 10, marginRight: 5, flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row' }} >\r\n                        <TwitterPicker\r\n                            styles={{ padding: 0 }}\r\n                            colors={['#d00a0a', '#FF6900', '#FCB900', '#F9DE79' ,  '#F78DA7', '#9900EF' , '#0e60f4',  '#8ED1FC', '#11f4b8', '#53b909']}\r\n                            triangle='hide'\r\n                            color={this.state.value}\r\n                            onChangeComplete={(color) => { this.updateAction(this.state.action, color.hex) }}\r\n                        />\r\n                    </div>\r\n                )\r\n            case 'slider':\r\n                return (\r\n                    <div elevation={3} style={{ minWidth: 100, height: \"fit-content\", alignSelf: 'flex-start', borderWidth: 1, borderStyle: 'solid', borderRadius: 5, borderColor: 'rgba(255, 255, 255, 0.23)', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15, marginRight: 10 }} >\r\n                        {\r\n                            this.state.action.id == \"default\" ? null :\r\n                                <>\r\n                                    <Typography variant='body1' style={{ textAlign: 'center', color: 'rgba(255, 255, 255, 0.5)', padding: 0 }} >\r\n                                        {this.state.action.id}\r\n                                    </Typography>\r\n                                    <div style={{ marginBottom: 2, marginTop: 2 }} />\r\n                                </>\r\n                        }\r\n                        <Slider\r\n                            defaultValue={0}\r\n                            valueLabelDisplay=\"auto\"\r\n                            orientation={this.props.orientation ? this.props.orientation : 'horizontal'}\r\n                            min={this.state.action.min}\r\n                            max={this.state.action.max}\r\n                            step={this.state.action.step}\r\n                            onChange={(event, value) => { this.updateAction(this.state.action, value) }}\r\n                        />\r\n                    </div>\r\n                )\r\n            case 'checkbox':\r\n                return (\r\n                    <div elevation={3} style={{ height: \"fit-content\", alignSelf: 'center', borderWidth: 1, borderStyle: 'solid', borderRadius: 5, borderColor: 'rgba(255, 255, 255, 0.23)', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15, marginRight: 10 }} >\r\n                        {\r\n                            this.state.action.id == \"default\" ? null :\r\n                                <Typography variant='body1' style={{ textAlign: 'center', color: 'rgba(255, 255, 255, 0.5)', padding: 0 }}>\r\n                                    {this.state.action.id}\r\n                                </Typography>\r\n                        }\r\n                        <Checkbox defaultChecked={this.state.action.default} color='primary' onChange={(event, value) => { this.updateAction(this.state.action, value) }} />\r\n                    </div>\r\n                )\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Action","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\nimport { Paper, Typography, TableContainer,FormControl,InputLabel,Select,MenuItem, TableBody, Divider, ListItem, TableCell, TableRow, Button, TextField, FormControlLabel, IconButton, Switch } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { FileCopy, Delete, Close, Add } from '@mui/icons-material'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass DetailSmartObject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            smartobject: null,\r\n            profiles: [],\r\n            localisations: [],\r\n            enabled: false,\r\n            loading: null,\r\n            message: \"\",\r\n            referenceArguments: \"\",\r\n            valueArguments: \"\",\r\n            executeInformation: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let resultLocalisation = await new Request().get().fetch(\"/api/localisations\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects/\" + this.state.id)\r\n        if (resultProfile.error || resultSmartobject.error || resultLocalisation.error) {\r\n            this.props.history.push('/smartobject')\r\n        } else {\r\n            this.setState({ smartobject: resultSmartobject.data, profiles: resultProfile.data, localisations: resultLocalisation.data })\r\n        }\r\n        this.setState({ loading: null })\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/smartobject')\r\n        }\r\n    }\r\n\r\n    async executeAction(action, settings) {\r\n        this.setState({loading: action})\r\n        let tmp = {}\r\n        for (let index = 0; index < settings.length; index++) {\r\n            let argument = settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmp[argument.id] = value\r\n        }\r\n        let result = await new Request().post({ settings: tmp }).fetch(\"/api/smartobjects/\" + this.state.id + \"/actions/\" + action)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message, loading: null })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({ executeInformation: JSON.stringify(result.data) })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteSmartobjectArguments(pArguments) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + pArguments.smartobject + \"/arguments/\" + pArguments.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertSmartobjectArguments(id, reference, value) {\r\n        let result = await new Request().post({ reference: reference, value: value }).fetch(\"/api/smartobjects/\" + id + \"/arguments\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ referenceArguments: \"\", valueArguments: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProfile(smartobject, profile) {\r\n        let result = await new Request().post({idProfile: profile.id, }).fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(smartobject, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateLocalisation(smartobject,localisation) {\r\n        let result = await new Request().post({idLocalisation: localisation.id, }).fetch(\"/api/smartobjects/\" + smartobject.id + \"/localisation\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    \r\n    setLocalisation(id) {\r\n        this.state.localisations.forEach(pLocalisation => {\r\n            if (pLocalisation.id === id) {\r\n                this.state.smartobject.localisation = pLocalisation\r\n                this.updateLocalisation(this.state.smartobject,pLocalisation)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.smartobject) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                {this.state.smartobject.reference}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.smartobject.module}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Configuration\r\n                            </Typography>\r\n                            <div style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'row' }}>\r\n                                <TableContainer component={Paper} >\r\n                                    <TableBody>\r\n                                        {this.state.smartobject.arguments.map((pArgument) => (\r\n                                            <TableRow key={pArgument.id} >\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1'>\r\n                                                        {pArgument.reference}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ width: '70%' }}>\r\n                                                    <Typography variant='subtitle1'>\r\n                                                        {pArgument.value.slice(0, 50) + (pArgument.value.length > 50 ? \" (...)\" : \"\")}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\r\n                                                    <IconButton onClick={() => { navigator.clipboard.writeText(pArgument.value) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <FileCopy />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\r\n                                                    <IconButton onClick={() => { this.deleteSmartobjectArguments(pArgument) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        <TableRow key={\"-1\"} >\r\n                                            <TableCell align=\"left\">\r\n                                                <TextField value={this.state.referenceArguments} onChange={(event) => { this.setState({ referenceArguments: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\r\n                                                </TextField>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <TextField value={this.state.valueArguments} onChange={(event) => { this.setState({ valueArguments: event.nativeEvent.target.value }) }} placeholder='Value' style={{ width: '100%' }}>\r\n                                                </TextField>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{ padding: 4 }}>\r\n                                                <IconButton onClick={() => { this.insertSmartobjectArguments(this.state.smartobject.id, this.state.referenceArguments, this.state.valueArguments) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                {\"Action\"}\r\n                            </Typography>\r\n                            {\r\n                                this.state.smartobject.actions.map(action => {\r\n                                    return (\r\n                                        <Paper style={{ padding: 10, marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', width: '100%', maxWidth: '100%' }}>\r\n                                            <Button disabled={this.state.loading == action.id} onClick={() => { this.executeAction(action.id, action.settings) }} variant={this.state.loading == action.id ? 'contained' : 'outlined'} style={{ width: '250px', height: '100%' }} >\r\n                                                {action.name}\r\n                                            </Button>\r\n                                            \r\n                                            {\r\n                                                action.settings.length > 0 ?\r\n                                                    <div style={{ display: 'grid', gridRowGap:'10px', gridTemplateColumns: 'repeat(5,min-content)' , marginTop: 10, marginBottom: 10 }}>\r\n                                                        {\r\n                                                            action.settings.map(setting => {\r\n                                                                return <Action flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                            })\r\n                                                        }\r\n                                                    </div> : null\r\n                                            }\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Localisation\r\n                            </Typography>\r\n                            <div style={{ marginTop: 20, marginBottom: 10, display: 'flex', flexDirection: 'row' }}>\r\n                                <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px' }} >\r\n                                    <InputLabel>Localisation</InputLabel>\r\n                                    <Select value={this.state.smartobject.localisation.id} onChange={(event) => { this.setLocalisation(event.target.value) }} label=\"Connexion\" >\r\n                                        {\r\n                                            this.state.localisations.map(pLocalisation => {\r\n                                                return <MenuItem value={pLocalisation.id} >{pLocalisation.name}</MenuItem>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map(profile => {\r\n                                    let state = false\r\n                                    this.state.smartobject.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={\r\n                                                <Switch\r\n                                                    checked={state}\r\n                                                    onChange={() => { \r\n                                                        state ? this.deleteProfile(this.state.smartobject,profile) : this.insertProfile(this.state.smartobject,profile)\r\n                                                    }}\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            } label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        { this.state.message }\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default DetailSmartObject","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewSmartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            module: false,\r\n            localisation: false,\r\n            reference: \"\",\r\n            enabled: false,\r\n            message: \"\",\r\n            types: [],\r\n            smartobjects: [],\r\n            localisations: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultType = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        let resultLocalisation = await new Request().get().fetch(\"/api/localisations\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects\")\r\n        if (resultType.error || resultSmartobject.error || resultLocalisation.error) {\r\n            this.setState({ enabled: true, message: resultSmartobject.message + \" : \" + resultType.message + \" : \" + resultLocalisation.message})\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                types: resultType.data,\r\n                smartobjects: resultSmartobject.data,\r\n                localisations: resultLocalisation.data\r\n            })\r\n        }\r\n    }\r\n\r\n    setModule(name) {\r\n        this.state.types.forEach(pModule => {\r\n            if (pModule.name === name) {\r\n                this.setState({\r\n                    module: pModule\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    setLocalisation(id) {\r\n        this.state.localisations.forEach(pLocalisation => {\r\n            if (pLocalisation.id === id) {\r\n                this.setState({\r\n                    localisation: pLocalisation\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    updateSettings(key, value) {\r\n        let tmp = {}\r\n        tmp[\"settings-\" + key] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    async add() {\r\n        if (this.state.reference === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : reference is empty\" })\r\n        } else if (this.state.localisation === false) {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : localisation not selected\" })\r\n        } else if (this.state.module.name === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : type not selected\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.module.settings.length; index++) {\r\n                let setting = this.state.module.settings[index];\r\n                settings.push({\r\n                    reference: setting.id,\r\n                    value: this.state[\"settings-\" + setting.name] ? this.state[\"settings-\" + setting.name] : \"\"\r\n                })\r\n            }\r\n            let result = await new Request().post({localisation: this.state.localisation.id,  module: this.state.module.name, reference: this.state.reference, settings: settings }).fetch(\"/api/smartobjects\")\r\n            if (result.error) {\r\n                this.setState({\r\n                    enabled: true,\r\n                    message: result.package + \" : \" + result.message\r\n                })\r\n            } else {\r\n                this.props.history.push('/smartobject')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'row', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }} style={{ width: '150px', marginRight: 10 }} label=\"Reference\" variant=\"outlined\" />\r\n                            <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px' }} >\r\n                                <InputLabel>Module</InputLabel>\r\n                                <Select value={this.state.module.name} onChange={(event) => { this.setModule(event.target.value) }} label=\"Connexion\" >\r\n                                    {\r\n                                        this.state.types.map(pModule => {\r\n                                            return <MenuItem value={pModule.name} >{pModule.name}</MenuItem>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px' }} >\r\n                                <InputLabel>Localisation</InputLabel>\r\n                                <Select value={this.state.localisation.name} onChange={(event) => { this.setLocalisation(event.target.value) }} label=\"Connexion\" >\r\n                                    {\r\n                                        this.state.localisations.map(pLocalisation => {\r\n                                            return <MenuItem value={pLocalisation.id} >{pLocalisation.name}</MenuItem>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.module ?\r\n                            this.state.module.settings.length === 0 ?\r\n                                null\r\n                                :\r\n                                <div style={{ display: 'flex', flexDirection: 'column', padding: 10 }}>\r\n                                    <Typography variant='body1' style={{ fontSize: 20 }}>Configuration</Typography>\r\n                                    {\r\n                                        this.state.module.settings.map(settings => {\r\n                                            if (settings.type == \"smartobject\") {\r\n                                                return (\r\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 10, width: '300px' }} >\r\n                                                    <InputLabel>{settings.name}</InputLabel>\r\n                                                        <Select onChange={(event) => { this.updateSettings(settings.name, event.target.value) }}  >\r\n                                                            {\r\n                                                                this.state.smartobjects.filter(smartobject => {\r\n                                                                    return smartobject.module == settings.reference\r\n                                                                }).map(pModule => {\r\n                                                                    return <MenuItem value={pModule.id} >{pModule.reference}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                )\r\n                                            } else if(settings.type == \"select\") {\r\n                                                return (\r\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 10, width: '300px' }} >\r\n                                                    <InputLabel>{settings.name}</InputLabel>\r\n                                                        <Select onChange={(event) => { this.updateSettings(settings.name, event.target.value) }}  >\r\n                                                            {\r\n                                                                settings.values.map(pModule => {\r\n                                                                    return <MenuItem value={pModule} >{pModule}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                )\r\n                                            } else {\r\n                                                return (\r\n                                                    <TextField\r\n                                                        onChange={(event) => { this.updateSettings(settings.name, event.nativeEvent.target.value) }}\r\n                                                        style={{ width: '300px', marginTop: 10 }}\r\n                                                        label={settings.name}\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                )\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            : null\r\n                    }\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSmartobject","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Add } from '@mui/icons-material'\r\nimport { Typography, TablePagination, TableRow, Table, TableCell, TableHead, TableContainer, TableBody, Paper, IconButton } from '@material-ui/core'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Process extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            processs: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/process\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ processs: result.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.processs.slice(this.state.page * 10, (this.state.page + 1) * 10).map((_process) => (\r\n                                <Link to={\"/process/\" + _process.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                    <TableRow hover key={_process.name} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + _process.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {_process.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {_process.description}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {_process.espace.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Link>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/process/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Add />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.processs.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Process","import Request from './Request'\r\n\r\nclass Source {\r\n\r\n    static async getSource(query = []) {\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects\")\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultProcess = await new Request().get().fetch(\"/api/process\")\r\n        let resultEssentials = await new Request().get().fetch(\"/api/essentials\")\r\n        if (resultProcess.error) {\r\n            return resultProcess\r\n        } else if (resultModule.error) {\r\n            return resultModule\r\n        } else if (resultSmartobject.error) {\r\n            return resultSmartobject\r\n        } else if(resultEssentials.error) {\r\n            return resultEssentials\r\n        } else {\r\n            let sources = []\r\n            if (query.includes(\"smartobject\")) {\r\n                resultSmartobject.data.forEach(smartobject => {\r\n                    let actions = []\r\n                    smartobject.actions.forEach(action => {\r\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\r\n                    })\r\n                    sources.push({ id: smartobject.id, name: \"Smartobject \" + smartobject.reference, actions: actions, type: 'smartobject' })\r\n                })\r\n            }\r\n            if (query.includes(\"module\")) {\r\n                resultModule.data.forEach(pModule => {\r\n                    let actions = []\r\n                    pModule.actions.forEach(action => {\r\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\r\n                    })\r\n                    sources.push({ id: pModule.name, name: \"Module \" + pModule.name, actions: actions, type: 'module' })\r\n                })\r\n            }\r\n            if (query.includes(\"essential\")) {\r\n                let essentials = []\r\n                resultEssentials.data.forEach(pEssential => {\r\n                   essentials.push(\r\n                    { id: pEssential.id, name: pEssential.name, settings: pEssential.settings }\r\n                   )\r\n                })\r\n                sources.push({ id: \"essential\", name: \"Core essential\", actions: essentials, type: 'essential' })\r\n            }\r\n            if (query.includes(\"process\")) {\r\n                resultProcess.data.forEach(process => {\r\n                    let actions = []\r\n                    if (process.mode == \"simple\") {\r\n                        actions.push({\r\n                            id: \"auto\",\r\n                            name: process.name,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                    } else {\r\n                        actions.push({\r\n                            id: \"enable\",\r\n                            name: process.name_enable,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                        actions.push({\r\n                            id: \"disable\",\r\n                            name: process.name_disable,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                    }\r\n                    sources.push({ id: process.id, name: \"Processus \" + process.reference, actions: actions, type: 'process' })\r\n                })\r\n            }\r\n            return { data: sources, error: false, package: '', message: '' }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Source","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nclass IconList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            icons: [],\r\n            mode: 'normal'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let result = await fetch(process.env.PUBLIC_URL + '/ressource/icon.json')\r\n            let resultJSON = await result.json()\r\n            this.setState({ icons: resultJSON })\r\n        } catch (error) {\r\n            this.setState({ icons: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={1} style={{ width: '32vw', height: '32vw',  padding: 10, marginRight: 10 }}>\r\n                <Grid item xs={6} >\r\n                    <Paper onClick={() => { this.setState({ mode: 'normal' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star.svg\"} />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={6} >\r\n                    <Paper onClick={() => { this.setState({ mode: 'outline' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star-outline.svg\"} />\r\n                    </Paper>\r\n                </Grid>\r\n                {\r\n\r\n                    this.state.icons.filter(icon => {\r\n                        if (icon.search(\"outline\") != -1 && this.state.mode == \"outline\") {\r\n                            return true\r\n                        } else if (icon.search(\"outline\") == -1 && this.state.mode == \"normal\") {\r\n                            return true\r\n                        } else {\r\n                            return false\r\n                        }\r\n                    }).map(icon => {\r\n                        return (\r\n                            <Grid item xs >\r\n                                <Paper onClick={() => {this.props.onSelect && this.props.onSelect(icon)}} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                                    <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + icon + \".svg\"} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default IconList","import React from 'react'\r\n\r\nimport { Popover, InputAdornment, Checkbox, Typography, Paper, Grid, InputLabel, MenuItem, FormControl, Select, TableBody, TableContainer, TextField, TableCell, Table, TableRow, Switch, Button, IconButton } from '@material-ui/core'\r\n\r\nimport { Delete, List } from '@mui/icons-material'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\nimport IconList from '../../../components/IconList'\r\n\r\nclass New extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            popup: false,\r\n            message: \"\",\r\n            espaces: [],\r\n            reference: '',\r\n            icon: '',\r\n            description: '',\r\n            name: '',\r\n            name_disable: '',\r\n            name_enable: '',\r\n            mode: 'simple',\r\n            module: null,\r\n            espace: false,\r\n            inputReference: \"\",\r\n            inputName: \"\",\r\n            inputType: null,\r\n            inputMode: false,\r\n            inputs: [],\r\n            sources: [],\r\n            isChecked: false,\r\n            action: null,\r\n            source: null,\r\n            arrSources: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\", \"essential\"])\r\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\r\n        if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else if (resultEspace.error) {\r\n            this.setState({ enabled: true, message: resultEspace.package + \" : \" + resultEspace.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                espaces: resultEspace.data,\r\n                sources: resultSource.data\r\n            })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        let fSource = false\r\n        this.state.sources.forEach(source => {\r\n            if (source.id === id) { fSource = source }\r\n        })\r\n        this.setState({ source: fSource })\r\n    }\r\n\r\n    setAction(id) {\r\n        let fAction = false\r\n        this.state.source.actions.forEach(action => {\r\n            if (action.id === id) { fAction = action }\r\n        })\r\n        this.setState({ action: fAction })\r\n    }\r\n\r\n    setInput() {\r\n        if (this.state.inputReference === \"\") {\r\n            this.setState({ enabled: true, message: \"Reference is missing\" })\r\n            return\r\n        }\r\n        if (this.state.inputType === \"\") {\r\n            this.setState({ enabled: true, message: \"Type is missing\" })\r\n            return\r\n        }\r\n        if (this.state.inputName === \"\") {\r\n            this.setState({ enabled: true, message: \"Name is missing\" })\r\n            return\r\n        }\r\n        let inputs = this.state.inputs\r\n        inputs.push({\r\n            name: this.state.inputName,\r\n            type: this.state.inputType,\r\n            reference: this.state.inputReference,\r\n            enable: this.state.inputMode ? 1 : 0\r\n        })\r\n        this.setState({ inputs: inputs, inputName: \"\", inputType: null, inputReference: \"\", inputMode: false })\r\n    }\r\n\r\n    async set() {\r\n        if (this.state.reference === \"\") {\r\n            this.setState({ enabled: true, message: \"Reference is missing\" })\r\n            return\r\n        }\r\n        if (this.state.icon === \"\") {\r\n            this.setState({ enabled: true, message: \"Icon is missing\" })\r\n            return\r\n        }\r\n        if (this.state.description === \"\") {\r\n            this.setState({ enabled: true, message: \"Description is missing\" })\r\n            return\r\n        }\r\n        if (this.state.espace === false) {\r\n            this.setState({ enabled: true, message: \"Espace is missing\" })\r\n            return\r\n        }\r\n        let body = {\r\n            description: this.state.description,\r\n            nameEnable: this.state.name_enable,\r\n            nameDisable: this.state.name_disable,\r\n            name: this.state.name,\r\n            espace: this.state.espace,\r\n            sources: this.state.arrSources,\r\n            reference: this.state.reference,\r\n            icon: this.state.icon,\r\n            mode: this.state.mode,\r\n            inputs: this.state.inputs\r\n        }\r\n        let result = await new Request().post(body).fetch(\"/api/process\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/process')\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"argument-\" + action.id] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    removeModeArgument(index) {\r\n        let tmp = []\r\n        this.state.inputs.forEach((modeArgument, pIndex) => {\r\n            if (index !== pIndex) { tmp.push(modeArgument) }\r\n        })\r\n        this.setState({ inputs: tmp })\r\n    }\r\n\r\n    confirmationModule() {\r\n        if (this.state.action === false) {\r\n            this.setState({ enabled: true, message: \"Action missing\" })\r\n            return\r\n        }\r\n        if (this.state.source.actions.length === 0) {\r\n            this.setState({ enabled: true, message: \"Module missing\" })\r\n            return\r\n        }\r\n        let settings = []\r\n        for (let index = 0; index < this.state.action.settings.length; index++) {\r\n            let setting = this.state.action.settings[index]\r\n            let value = this.state[\"argument-\" + setting.id]\r\n            if (value == undefined) {\r\n                value = setting.default\r\n            }\r\n            settings.push({ reference: setting.id, value: value })\r\n        }\r\n        let action = {\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: settings,\r\n            enable: this.state.isChecked\r\n        }\r\n        let tmp = this.state.arrSources\r\n        tmp.push(action)\r\n        this.setState({ arrSources: tmp, action: null, source: null, isChecked: false })\r\n    }\r\n\r\n    removeSource(index) {\r\n        let tmp = []\r\n        this.state.arrSources.forEach((action, pIndex) => {\r\n            if (index !== pIndex) { tmp.push(action) }\r\n        })\r\n        this.setState({ arrSources: [] }, () => {\r\n            this.setState({ arrSources: tmp })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ justifyContent: 'start', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '20%', margin: 10 }}\r\n                            label=\"Réference\"\r\n                            value={this.state.reference}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ icon: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '20%', margin: 10 }}\r\n                            label=\"Icon\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.icon}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                            <List />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\r\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ icon: icon, popup: false }) }} />\r\n                        </Popover>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ description: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '50%', margin: 10 }}\r\n                            label=\"Description\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <FormControl variant=\"outlined\" style={{ margin: 10, width: '150px' }} >\r\n                            <InputLabel>Espace</InputLabel>\r\n                            <Select onChange={(event) => { this.setState({ espace: event.target.value }) }} label=\"Espace\" >\r\n                                {\r\n                                    this.state.espaces.map(espace => {\r\n                                        return <MenuItem value={espace.id} >{espace.name}</MenuItem>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>\r\n                            Mode\r\n                        </Typography>\r\n                        <Grid style={{ margin: 10 }} container alignItems=\"center\" >\r\n                            <Grid item>\r\n                                <Typography variant='subtitle1'>Simple</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch checked={this.state.mode === 'switch'} onChange={(event, checked) => { this.setState({ mode: checked ? 'switch' : 'simple' }) }} name=\"checkedC\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant='subtitle1'>Switch</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\r\n                            {\r\n                                this.state.mode === 'switch' ?\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <TextField\r\n                                            onChange={(event) => { this.setState({ name_enable: event.nativeEvent.target.value }) }}\r\n                                            style={{ width: '45%', margin: 10 }}\r\n                                            label=\"Texte actif\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            onChange={(event) => { this.setState({ name_disable: event.nativeEvent.target.value }) }}\r\n                                            style={{ width: '45%', margin: 10 }}\r\n                                            label=\"Texte passif\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </div> :\r\n                                    <div >\r\n                                        <TextField\r\n                                            onChange={(event) => { this.setState({ name: event.nativeEvent.target.value }) }}\r\n                                            style={{ margin: 10, width: '45%' }}\r\n                                            label=\"Texte\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </div>\r\n                            }\r\n                        </TableContainer>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>\r\n                            Argument\r\n                        </Typography>\r\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\r\n                            <TextField\r\n                                value={this.state.inputReference}\r\n                                onChange={(event) => { this.setState({ inputReference: event.nativeEvent.target.value }) }}\r\n                                style={{ width: '30%', margin: 10 }}\r\n                                label=\"Reference\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <TextField\r\n                                value={this.state.inputName}\r\n                                onChange={(event) => { this.setState({ inputName: event.nativeEvent.target.value }) }}\r\n                                style={{ width: '30%', margin: 10 }}\r\n                                label=\"Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <FormControl variant=\"outlined\" style={{ margin: 10, width: '25%' }} >\r\n                                <InputLabel>Type</InputLabel>\r\n                                <Select value={this.state.inputType} onChange={(event) => { this.setState({ inputType: event.target.value }) }} label=\"Type\" >\r\n                                    <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\r\n                                    <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\r\n                                    <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\r\n                                    <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            {\r\n                                this.state.mode === 'switch' ?\r\n                                    <Checkbox onChange={(event, checked) => { this.setState({ inputMode: checked }) }} /> : null\r\n                            }\r\n                            <Button style={{ margin: 10 }} onClick={() => { this.setInput() }} variant='outlined'>\r\n                                Ajouter\r\n                            </Button>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        this.state.inputs.map((modeArgument, index) => {\r\n                                            return (\r\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {modeArgument.reference}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {modeArgument.name}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {modeArgument.type}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    {\r\n                                                        this.state.mode === 'switch' ?\r\n                                                            <TableCell align=\"center\">\r\n                                                                <Checkbox disabled defaultChecked={modeArgument.mode} />\r\n                                                            </TableCell> : null\r\n                                                    }\r\n                                                    <TableCell align=\"right\">\r\n                                                        <IconButton onClick={() => { this.removeModeArgument(index) }}>\r\n                                                            <Delete />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>Action </Typography>\r\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        this.state.arrSources.map((action, index) => {\r\n                                            return (\r\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {action.source.name}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {action.action.name}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {\r\n                                                                action.arguments.map(argument => {\r\n                                                                    return (\r\n                                                                        <Typography variant='body1'>\r\n                                                                            {argument.reference + \" : \" + argument.value}\r\n                                                                        </Typography>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    {this.state.mode === 'simple' ? null : <TableCell align=\"center\">\r\n                                                        <Checkbox disabled defaultChecked={action.enable} />\r\n                                                    </TableCell>}\r\n                                                    <TableCell align=\"center\">\r\n                                                        <IconButton onClick={() => { this.removeSource(index) }}>\r\n                                                            <Delete />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <TableRow >\r\n                                        <TableCell align=\"left\" style={{ minWidth: '30%' }}>\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel>Source</InputLabel>\r\n                                                <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\r\n                                                    {\r\n                                                        this.state.sources.map(source => {\r\n                                                            return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                            {\r\n                                                this.state.source ?\r\n                                                    <FormControl fullWidth >\r\n                                                        <InputLabel>Action</InputLabel>\r\n                                                        <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\r\n                                                            {\r\n                                                                this.state.source.actions.map(action => {\r\n                                                                    return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                    : null\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                            <div>\r\n                                            </div>\r\n                                            {\r\n                                                this.state.action ?\r\n                                                    this.state.action.settings.map(argument => {\r\n                                                        return (\r\n                                                            <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\r\n                                                                <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\r\n                                                            </div>\r\n                                                        )\r\n                                                    }) : null\r\n                                            }\r\n                                        </TableCell>\r\n                                        {this.state.mode === 'simple' ? null :\r\n                                            <TableCell align=\"center\">\r\n                                                <Checkbox onChange={(event, checked) => { this.setState({ isChecked: checked }) }} />\r\n                                            </TableCell>\r\n                                        }\r\n                                    </TableRow>\r\n                                    <Button style={{ margin: 10 }} onClick={() => { this.confirmationModule() }} variant='outlined'>\r\n                                        Ajouter\r\n                                    </Button>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                    <Button style={{ margin: 10 }} onClick={() => { this.set() }} variant='outlined'>Save</Button>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}> {this.state.message} </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default New","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\n\r\nimport { MenuItem, Switch, ListItem, FormControlLabel, Checkbox, InputLabel, IconButton, TableHead, TextField, Typography, Paper, Divider, TableBody, TableContainer, TableCell, Table, TableRow, FormControl, Select, Button } from '@material-ui/core'\r\n\r\nimport { Check, Close, Delete, Autorenew, Add } from '@mui/icons-material'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nclass NewProcess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            enabled: false,\r\n            message: \"\",\r\n            process: null,\r\n            profiles: [],\r\n            executeInformation: \"\",\r\n            referenceInput: \"\",\r\n            nameInput: \"\",\r\n            typeInput: null,\r\n            modeInput: 0,\r\n            action: null,\r\n            source: null,\r\n            loading: false,\r\n            isChecked: false,\r\n            sources: []\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\", \"essential\"])\r\n        console.log(resultSource)\r\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let result = await new Request().get().fetch(\"/api/process/\" + this.state.id)\r\n        if (resultEspace.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultEspace.package + \" : \" + resultEspace.message\r\n            })\r\n        } else if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n        } else if(resultSource.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultSource.package + \" : \" + resultSource.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                process: result.data,\r\n                profiles: resultProfile.data,\r\n                espaces: resultEspace.data,\r\n                sources: resultSource.data\r\n            })\r\n        }\r\n        this.setState({ loading: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        let fSource = false\r\n        this.state.sources.forEach(source => {\r\n            if (source.id === id) { fSource = source }\r\n        })\r\n        this.setState({ source: fSource })\r\n    }\r\n\r\n    setAction(id) {\r\n        let fAction = false\r\n        this.state.source.actions.forEach(action => {\r\n            if (action.id === id) { fAction = action }\r\n        })\r\n        this.setState({ action: fAction })\r\n    }\r\n\r\n    async addSource() {\r\n        if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Action missing\" })\r\n            return\r\n        }\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Source missing\" })\r\n            return\r\n        }\r\n        let settings = []\r\n        for (let index = 0; index < this.state.action.settings.length; index++) {\r\n            let setting = this.state.action.settings[index]\r\n            let value = this.state[\"argument-\" + setting.id]\r\n            if (value == undefined) {\r\n                value = setting.default\r\n            }\r\n            settings.push({ reference: setting.id, value: value })\r\n        }\r\n        let action = {\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: settings,\r\n            enable: this.state.isChecked\r\n        }\r\n        let result = await new Request().post(action).fetch(\"/api/process/\" + this.state.id + \"/actions\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteSource(idsource) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + this.state.id + \"/actions/\" + idsource)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/process')\r\n        }\r\n    }\r\n\r\n    async executeAction() {\r\n        this.setState({ loading: true })\r\n        let tmp = {}\r\n        for (let index = 0; index < this.state.process.inputs.length; index++) {\r\n            let input = this.state.process.inputs[index];\r\n            let value = this.state[\"argument-\" + input.id]\r\n            if (value == undefined) {\r\n                value = input.default\r\n            }\r\n            tmp[input.reference] = value\r\n        }\r\n        let result = await new Request().post({ inputs: tmp }).fetch(\"/api/process/\" + this.state.process.id + \"/execute\")\r\n        if (result.error) {\r\n            this.setState({ loading: null, enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({ executeInformation: JSON.stringify(result.data) })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProfile(process, profile) {\r\n        let result = await new Request().post({ idProfile: profile.id, }).fetch(\"/api/process/\" + process.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(process, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + process.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProcessInput(input) {\r\n        let result = await new Request().delete({}).fetch(\"/api/process/\" + this.state.process.id + \"/inputs/\" + input.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProcessInput() {\r\n        if (this.state.typeInput == null) {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : type is empty\" })\r\n            return\r\n        }\r\n        let result = await new Request().post({\r\n            reference: this.state.referenceInput,\r\n            name: this.state.nameInput,\r\n            type: this.state.typeInput,\r\n            enable: this.state.modeInput\r\n        }).fetch(\"/api/process/\" + this.state.process.id + \"/inputs\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({\r\n                referenceSettings: \"\",\r\n                valueSettings: \"\",\r\n                referenceInput: \"\",\r\n                nameInput: \"\",\r\n                modeInput: 0\r\n            })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"argument-\" + action.id] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.process) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 25 }}>\r\n                        <Typography variant='h4'>\r\n                            {this.state.process.reference}\r\n                        </Typography>\r\n                        <Typography variant='subtitle1'>\r\n                            {this.state.process.espace.name}\r\n                        </Typography>\r\n                        <Typography variant='subtitle1'>\r\n                            {this.state.process.description}\r\n                        </Typography>\r\n                        <Divider style={{ marginTop: 10, marginBottom: 10 }} />\r\n                        <div  >\r\n                            <Typography variant='h5' style={{ marginBottom: 5 }}>Action</Typography>\r\n                            {\r\n                                this.state.process.mode == \"simple\" ?\r\n                                    this.state.process.mode === \"simple\" ?\r\n                                        <Button disabled={this.state.loading} style={{ alignSelf: 'center', marginTop: 10 }} variant={this.state.process.enable === 2 ? \"contained\" : \"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" startIcon={<Autorenew />}>\r\n                                            {this.state.process.name}\r\n                                        </Button> : null\r\n                                    :\r\n                                    <div style={{ flexDirection: 'column', display: 'flex', width: '20%' }}>\r\n                                        {\r\n                                            this.state.process.enable == 1 ?\r\n                                                <Button disabled={this.state.loading} style={{ marginTop: 10 }} variant={\"contained\"} onClick={() => { this.executeAction() }} color=\"default\" >\r\n                                                    {this.state.process.name_enable}\r\n                                                </Button> :\r\n                                                <Button disabled={this.state.loading} style={{ marginTop: 10 }} variant={\"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" >\r\n                                                    {this.state.process.name_disable}\r\n                                                </Button>\r\n                                        }\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\r\n                            {\r\n                                this.state.process.inputs.filter(input => {\r\n                                    return input.enable == this.state.process.enable\r\n                                }).map(input => {\r\n                                    return <Action setState={this.setState.bind(this)} action={input} flexDirection='column' orientation='horizontal' />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div style={{ marginTop: 15 }} >\r\n                            <Typography variant='h5'>\r\n                                Input\r\n                            </Typography>\r\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.process.inputs.map(input =>\r\n                                                    <TableRow key={input.id}>\r\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.reference}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.name}</Typography> </TableCell>\r\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.type}</Typography></TableCell>\r\n                                                        <TableCell align=\"center\"><Typography variant='body1'>{input.enable}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\">\r\n                                                            <IconButton onClick={() => { this.deleteProcessInput(input) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                                <Delete />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            <TableRow key={-1}>\r\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\r\n                                                    <TextField value={this.state.referenceInput} onChange={(event) => { this.setState({ referenceInput: event.nativeEvent.target.value }) }} placeholder='Reference' style={{ width: '100%' }}>\r\n                                                    </TextField>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\r\n                                                    <TextField value={this.state.nameInput} onChange={(event) => { this.setState({ nameInput: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\r\n                                                    </TextField>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ width: '20%' }}>\r\n                                                    <FormControl variant=\"outlined\" style={{ width: '100%' }} >\r\n                                                        <InputLabel>Type</InputLabel>\r\n                                                        <Select value={this.state.typeInput} onChange={(event) => { this.setState({ typeInput: event.target.value }) }} label=\"Type\" >\r\n                                                            <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\r\n                                                            <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\r\n                                                            <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\r\n                                                            <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\" style={{ width: '10%' }}>\r\n                                                    {\r\n                                                        this.state.process.mode === 'switch' ?\r\n                                                            <Checkbox value={this.state.modeInput == 0} onChange={(event, checked) => { this.setState({ modeInput: checked ? 1 : 0 }) }} /> : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" >\r\n                                                    <IconButton onClick={() => { this.insertProcessInput() }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: 15 }} >\r\n                            <Typography variant='h5'>\r\n                                Module\r\n                            </Typography>\r\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Module</Typography></TableCell>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Type</Typography></TableCell>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Action</Typography></TableCell>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Arguments</Typography></TableCell>\r\n                                                <TableCell align=\"center\"><Typography variant='body1'>Mode</Typography></TableCell>\r\n                                                <TableCell align=\"left\"></TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.process.actions.map(action =>\r\n                                                    <TableRow key={action.id}>\r\n                                                        <TableCell align=\"left\" style={{ width: '15%' }}><Typography variant='body1'>{action.object}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.type}</Typography> </TableCell>\r\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.action}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}>{action.arguments.map(argument => {\r\n                                                            return <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\r\n                                                        })}</TableCell>\r\n                                                        <TableCell align=\"center\" style={{ width: '15%' }}>{action.enable === 0 ? <Close /> : action.enable === 1 ? <Check /> : <Autorenew />}</TableCell>\r\n                                                        <TableCell align=\"left\">\r\n                                                            <IconButton onClick={() => { this.deleteSource(action.id) }}>\r\n                                                                <Delete />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                                <TableContainer style={{ marginTop: 15 }} component={Paper}>\r\n                                    <Table>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel>Source</InputLabel>\r\n                                                    <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\r\n                                                        {\r\n                                                            this.state.sources.map(source => {\r\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\r\n                                                {\r\n                                                    this.state.source ?\r\n                                                        <FormControl fullWidth >\r\n                                                            <InputLabel>Action</InputLabel>\r\n                                                            <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\r\n                                                                {\r\n                                                                    this.state.source.actions.map(action => {\r\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\" style={{ width: '20%' }}>\r\n                                                {\r\n                                                    this.state.action ?\r\n                                                        this.state.action.settings.map(argument => {\r\n                                                            return (\r\n                                                                <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\r\n                                                                    <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\r\n                                                                </div>\r\n                                                            )\r\n                                                        }) : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\r\n                                                {\r\n                                                    this.state.process.mode === 'switch' ?\r\n                                                        <Checkbox onChange={(event, isChecked) => { this.setState({ isChecked: isChecked }) }} /> : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\r\n                                                <IconButton onClick={() => { this.addSource() }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map(profile => {\r\n                                    let state = false\r\n                                    this.state.process.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={<Switch\r\n                                                checked={state}\r\n                                                onChange={() => {\r\n                                                    state ? this.deleteProfile(this.state.process, profile) : this.insertProfile(this.state.process, profile)\r\n                                                }}\r\n                                                color=\"primary\"\r\n                                            />} label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.process.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewProcess","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { IconButton, Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\r\nimport { Add, Delete, FileCopy, PlayArrow, Edit, Pause } from '@mui/icons-material'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Theme from '../../../Theme'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Routine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            loading: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            routines: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/routines\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                loading: false,\r\n                routines: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/routines/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async duplicate(id) {\r\n        let result = await new Request().put().fetch(\"/api/routines/\" + id + \"/duplicate\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateStatus(id, status) {\r\n        let result = await new Request().put({ status: status }).fetch(\"/api/routines/\" + id + \"/status\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.routines.slice(this.state.page * 10, (this.state.page + 1) * 10).map((routine) => (\r\n                                <TableRow key={routine.id} >\r\n                                    <TableCell align=\"left\">\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + routine.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {routine.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <div style={{ flex: 1, flexDirection: 'row', display: 'flex', alignContent: 'center', alignItems: 'center', justifyContent: 'end' }}>\r\n                                            <IconButton onClick={() => { this.updateStatus(routine.id, routine.status === 0 ? 1 : 0) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2, backgroundColor: routine.status === 1 ? Theme.palette.success.main : null }}>\r\n                                                {routine.status === 0 ? <PlayArrow /> : <Pause />}\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.props.history.push('/routine/' + routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.duplicate(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <FileCopy />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.delete(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                        <Link to=\"/routine/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <IconButton style={{ borderRadius: 0 }}>\r\n                                <Add />\r\n                            </IconButton>\r\n                        </Link>\r\n                    </Paper>\r\n                    <TablePagination component=\"div\" count={this.state.routines.length} rowsPerPage={10} page={this.state.page} rowsPerPageOptions={[]} onChangePage={(event, page) => { this.setState({ page: page }) }} />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routine","import React from 'react'\r\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\r\nimport { Save, Add, List, Cached } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Source from '../../../utils/Source'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Theme from '../../../Theme'\r\nimport WeekSchedul from '../../../components/WeekSchedul'\r\nimport IconList from '../../../components/IconList'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass NewRoutine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            routine: null,\r\n            sources: [],\r\n            mode: 'counter',\r\n            modalTrigger: false,\r\n            modalEffect: false,\r\n            routine: {\r\n                watch: 1,\r\n                triggers: [],\r\n                effects: [],\r\n                name: \"\",\r\n                icon: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\", \"essential\"])\r\n        if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({ sources: resultSource.data })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) { this.setState({ action: action }) }\r\n        })\r\n    }\r\n\r\n    updateIcon(icon) {\r\n        let routine = this.state.routine\r\n        routine.icon = icon\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateName(name) {\r\n        let routine = this.state.routine\r\n        routine.name = name\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateWatch(watch) {\r\n        let routine = this.state.routine\r\n        routine.watch = watch\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    addTrigger() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.triggers.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings,\r\n                result: this.state.result,\r\n                statement: this.state.statement,\r\n                expected: this.state.expected\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalTrigger: false,\r\n                action: null,\r\n                source: null,\r\n                result: null,\r\n                statement: null,\r\n                expected: null\r\n            })\r\n        }\r\n    }\r\n\r\n    addEffect() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.effects.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalEffect: false,\r\n                action: null,\r\n                source: null\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTrigger(pIndex) {\r\n        let routine = this.state.routine\r\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\r\n        routine.triggers = triggers\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    removeEffect(pIndex) {\r\n        let routine = this.state.routine\r\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\r\n        routine.effects = effects\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.routine.name.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing name\" })\r\n        } else if (this.state.routine.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing icon\" })\r\n        } else if (this.state.routine.effects.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing effect\" })\r\n        } else {\r\n            let result = await new Request().post({\r\n                name: this.state.routine.name,\r\n                watch: this.state.routine.watch.toString(),\r\n                icon: this.state.routine.icon,\r\n                triggers: this.state.routine.triggers,\r\n                effects: this.state.routine.effects,\r\n                mode: this.state.mode\r\n            }).fetch(\"/api/routines\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/routine')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.routine) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\r\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                                    <List />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                ></TextField>\r\n                                <Popover\r\n                                    open={this.state.popup}\r\n                                    onClose={() => { this.setState({ popup: false }) }}\r\n                                    anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                                    transformOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                                >\r\n                                    <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon) }} />\r\n                                </Popover>\r\n                            </div>\r\n                            {\r\n                                this.state.mode == 'counter' ?\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 5, paddingRight: 5 }}>\r\n                                            <div style={{ flex: 1 }}>\r\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\r\n                                                    <Cached />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <div style={{ display: 'flex', flex: 20, justifyContent: 'center' }}>\r\n                                                <Slider\r\n                                                    defaultValue={0}\r\n                                                    valueLabelDisplay=\"auto\"\r\n                                                    orientation={'horizontal'}\r\n                                                    min={0}\r\n                                                    max={1440}\r\n                                                    step={1}\r\n                                                    value={this.state.routine.watch}\r\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> :\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25,  borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\r\n                                    </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\r\n\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\r\n                                    this.state.routine.triggers.map((trigger, index) => {\r\n                                        return (\r\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                <div  >\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\r\n                                                    {\r\n                                                        trigger.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    trigger.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                                {\r\n                                                    trigger.result && trigger.statement && trigger.expected ?\r\n                                                        <div>\r\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\r\n                                    {\r\n                                        this.state.routine.effects.map((effect, index) => {\r\n                                            return (\r\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\r\n                                                    {\r\n                                                        effect.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    effect.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\r\n                        <Fade in={this.state.modalTrigger} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New Trigger\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} /></div>\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\r\n                                            <InputLabel>Condition</InputLabel>\r\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\r\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\r\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\r\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\r\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\r\n                        <Fade in={this.state.modalEffect} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New effect\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} /></div>\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewRoutine","import React from 'react'\r\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\r\nimport { Save, Add, List, Cached } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\nimport Action from '../../../components/Action'\r\nimport Theme from '../../../Theme'\r\nimport IconList from '../../../components/IconList'\r\nimport WeekSchedul from '../../../components/WeekSchedul'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass NewRoutine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            popup: false,\r\n            id: props.match.params.id,\r\n            enabled: false,\r\n            message: \"\",\r\n            routine: null,\r\n            sources: [],\r\n            modalTrigger: false,\r\n            modalEffect: false,\r\n            mode: \"counter\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\", \"essential\"])\r\n        let result = await new Request().get().fetch(\"/api/routines/\" + this.state.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({mode: result.data.mode, routine: result.data, sources: resultSource.data })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) { this.setState({ action: action }) }\r\n        })\r\n    }\r\n\r\n    updateIcon(icon) {\r\n        let routine = this.state.routine\r\n        routine.icon = icon\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateName(name) {\r\n        let routine = this.state.routine\r\n        routine.name = name\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateWatch(watch) {\r\n        let routine = this.state.routine\r\n        routine.watch = watch\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    addTrigger() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.triggers.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings,\r\n                result: this.state.result,\r\n                statement: this.state.statement,\r\n                expected: this.state.expected\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalTrigger: false,\r\n                action: null,\r\n                source: null,\r\n                result: null,\r\n                statement: null,\r\n                expected: null\r\n            })\r\n        }\r\n    }\r\n\r\n    addEffect() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.effects.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalEffect: false,\r\n                action: null,\r\n                source: null\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTrigger(pIndex) {\r\n        let routine = this.state.routine\r\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\r\n        routine.triggers = triggers\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    removeEffect(pIndex) {\r\n        let routine = this.state.routine\r\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\r\n        routine.effects = effects\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.routine.name.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing name\" })\r\n        } else if (this.state.routine.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing icon\" })\r\n        } else if (this.state.routine.effects.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing effect\" })\r\n        } else {\r\n            let result = await new Request().put({\r\n                name: this.state.routine.name,\r\n                watch: this.state.routine.watch.toString(),\r\n                icon: this.state.routine.icon,\r\n                triggers: this.state.routine.triggers,\r\n                effects: this.state.routine.effects,\r\n                mode: this.state.mode\r\n            }).fetch('/api/routines/' + this.state.id)\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/routine/')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.routine) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\r\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }} \r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                                <List />\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                ></TextField>\r\n                            \r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\r\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon)}} />\r\n                        </Popover>\r\n                            \r\n                            </div>\r\n                            {\r\n                                this.state.mode == 'counter' ?\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 5, paddingRight: 5 }}>\r\n                                            <div style={{ flex: 1 }}>\r\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\r\n                                                    <Cached />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <div style={{ display: 'flex', flex: 15, justifyContent: 'center' }}>\r\n                                                <Slider\r\n                                                    defaultValue={0}\r\n                                                    valueLabelDisplay=\"auto\"\r\n                                                    orientation={'horizontal'}\r\n                                                    min={0}\r\n                                                    max={1440}\r\n                                                    step={1}\r\n                                                    value={this.state.routine.watch}\r\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> :\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\r\n\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\r\n                                    this.state.routine.triggers.map((trigger, index) => {\r\n                                        return (\r\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                <div  >\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\r\n                                                    {\r\n                                                        trigger.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    trigger.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                                {\r\n                                                    trigger.result && trigger.statement && trigger.expected ?\r\n                                                        <div>\r\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\r\n                                    {\r\n                                        this.state.routine.effects.map((effect, index) => {\r\n                                            return (\r\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\r\n                                                    {\r\n                                                        effect.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    effect.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\r\n                        <Fade in={this.state.modalTrigger} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New Trigger\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action setState={this.setState.bind(this)} action={setting} flexDirection='column' orientation='horizontal'  /></div>\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\r\n                                            <InputLabel>Condition</InputLabel>\r\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\r\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\r\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\r\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\r\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\r\n                        <Fade in={this.state.modalEffect} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New effect\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action setState={this.setState.bind(this)} action={setting} /></div>\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewRoutine","import React from 'react'\r\nimport { Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\r\nimport md5 from 'md5'\r\nimport { Link } from \"react-router-dom\"\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Module extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            modules: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        if (resultModule.error) {\r\n            this.setState({ enabled: true, message: resultModule.package + \" : \" + resultModule.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Identifiant\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.modules.slice(this.state.page * 10, (this.state.page + 1) * 10).map((pmodule) => (\r\n                                <Link to={\"/module/\" + md5(pmodule.name)} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                    <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {pmodule.name}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Link>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignContent: 'center', alignItems: 'center' }}>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.modules.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Module","import React from 'react'\r\nimport md5 from 'md5'\r\nimport JSONPretty from 'react-json-pretty'\r\n\r\nimport { Alert } from '@material-ui/lab'\r\nimport { Close } from '@mui/icons-material'\r\nimport { Paper, Typography, Divider, Button, IconButton } from '@material-ui/core'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Detail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hashId: props.match.params.id,\r\n            loading: null,\r\n            module: null,\r\n            enabled: false,\r\n            message: \"\",\r\n            executeInformation: \"\",\r\n            severity: \"error\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/configurations/module\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                severity: \"error\",\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n            this.props.history.push('/module')\r\n        } else {\r\n            let _module = false\r\n            result.data.forEach(pModule => {\r\n                if (md5(pModule.name) == this.state.hashId) {\r\n                    _module = pModule\r\n                }\r\n            })\r\n            if (_module) {\r\n                this.setState({\r\n                    module: _module\r\n                })\r\n            } else {\r\n                this.props.history.push('/module')\r\n            }\r\n        }\r\n        this.setState({ loading: null })\r\n    }\r\n\r\n    async executeAction(action, settings) {\r\n        this.setState({ loading: action })\r\n        let tmp = {}\r\n        for (let index = 0; index < settings.length; index++) {\r\n            let argument = settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmp[argument.id] = value\r\n        }\r\n        let result = await new Request().post({ settings: tmp, reference: this.state.module.reference }).fetch(\"/api/modules/\" + md5(this.state.module.name) + \"/actions/\" + action)\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                severity: \"error\",\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n            this.setState({ loading: null })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({\r\n                    executeInformation: JSON.stringify(result.data)\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    enabled: true,\r\n                    severity: \"success\",\r\n                    message: \"Success\"\r\n                })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.module) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                {this.state.module.name.split(\"/\")[1]}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.module.name}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            {\r\n                                this.state.module.actions.map(action => {\r\n                                    return (\r\n                                        <Paper style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', padding: 10 }}>\r\n                                            <Button disabled={this.state.loading == action.id} onClick={() => { this.executeAction(action.id, action.settings) }} variant={this.state.loading == action.id ? 'contained' : 'outlined'} style={{ width: '250px', height: '100%' }} >\r\n                                                {action.name}\r\n                                            </Button>\r\n                                            {\r\n                                                action.settings.length > 0 ?\r\n                                                    <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\r\n                                                        {\r\n                                                            action.settings.map(setting => {\r\n                                                                return <Action flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                    : null\r\n                                            }\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\r\n                        {this.state.message}\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\r\n                    {this.state.message}\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail","import React from 'react'\r\nimport {IconButton, Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead } from '@material-ui/core'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Category, DevicesOther, Store } from '@mui/icons-material'\r\n\r\nclass Configuration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pageSmartobject: 0,\r\n            pageModule: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            modules: [],\r\n            smartobjects: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        if (resultModule.error) {\r\n            this.setState({ enabled: true, message: resultModule.package + \" : \" + resultModule.message })\r\n        } else if (resultSmartobject.error) {\r\n            this.setState({ enabled: true, message: resultSmartobject.package + \" : \" + resultSmartobject.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data, smartobjects: resultSmartobject.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Identifiant\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.smartobjects.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\r\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.id}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center'}}>\r\n                <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/market/module\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Store />\r\n                                </IconButton>\r\n                            </Link>\r\n                            </Paper>\r\n                    </div>\r\n                        <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.smartobjects.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.pageSmartobject}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ pageSmartobject: page }) }}\r\n                    />\r\n                </div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Identifiant\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.modules.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\r\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.id}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/market/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <IconButton style={{ borderRadius: 0 }}>\r\n                                    {this.state.id != \"smartobject\" ? <DevicesOther/> : <Category />}\r\n                                </IconButton>\r\n                            </Link>\r\n                            </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.modules.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.pageModule}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ pageModule: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Configuration","import React from 'react'\r\nimport { IconButton, Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead, Button } from '@material-ui/core'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Category, DevicesOther, Close, GetApp } from '@mui/icons-material'\r\n\r\nclass Configuration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            markets: [],\r\n            pageMarket: 0,\r\n            severity: \"error\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    async install(pPackage) {\r\n        this.setState({ loading: true })\r\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/install\")\r\n        if (result.error) {\r\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ severity: \"info\", enabled: true, message: pPackage + \" was installed\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async upgrade(pPackage) {\r\n        this.setState({ loading: true })\r\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/upgrade\")\r\n        if (result.error) {\r\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ severity: \"info\", enabled: true, message: pPackage + \" was upgraded\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async uninstall(pPackage) {\r\n        this.setState({ loading: true })\r\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/uninstall\")\r\n        if (result.error) {\r\n            this.setState({ loading: false, severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ severity: \"info\", enabled: true, message: pPackage + \" was removed\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        let resultPing = await new Request().get().fetch(\"/api/ping\")\r\n        let result = await fetch(\"https://market.intendant.io\")\r\n        let resultMarket = await result.json()\r\n\r\n        if(resultPing.error || resultSmartobject.error || resultModule.error) {\r\n            this.setState({ loading: false, severity: \"error\", enabled: true, message:  resultPing.package + \" : \" + resultPing.message })\r\n            return \r\n        } \r\n\r\n        resultMarket = resultMarket.map(market => {\r\n            market.mode = \"install\"\r\n            market.currentVersion = \"0.0.0\"\r\n            return market\r\n        })\r\n        resultMarket = resultMarket.map(market => {\r\n            if (market.name == \"@intendant/core\") {\r\n                if (resultPing.version != market.version) {\r\n                    market.mode = \"upgrade\"\r\n                } else {\r\n                    market.mode = \"none\"\r\n                }\r\n                market.currentVersion = resultPing.version\r\n            }\r\n            return market\r\n        })\r\n        resultModule.data.forEach(pModule => {\r\n            resultMarket = resultMarket.map(market => {\r\n                if (market.name == pModule.name) {\r\n                    market.currentVersion = pModule.version\r\n                    if (market.version == pModule.version) {\r\n                        market.mode = \"remove\"\r\n                    } else {\r\n                        market.mode = \"update\"\r\n                    }\r\n                }\r\n                return market\r\n\r\n            })\r\n        })\r\n        resultSmartobject.data.forEach(pModule => {\r\n            resultMarket = resultMarket.map(market => {\r\n                if (market.name == pModule.name) {\r\n                    market.currentVersion = pModule.version\r\n                    if (market.version == pModule.version) {\r\n                        market.mode = \"remove\"\r\n                    } else {\r\n                        market.mode = \"update\"\r\n                    }\r\n                }\r\n\r\n                return market\r\n            })\r\n        })\r\n        this.setState({ markets: resultMarket })\r\n        if (resultModule.error) {\r\n            this.setState({ severity: \"error\", enabled: true, message: resultModule.package + \" : \" + resultModule.message })\r\n        } else if (resultSmartobject.error) {\r\n            this.setState({ severity: \"error\", enabled: true, message: resultSmartobject.package + \" : \" + resultSmartobject.message })\r\n        } else {\r\n            this.setState({ modules: resultModule.data, smartobjects: resultSmartobject.data })\r\n        }\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Type\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    <Typography variant='body1'>\r\n                                        Version\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    <Typography variant='body1'>\r\n                                        Action\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.markets.slice(this.state.pageMarket * 20, (this.state.pageMarket + 1) * 20).map((pmodule) => (\r\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.name}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.type}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"center\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.version}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"center\">\r\n                                        <Typography variant='body1'>\r\n                                            {\r\n                                                    pmodule.mode == \"none\" ? \r\n                                                    <Typography variant='body1'>\r\n                                                        Updated\r\n                                                    </Typography>\r\n                                                        :\r\n                                                    pmodule.mode == \"remove\" ?\r\n                                                        <Button disabled={this.state.loading} size='small' startIcon={<Close />} onClick={() => { this.uninstall(pmodule.name) }} variant=\"outlined\" >\r\n                                                            Remove\r\n                                                        </Button>\r\n                                                        :\r\n                                                        pmodule.mode == \"upgrade\" ?\r\n                                                            <Button disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => { this.upgrade(pmodule.name) }} variant=\"outlined\" >\r\n                                                                Upgrade\r\n                                                            </Button>\r\n                                                            :\r\n                                                            pmodule.mode == \"install\" ?\r\n                                                                <Button disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => { this.install(pmodule.name) }} variant=\"outlined\" disableElevation  >\r\n                                                                    Install\r\n                                                                </Button>\r\n                                                                :\r\n                                                                pmodule.mode == \"update\" ?\r\n                                                                    <Button disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => { this.install(pmodule.name) }} variant=\"outlined\" disableElevation  >\r\n                                                                        Update\r\n                                                                    </Button>\r\n                                                                    :\r\n                                                                    <Button disabled={true} size='small' startIcon={<GetApp />} onClick={() => { this.install(pmodule.name) }} variant=\"outlined\" disableElevation  >\r\n                                                                        Unknown\r\n                                                                    </Button>\r\n                                            }\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.markets.length}\r\n                        rowsPerPage={20}\r\n                        page={this.state.pageMarket}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ pageMarket: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Configuration","import React from 'react'\r\nimport { Add } from '@mui/icons-material'\r\nimport { Typography, Paper, TableBody, TableContainer , TableHead ,TableCell, Table, TableRow, TablePagination, IconButton  } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\"\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Widget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            widgets: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/widgets\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", widgets: result.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.widgets.slice(this.state.page * 10, (this.state.page + 1) * 10).map((widget) => (\r\n                                <Link to={\"/widget/\" + widget.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                    <TableRow hover key={widget.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + widget.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {widget.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map(content => {\r\n                                                return content.content.split(\"\\n\").map(_content => {\r\n                                                    return (\r\n                                                        <Typography variant='body1' style={{ fontWeight: content.type.reference == 'title' ? 'bold' : 'normal' }}>\r\n                                                            {_content}\r\n                                                        </Typography>\r\n                                                    )\r\n                                                })\r\n                                            })}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {widget.icon}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Link>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/widget/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Add />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.widgets.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Widget","import React from 'react'\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nimport { Popover, InputAdornment, TableRow, Table, MenuItem, FormControl, TableCell, IconButton, Typography, InputLabel, Button, TextField, Paper, TableBody, TableContainer, TableHead, Divider, Select } from '@material-ui/core'\r\nimport { Close, Add, List } from '@mui/icons-material'\r\nimport IconList from '../../../components/IconList'\r\n\r\nclass NewWidget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            popup: false,\r\n            content: null,\r\n            description: \"\",\r\n            image: \"\",\r\n            sources: [],\r\n            contentSources: [],\r\n            source: null,\r\n            action: null,\r\n            widgetReference: \"\",\r\n            reference: \"\",\r\n            icon: \"\",\r\n            type: \"title\",\r\n            types: [],\r\n            contents: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/smartobjects\")\r\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\r\n        let resultSource = await Source.getSource([\"smartobject\",\"module\"])\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else if (resultConfiguration.error) {\r\n            this.setState({ enabled: true, message: resultConfiguration.package + \" : \" + resultConfiguration.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", loading: false, sources: resultSource.data, type: false, types: resultConfiguration.data.contents.types })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) {\r\n                this.setState({ action: action })\r\n            }\r\n        })\r\n    }\r\n\r\n    setType(id) {\r\n        this.state.types.map(type => {\r\n            if (type.id == id) {\r\n                this.setState({ type: type })\r\n            }\r\n        })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.widgetReference.length == 0 || this.state.contentSources.length == 0 || this.state.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let authorization = localStorage.getItem(\"authorization\")\r\n        let server = localStorage.getItem(\"server\")\r\n        let result = await fetch(server + \"/api/widgets\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + authorization\r\n            },\r\n            body: JSON.stringify({\r\n                reference: this.state.widgetReference,\r\n                sources: this.state.contentSources,\r\n                contents: this.state.contents,\r\n                icon: this.state.icon\r\n            })\r\n        })\r\n        let resultJSON = await result.json()\r\n        if (resultJSON.error) {\r\n            this.setState({ enabled: true, message: resultJSON.package + \" : \" + resultJSON.message })\r\n        } else {\r\n            this.props.history.push('/widget')\r\n        }\r\n    }\r\n\r\n\r\n    insertContent() {\r\n        let contents = this.state.contents\r\n        contents.push({ type: this.state.type, content: this.state.content })\r\n        this.setState({ contents: contents, content: \"\" })\r\n    }\r\n\r\n    insertSource() {\r\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let find = false\r\n        let contentSources = this.state.contentSources\r\n        contentSources.forEach(contentSource => {\r\n            if (contentSource.reference == this.state.reference) {\r\n                find = true\r\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\r\n            }\r\n        })\r\n        if (find) {\r\n            return\r\n        }\r\n        let tmpsettings = []\r\n        let action = this.state.action\r\n        for (let index = 0; index < action.settings.length; index++) {\r\n            let argument = action.settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmpsettings.push({ reference: argument.id, value: value })\r\n        }\r\n        contentSources.push({\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: tmpsettings,\r\n            reference: this.state.reference\r\n        })\r\n        this.setState({\r\n            contentSources: contentSources,\r\n            action: null,\r\n            source: null,\r\n            reference: \"\"\r\n        })\r\n    }\r\n\r\n    delete(index) {\r\n        let contents = []\r\n        this.state.contents.forEach((content, pindex) => {\r\n            if (pindex != index) { contents.push(content) }\r\n        })\r\n        this.setState({ contents: contents })\r\n    }\r\n\r\n    deleteContent(index) {\r\n        let contentSources = []\r\n        this.state.contentSources.forEach((content, pindex) => {\r\n            if (pindex != index) { contentSources.push(content) }\r\n        })\r\n        this.setState({ contentSources: contentSources })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                    <div style={{ padding: 10 }}>\r\n                        <Typography variant='h4' > Widget </Typography>\r\n                    </div>\r\n                    <Divider />\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ widgetReference: event.target.value }) }}\r\n                            multiline\r\n                            value={this.state.widgetReference}\r\n                            label=\"Reference\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            style={{ marginLeft: 10 }}\r\n                            onChange={(event) => { this.setState({ icon: event.target.value }) }}\r\n                            multiline\r\n                            value={this.state.icon}\r\n                            label=\"Icon\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                            <List />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ popup: false, icon: icon }) }} />\r\n\r\n                        </Popover>\r\n                    </div>\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <Typography variant='h5' > Source </Typography>\r\n                        <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align='left'>\r\n                                                <Typography variant='subtitle1'> Source </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='subtitle1'> Argument </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            this.state.contentSources.map((contentSource, index) => {\r\n                                                return (\r\n                                                    <TableRow >\r\n                                                        <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                            <Typography variant='subtitle1'> {contentSource.reference} </Typography>\r\n                                                            <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\r\n                                                            <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"left\">\r\n                                                            <Typography variant='subtitle1'>\r\n                                                                {JSON.stringify(contentSource.arguments)}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">\r\n                                                            <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\r\n                                                                <Close />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        <TableRow  >\r\n                                            <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.setState({ reference: event.target.value }) }}\r\n                                                    style={{ width: '100%' }}\r\n                                                    multiline\r\n                                                    value={this.state.reference}\r\n                                                    label=\"Reference\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                                <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                    <InputLabel>Source</InputLabel>\r\n                                                    <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                                        {\r\n                                                            this.state.sources.map(source => {\r\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                {\r\n                                                    this.state.source ?\r\n                                                        <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                            <InputLabel>Action</InputLabel>\r\n                                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                                {\r\n                                                                    this.state.source.actions.map(action => {\r\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{ width: '40%' }}>\r\n                                                {\r\n                                                    this.state.action && this.state.action.settings.length > 0 ?\r\n                                                        <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\r\n                                                            <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\r\n                                                                {\r\n                                                                    this.state.action.settings.map(setting => {\r\n                                                                        return <Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} />\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <Typography variant='h5' > Content </Typography>\r\n                        <div style={{ marginTop: 10, marginBottom: 10 }}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align='left'>\r\n                                                <Typography variant='subtitle1'> Type </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='subtitle1'> Affichage </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.contents.sort((a, b) => { return a.type.rank > b.type.rank }).map((content, index) => (\r\n                                            <TableRow >\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1'> {content.type.name} </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1'> {content.content} </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.delete(index) }} style={{ borderRadius: 2 }}>\r\n                                                        <Close />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        <TableRow  >\r\n                                            <TableCell align=\"left\">\r\n                                                <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\r\n                                                    <InputLabel>Type</InputLabel>\r\n                                                    <Select value={this.state.type.id} onChange={(event) => { this.setType( event.target.value ) }} label=\"Type\" >\r\n                                                        {\r\n                                                            this.state.types.map(type => {\r\n                                                                return <MenuItem value={type.id} >{type.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.setState({ content: event.target.value }) }}\r\n                                                    style={{ width: '100%' }}\r\n                                                    multiline\r\n                                                    value={this.state.content}\r\n                                                    label=\"Name\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <IconButton onClick={() => { this.insertContent() }} style={{ borderRadius: 2 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </div>\r\n                    </div>\r\n                    <Button style={{ marginTop: 5, marginBottom: 5 }} onClick={() => { this.save() }} variant='outlined'>\r\n                        Save\r\n                    </Button>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewWidget","import React from 'react'\r\nimport Action from '../../../components/Action'\r\nimport { FormControl, Select, InputLabel, MenuItem, Paper, Typography, Divider, IconButton, TextField, TableCell, TableBody, TableContainer, TableHead, Table, TableRow } from '@material-ui/core'\r\nimport { Close, Add, Delete, ArrowUpward, ArrowDownward } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nclass Widget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            id: props.match.params.id,\r\n            contentSources: [],\r\n            reference: '',\r\n            source: null,\r\n            action: null,\r\n            type: \"title\",\r\n            content: \"\",\r\n            sources: [],\r\n            types: [],\r\n            widget: null,\r\n            needSave: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/widgets/\" + this.state.id)\r\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\r\n        } else if (resultConfiguration.error) {\r\n            this.setState({ enabled: true, message: resultConfiguration.package + \" : \" + resultConfiguration.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", loading: false, widget: result.data, sources: resultSource.data, types: resultConfiguration.data.contents.types})\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        let result = await new Request().delete({}).fetch(\"/api/widgets/\" + this.state.widget.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/widget')\r\n        }\r\n    }\r\n\r\n    async deleteSource(source) {\r\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.widget.id + \"/sources/\" + source)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertSource() {\r\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let find = false\r\n        this.state.widget.sources.forEach(contentSource => {\r\n            if (contentSource.reference == this.state.reference) {\r\n                find = true\r\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\r\n            }\r\n        })\r\n        if (find) {\r\n            return\r\n        }\r\n        let tmpsettings = []\r\n        let action = this.state.action\r\n        for (let index = 0; index < action.settings.length; index++) {\r\n            let argument = action.settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmpsettings.push({ reference: argument.id, value: value })\r\n        }\r\n        let result = await new Request().post({\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: tmpsettings,\r\n            reference: this.state.reference\r\n        }).fetch(\"/api/widgets/\" + this.state.id + \"/sources\")\r\n\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ action: null, source: null, reference: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) {\r\n                this.setState({ action: action })\r\n            }\r\n        })\r\n    }\r\n\r\n    async setContent() {\r\n        let result = await new Request().post({type: this.state.type, content: this.state.content}).fetch(\"/api/widgets/\" + this.state.id + \"/contents\")\r\n        if(result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ content: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteContent(id) {\r\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.id + \"/contents/\" + id)\r\n        if(result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async update(content) {\r\n        let widget = this.state.widget\r\n        let contents = widget.contents.map(pContent => {\r\n            if (pContent.id == content.id) {\r\n                pContent.native = content.native\r\n            }\r\n            return pContent\r\n        })\r\n        widget.contents = contents\r\n        this.setState({ widget: widget, needSave: null })\r\n        let result = await new Request().put({ content: content }).fetch(\"/api/widgets/\" + this.state.widget.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.widget) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' style={{ fontSize: 25 }}>\r\n                                {this.state.widget.reference}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.widget.icon}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Source\r\n                            </Typography>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align='left' >\r\n                                                    <Typography variant='subtitle1'>Reference</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left'>\r\n                                                    <Typography variant='subtitle1' >Source</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1' >Argument</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.widget.sources.map((source, index) => {\r\n                                                    return (\r\n                                                        <TableRow >\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.reference}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\">\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.object}\r\n                                                                </Typography>\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.action}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {\r\n                                                                        source.arguments.map(argument => {\r\n                                                                            return (\r\n                                                                                <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteSource(source.id) }} style={{ borderRadius: 3 }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.contentSources.map((contentSource, index) => {\r\n                                                    return (\r\n                                                        <TableRow >\r\n                                                            <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                                <Typography variant='subtitle1'> {contentSource.reference} </Typography>\r\n                                                                <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\r\n                                                                <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\">\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {JSON.stringify(contentSource.arguments)}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\r\n                                                                    <Close />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <TableRow  >\r\n                                                <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                    <TextField\r\n                                                        onChange={(event) => { this.setState({ reference: event.target.value }) }}\r\n                                                        style={{ width: '100%' }}\r\n                                                        multiline\r\n                                                        value={this.state.reference}\r\n                                                        label=\"Reference\"\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                        <InputLabel>Source</InputLabel>\r\n                                                        <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                                            {\r\n                                                                this.state.sources.map(source => {\r\n                                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                    {\r\n                                                        this.state.source ?\r\n                                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                                <InputLabel>Action</InputLabel>\r\n                                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                                    {\r\n                                                                        this.state.source.actions.map(action => {\r\n                                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                            : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ width: '40%' }}>\r\n                                                    {\r\n                                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                                            <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\r\n                                                                <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\r\n                                                                    {\r\n                                                                        this.state.action.settings.map(setting => {\r\n                                                                            return <Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} />\r\n                                                                        })\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Content\r\n                            </Typography>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align='left' style={{width: '15%'}} >\r\n                                                    <Typography variant='subtitle1'>Type</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left' style={{ width: '80%' }}>\r\n                                                    <Typography variant='subtitle1' >content</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left' style={{width: '20%'}}>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map((content, index) => {\r\n                                                    return (\r\n                                                        <TableRow >\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {content.type.name}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <TextField\r\n                                                                    style={{ width: '100%', marginBottom: 5 }}\r\n                                                                    onChange={(event) => { content.native = event.target.value; this.setState({needSave: index}) }}\r\n                                                                    onBlur={(event) => {this.update(content) }}\r\n                                                                    multiline\r\n                                                                    value={content.native}\r\n                                                                    variant=\"outlined\"\r\n                                                                />\r\n                                                                {\r\n                                                                    content.content.split(\"\\n\").map(_content => {\r\n                                                                        return (\r\n                                                                            <Typography variant='body1' color={this.state.needSave == index ? 'primary' : 'inherit'} style={{ fontWeight: _content.type == 'title' ? 'bold' : 'normal' }}>\r\n                                                                                {_content}\r\n                                                                            </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteContent(content.id) }} style={{ borderRadius: 3 }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <TableRow  >\r\n                                                <TableCell align=\"left\">\r\n                                                    <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\r\n                                                        <InputLabel>Type</InputLabel>\r\n                                                        <Select value={this.state.type} onChange={(event) => { this.setState({ type: event.target.value }) }} label=\"Type\" >\r\n                                                            {\r\n                                                                this.state.types.map(type => {\r\n                                                                    return <MenuItem value={type.id} >{type.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <TextField\r\n                                                        onChange={(event) => { this.setState({ content: event.target.value }) }}\r\n                                                        style={{ width: '100%' }}\r\n                                                        multiline\r\n                                                        value={this.state.content}\r\n                                                        label=\"Name\"\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.setContent() }} style={{ borderRadius: 2 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete() }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Widget","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'moment'\r\nimport { Add, Delete, Settings, QrCode } from '@mui/icons-material'\r\nimport { FormControl, Button, MenuItem, Select, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton } from '@material-ui/core'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Smartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            users: [],\r\n            profiles: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/users\")\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n        } else if (resultProfile.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultProfile.package + \" : \" + resultProfile.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                users: result.data,\r\n                profiles: resultProfile.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/users/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateProfile(user, profile) {\r\n        let result = await new Request().put({\r\n            login: user.login,\r\n            profile: profile\r\n        }).fetch(\"/api/users/\" + user.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <div>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        {this.state.users.sort((a, b) => {\r\n                                            return a.profile > b.profile\r\n                                        }).slice(this.state.page * 10, (this.state.page + 1) * 10).map((user) => (\r\n                                            <TableRow hover key={user.id} style={{ cursor: 'pointer' }}>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='body1'>\r\n                                                        {\r\n                                                            user.login\r\n                                                        }\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <FormControl variant=\"outlined\"  >\r\n                                                        <Select disabled={user.login == 'admin'} value={user.profile} onChange={(event) => { this.updateProfile(user, event.target.value) }} >\r\n                                                            {\r\n                                                                this.state.profiles.map(profile => {\r\n                                                                    return (\r\n                                                                        <MenuItem value={profile.id} >{profile.name}</MenuItem>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.props.history.push('/qrcode/' + btoa(window.location.origin + \"|\" + user.login + \"|\") ) }} style={{ borderRadius: 3 }}>\r\n                                                        <QrCode />\r\n                                                    </IconButton>\r\n                                                    <IconButton onClick={() => { this.props.history.push('/user/' + user.id +  \"/password\") }} style={{ borderRadius: 3 }}>\r\n                                                        <Settings />\r\n                                                    </IconButton>\r\n                                                    <IconButton onClick={() => { this.delete(user.id) }} style={{ borderRadius: 3 }}>\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                                    <Link to=\"/user/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.users.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Smartobject","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewSmartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            profiles: [],\r\n            profile: 1,\r\n            login: \"\",\r\n            password: \"\",\r\n            confirmationPassword: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", profiles: result.data })\r\n        }\r\n    }\r\n\r\n    async add() {\r\n        if(this.state.login.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing login\" })\r\n        } else if(this.state.password.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing password\" })\r\n        } else if(this.state.password != this.state.confirmationPassword) {\r\n                this.setState({ enabled: true, message: \"Passwords are not the same\" })\r\n            } else {\r\n            let result = await new Request().post({login: this.state.login, password: this.state.password, profile: this.state.profile}).fetch(\"/api/users\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/user')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField placeholder='login' variant=\"outlined\" value={this.state.login} onChange={(event) => { this.setState({ login: event.currentTarget.value }) }} />\r\n                            <TextField type='password' placeholder='password' variant=\"outlined\" value={this.state.password} style={{ marginTop: 10 }} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\r\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\r\n                        <FormControl variant=\"outlined\" style={{ width: '100%', marginTop: 10 }} >\r\n                                <Select value={this.state.profile} onChange={(event) => { this.setState({ profile: event.target.value }) }} >\r\n                                    {\r\n                                        this.state.profiles.map(profile => {\r\n                                            return (\r\n                                                <MenuItem value={profile.id} >{profile.name}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSmartobject","import React from 'react'\r\nimport md5 from 'md5'\r\nimport JSONPretty from 'react-json-pretty'\r\n\r\nimport QRCode from 'qrcode.react'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { Close } from '@mui/icons-material'\r\nimport { Paper, Typography, Divider, Button, IconButton } from '@material-ui/core'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass QrCode extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper elevation={2} style={{padding: 10, display:'flex', justifyContent:'center'}} >\r\n                <QRCode style={{borderRadius: 3}} value={this.props.match.params.id} size={256} includeMargin={true} />\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QrCode","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewPassword extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            id: props.match.params.id,\r\n            message: \"\",\r\n            confirmationPassword: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    async changePassword() {\r\n        if(this.state.password.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing password\" })\r\n        } else if(this.state.confirmationPassword.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing confirmation password\" })\r\n        } else if(this.state.password != this.state.confirmationPassword) {\r\n            this.setState({ enabled: true, message: \"Passwords are not the same\" })\r\n        } else {\r\n            let result = await new Request().post({password: this.state.password}).fetch(\"/api/users/\" + this.state.id + \"/password\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/user')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField placeholder='password' type='password' variant=\"outlined\" value={this.state.password} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\r\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.changePassword() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPassword","import React from 'react'\r\nimport { Drawer, List, Typography, Divider, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\r\nimport {ShoppingCart,House,  DevicesOther, ExitToApp, AccountTree, Category, DeviceHub, Https, Extension, Settings, Person} from '@mui/icons-material'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    render() {\r\n        if(this.props.isMobile) {\r\n            return null\r\n        }\r\n        return (\r\n            <Drawer variant=\"persistent\" anchor=\"left\" open={true} style={{ width: 240 }} >\r\n                <div style={{ width: 240, display:'flex', justifyContent:'space-between' }}>\r\n                    <List>\r\n                        <div style={{display:'flex', justifyContent:'flex-start', padding: 5, alignContent:'center', alignSelf:'center', alignItems:'center'}}>\r\n                        <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '7vh', width: '7vh', borderRadius: 7, marginLeft: 15 }} />\r\n                        <div>\r\n                        <Typography variant='h5' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 15, paddingLeft: 10 }}>\r\n                            Intendant\r\n                        </Typography>\r\n                        <Typography variant='subtitle1' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 0, paddingBottom: 15, paddingLeft: 10 }}>\r\n                            Administration\r\n                        </Typography>\r\n                        </div>  \r\n                            </div>\r\n                    \r\n                        <Divider />\r\n                        <Link to=\"/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"smartobject\"}>\r\n                                <ListItemIcon>\r\n                                    <DevicesOther />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Smartobject\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/localisation\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"localisation\"}>\r\n                                <ListItemIcon>\r\n                                    <House />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Room\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/module\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"module\"}>\r\n                                <ListItemIcon>\r\n                                    <Category />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Module\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/widget\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"widget\"} >\r\n                                <ListItemIcon>\r\n                                    <Extension />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Widget\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/process\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"process\"} >\r\n                                <ListItemIcon>\r\n                                    <DeviceHub />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Process\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/routine\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"configuration\"} >\r\n                                <ListItemIcon>\r\n                                    <AccountTree />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Routine\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/user\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"user\"} >\r\n                                <ListItemIcon>\r\n                                    <Person />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"User\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/market\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"market\"} >\r\n                                <ListItemIcon>\r\n                                    <ShoppingCart />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Market\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider />\r\n                        <ListItem button key={\"disconnect\"} onClick={() => {this.props.onDisconnect()}} >\r\n                            <ListItemIcon>\r\n                                <ExitToApp />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"Disconnect\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'moment'\r\nimport { Add } from '@mui/icons-material'\r\nimport { Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton } from '@material-ui/core'\r\nimport Icon from '../../../utils/Icon'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Localisation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            localisations: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/localisations\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.package + \" : \" + result.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                localisations: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <div>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='body1'>\r\n                                                    Reference\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.localisations.slice(this.state.page * 10, (this.state.page + 1) * 10).map((localisation) => (\r\n                                            <Link to={\"/localisation/\" + localisation.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                                <TableRow hover key={localisation.name} style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {capitalizeFirstLetter(localisation.name)}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </Link>\r\n\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                                    <Link to=\"/localisation/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.localisations.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport default Localisation","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@mui/icons-material'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewLocaliation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: \"\"\r\n        }\r\n    }\r\n\r\n\r\n    async add() {\r\n        if (this.state.name === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : name is empty\" })\r\n        } else {\r\n            let result = await new Request().post({name: this.state.name}).fetch(\"/api/localisations\")\r\n            if (result.error) {\r\n                this.setState({\r\n                    enabled: true,\r\n                    message: result.package + \" : \" + result.message\r\n                })\r\n            } else {\r\n                this.props.history.push('/localisation')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'row', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField onChange={(event) => { this.setState({ name: event.nativeEvent.target.value }) }} style={{ width: '150px', marginRight: 10 }} label=\"Name\" variant=\"outlined\" />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewLocaliation","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\nimport { Paper, Typography, TableContainer, TableBody, Divider, ListItem, TableCell, TableRow, Button, TextField, FormControlLabel, IconButton, Switch } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { FileCopy, Delete, Close, Add } from '@mui/icons-material'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass DetailLocalisation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            localisation: null,\r\n            profiles: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let resultLocalisation = await new Request().get().fetch(\"/api/localisations/\" + this.state.id)\r\n        if (resultLocalisation.error || resultProfile.error) {\r\n            this.props.history.push('/localisation')\r\n        } else {\r\n            this.setState({ localisation: resultLocalisation.data, profiles: resultProfile.data })\r\n        }\r\n        this.setState({ loading: null })\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/localisations/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/localisation')\r\n        }\r\n    }\r\n\r\n    async insertProfile(localisation, profile) {\r\n        let result = await new Request().post({idProfile: profile.id, }).fetch(\"/api/localisations/\" + localisation.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(localisation, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/localisations/\" + localisation.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.localisation) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                {capitalizeFirstLetter(this.state.localisation.name)}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10 }}>\r\n                            {\r\n                                this.state.localisation.smartobjects.map(smartobject => {\r\n                                    return (\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <Typography variant='body1' >\r\n                                                {capitalizeFirstLetter(smartobject.reference)}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map(profile => {\r\n                                    let state = false\r\n                                    this.state.localisation.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={\r\n                                                <Switch\r\n                                                    checked={state}\r\n                                                    onChange={() => { \r\n                                                        state ? this.deleteProfile(this.state.localisation,profile) : this.insertProfile(this.state.localisation,profile)\r\n                                                    }}\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            } label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        { this.state.message }\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport default DetailLocalisation","import React from 'react'\r\nimport { Typography, Button, ListItemText, ListItem, Divider, List, Paper } from '@material-ui/core'\r\nimport Theme from '../../../Theme'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Security extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            profiles: [],\r\n            selectProfile: '',\r\n            authorizations: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            if (this.state.selectProfile === \"\") {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    profiles: result.data,\r\n                    selectProfile: result.data[0].id\r\n                })\r\n                this.onSelectProfile(result.data[0].id)\r\n            } else {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    profiles: result.data\r\n                })\r\n                this.onSelectProfile(this.state.selectProfile)\r\n            }\r\n        }\r\n    }\r\n\r\n    getColor(type) {\r\n        switch (type) {\r\n            default:\r\n            case 'GET':\r\n                return Theme.palette.success.main\r\n            case 'POST':\r\n                return Theme.palette.error.main\r\n            case 'PUT':\r\n                return Theme.palette.warning.main\r\n            case 'DELETE':\r\n                return Theme.palette.info.main\r\n        }\r\n    }\r\n\r\n    async onSelectProfile(id) {\r\n        this.setState({\r\n            selectProfile: id\r\n        })\r\n        let result = await new Request().get().fetch(\"/api/profiles/\" + id + \"/authorizations\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                authorizations: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async updateSecure(profile, pAuthorization, secure) {\r\n        let result = await new Request().post({ authorization: pAuthorization, secure: secure }).fetch(\"/api/profiles/\" + profile + \"/authorizations\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper style={{ padding: 10, marginBottom: 10, flexDirection: 'row', display: 'flex' }}>\r\n                    {\r\n                        this.state.profiles.map(profile => {\r\n                            return (\r\n                                <Button style={{ marginLeft: 5, marginRight: 5 }} onClick={() => { this.onSelectProfile(profile.id) }} variant={this.state.selectProfile === profile.id ? 'contained' : 'outlined'} >\r\n                                    {\r\n                                        profile.name\r\n                                    }\r\n                                </Button>\r\n                            )\r\n                        })\r\n                    }\r\n                </Paper>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\r\n                        <ListItem >\r\n                            <ListItemText >\r\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.error.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    Refusé\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        {\r\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 0 }).map(authorization => {\r\n                                return (\r\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 1) }}>\r\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\r\n                                                    {authorization.method}\r\n                                                </Typography>\r\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\r\n                                                    {authorization.reference}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\r\n                        <ListItem >\r\n                            <ListItemText >\r\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.success.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    Authorisé\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        {\r\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 1 }).map(authorization => {\r\n                                return (\r\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 0) }} >\r\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\r\n                                                    {authorization.method}\r\n                                                </Typography>\r\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\r\n                                                    {authorization.reference}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Security","import React from 'react'\r\nimport SmartObject from './contents/SmartObject/List'\r\nimport DetailSmartObject from './contents/SmartObject/Detail'\r\nimport NewSmartObject from './contents/SmartObject/New'\r\nimport ListProcess from './contents/Process/List'\r\nimport NewProcess from './contents/Process/New'\r\nimport DetailProcess from './contents/Process/Detail'\r\nimport Routine from './contents/Routine/List'\r\nimport NewRoutine from './contents/Routine/New'\r\nimport DetailRoutine from './contents/Routine/Detail'\r\nimport Module from './contents/Module/List'\r\nimport DetailModule from './contents/Module/Detail'\r\nimport Configuration from './contents/Configuration/List'\r\nimport Market from './contents/Market/List'\r\nimport Widget from './contents/Widget/List'\r\nimport NewWidget from './contents/Widget/New'\r\nimport DetailWidget from './contents/Widget/Detail'\r\nimport User from './contents/User/List'\r\nimport NewUser from './contents/User/New'\r\nimport QrCode from './contents/QrCode/QrCode'\r\nimport NewPassword from './contents/User/NewPassword'\r\nimport Sidebar from '../components/Sidebar'\r\nimport Localisation from './contents/Localisation/List'\r\nimport NewLocalisation from './contents/Localisation/New'\r\nimport DetailLocalisation from './contents/Localisation/Detail'\r\nimport Authorisation from './contents/Authorisation/List'\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\n\r\nclass Main extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n\r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router basename='/admin'>\r\n                <Sidebar isMobile={this.state.isMobile} onDisconnect={() => { this.props.onDisconnect() }} />\r\n                <main style={{ padding: 20, width: this.state.isMobile ? '95vw' :  '80vw', height: '100vh' }} >\r\n                    <div style={{ marginLeft: this.state.isMobile ? 0 : 240, marginTop: this.state.isMobile ? 0 : 32 }}>\r\n                        <Switch>\r\n                            <Route exact path=\"/smartobject\" component={SmartObject} />\r\n                            <Route exact path=\"/smartobject/new\" component={NewSmartObject} />\r\n                            <Route exact path=\"/smartobject/:id\" component={DetailSmartObject} />\r\n                            <Route exact path=\"/module\" component={Module} />\r\n                            <Route exact path=\"/module/:id\" component={DetailModule} />\r\n                            <Route exact path=\"/routine\" component={Routine} />\r\n                            <Route exact path=\"/routine/new\" component={NewRoutine} />\r\n                            <Route exact path=\"/routine/:id\" component={DetailRoutine} />\r\n                            <Route exact path=\"/widget\" component={Widget} />\r\n                            <Route exact path=\"/widget/new\" component={NewWidget} />\r\n                            <Route exact path=\"/widget/authorization\" component={Widget} />\r\n                            <Route exact path=\"/widget/authorization\" component={Widget} />\r\n                            <Route exact path=\"/widget/:id\" component={DetailWidget} />\r\n                            <Route exact path=\"/process\" component={ListProcess} />\r\n                            <Route exact path=\"/process/new\" component={NewProcess} />\r\n                            <Route exact path=\"/process/:id\" component={DetailProcess} />\r\n                            <Route exact path=\"/qrcode/:id\" component={QrCode} />\r\n                            <Route exact path=\"/user\" component={User} />\r\n                            <Route exact path=\"/user/new\" component={NewUser} />\r\n                            <Route exact path=\"/user/:id/password\" component={NewPassword} />\r\n                            <Route exact path=\"/configuration\" component={Configuration} />\r\n                            <Route exact path=\"/market\" component={Market} />\r\n                            <Route exact path=\"/localisation\" component={Localisation} />\r\n                            <Route exact path=\"/localisation/new\" component={NewLocalisation} />\r\n                            <Route exact path=\"/localisation/:id\" component={DetailLocalisation} />\r\n                            <Route exect path=\"/authorisation\" component={Authorisation} />\r\n                        </Switch>\r\n                    </div>\r\n                </main>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport Package from '../../package.json'\r\nimport { Paper, TextField, Button, Typography } from '@material-ui/core'\r\nimport Alert from '../components/Alert'\r\nimport Main from './Main'\r\nimport Request from '../utils/Request'\r\n\r\nclass GetStarted extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            authentification: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            password: \"\",\r\n            confirmePassword: \"\",\r\n            login: \"admin\",\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n    \r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n\r\n    async register() {\r\n        if (this.state.password == this.state.confirmePassword) {\r\n            let result = await new Request().put({ password: this.state.password }).fetch(\"/api/getstarted\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                this.props.onFinish()\r\n            }\r\n        } else {\r\n            this.setState({ enabled: true, message: 'Password and password confirmation is not the same' })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '30vw', textAlign: 'center' }}>\r\n                <div >\r\n                    <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7 }} />\r\n                    <div style={{ fontSize: 70, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\r\n                        Intendant\r\n                    </div>\r\n                    <div style={{ fontSize: 14, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 30 }}>\r\n                        At the first launch, you must set the admin password\r\n                    </div>\r\n                </div>\r\n                <div noValidate autoComplete=\"off\" style={{ marginBottom: 10}}>\r\n                    <div style={{ marginTop: 10 }}>\r\n                        <TextField value={this.state.password} fullWidth label=\"Password\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\r\n                    </div>\r\n                    <div style={{ marginTop: 10 }}>\r\n                        <TextField value={this.state.confirmePassword} fullWidth label=\"Confirmation\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ confirmePassword: event.nativeEvent.target.value }) }} />\r\n                    </div>\r\n                    <div style={{  marginTop: 15, textAlign: 'end' }}>\r\n                        <Button variant='plain' onClick={() => { this.register() }}  >\r\n                            Let's get started\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GetStarted;\r\n","import React from 'react'\r\nimport Package from '../../package.json'\r\nimport { Paper, TextField, Button, Typography, Switch, IconButton } from '@material-ui/core'\r\nimport Alert from '../components/Alert'\r\nimport Main from './Main'\r\nimport GetStarted from './GetStarted'\r\nimport Request from '../utils/Request'\r\nimport { Settings } from '@mui/icons-material'\r\n\r\nclass Authentification extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            authentification: true,\r\n            enabled: false,\r\n            getStarted: false,\r\n            message: \"\",\r\n            password: \"\",\r\n            customAddress: false,\r\n            address: window.location.origin,\r\n            login: \"admin\",\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n\r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let service = localStorage.getItem(\"server\")\r\n        if (service) {\r\n            this.setState({ address: service.replace(\"http://\", \"\") })\r\n        }\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n\r\n    async login() {\r\n        if (await this.checkServer()) {\r\n            let result = await new Request().post({ login: this.state.login, password: this.state.password }).fetch(\"/api/authentification\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\r\n            } else {\r\n                localStorage.setItem(\"authorization\", result.token)\r\n                this.setState({ enabled: false, message: \"\", authentification: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    disconnect() {\r\n        localStorage.removeItem(\"authorization\")\r\n        this.setState({ authentification: true, password: \"\" })\r\n    }\r\n\r\n    async checkServer() {\r\n        let ok = true\r\n        let protocol = window.location.protocol + \"//\"\r\n        if(this.state.address.split(\"://\").length > 1) {\r\n            protocol = \"\"\r\n        }\r\n        try {\r\n            let result = await fetch(protocol + this.state.address + \"/api/ping\", {}, 2000)\r\n            let resultJSON = await result.json()\r\n            if (resultJSON.message != \"pong\") {\r\n                this.setState({ enabled: true, message: 'Connection to server failed' })\r\n                ok = false\r\n            } else {\r\n                localStorage.setItem(\"server\",protocol + this.state.address)\r\n                if (resultJSON.getStarted) {\r\n                    this.setState({ getStarted: true })\r\n                    return false\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.setState({ enabled: true, message: 'Connection to server failed' })\r\n            ok = false\r\n        }\r\n        return ok\r\n    }\r\n\r\n    render() {\r\n        if (this.state.getStarted) {\r\n            return (\r\n                <GetStarted onFinish={() => { this.setState({ getStarted: false }) }} />\r\n            )\r\n        } else {\r\n            if (this.state.authentification) {\r\n                return (\r\n                    <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '25vw', textAlign: 'center' }}>\r\n                        <div>\r\n                            <div style={{ marginBottom: 50 }}>\r\n                                <img  onClick={() => {this.setState({customAddress: !this.state.customAddress}) }}  src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7, cursor: 'pointer' }} />\r\n                                <div style={{ fontSize: 55, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\r\n                                    Intendant\r\n                                </div>\r\n                                <div style={{ fontSize: 20, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 15 }}>\r\n                                    Administration\r\n                                </div>\r\n                            </div>\r\n                            <form noValidate onSubmit={(e) => { e.preventDefault(); this.login() }} autoComplete=\"off\" style={{ marginBottom: 10 }}>\r\n                                {\r\n                                    this.state.customAddress ?\r\n                                        <div style={{ padding: 5 }}>\r\n                                            <TextField value={this.state.address} fullWidth label=\"Server address\" autoFocus onChange={(event) => { this.setState({ address: event.nativeEvent.target.value }) }} />\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                <div style={{ padding: 5 }}>\r\n                                    <TextField value={this.state.login} fullWidth label=\"Login\" autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ login: event.nativeEvent.target.value }) }} />\r\n                                </div>\r\n                                <div style={{ padding: 5 }}>\r\n                                    <TextField value={this.state.password} fullWidth label=\"Password\" type='password' autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\r\n                                </div>\r\n                                <div style={{ padding: 5, marginTop: 5, textAlign: 'end' }}>\r\n                                    <Button type='submit' variant='plain' on onSubmit={() => { this.login() }} onClick={() => { this.login() }}  >\r\n                                        Connection\r\n                                    </Button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                            {this.state.message}\r\n                        </Alert>\r\n                    </Paper>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Main onDisconnect={() => { this.disconnect() }} />\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Authentification;\r\n","import Authentification from './screens/Authentification'\r\nimport Theme from './Theme'\r\nimport { ThemeProvider, CssBaseline, Box } from '@material-ui/core'\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={Theme} >\r\n      <CssBaseline />\r\n      <Box style={{ userSelect: 'none', outline: 'none', WebkitTapHighlightColor: 'rgba(41,108,71,0.33)', height: '100vh', width: '100wh', backgroundColor: Theme.palette.background.default, display: 'flex', flexDirection: 'column', alignSelf: 'center', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\r\n        <Authentification />\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}