{"version":3,"file":"static/js/739.b8659724.chunk.js","mappings":"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","sources":["components/NewTypePie.js","screens/contents/Rapport/New.js","utils/Utils.js"],"sourcesContent":["import React from 'react'\r\nimport { Grid, Card, CardActionArea, Box, Typography } from '@mui/material'\r\nimport { LineChart, Line, XAxis, YAxis, PieChart, Pie, ResponsiveContainer } from 'recharts';\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst optionLine = {\r\n    chart: {\r\n        id: \"basic-bar\",\r\n        zoom: {\r\n            enabled: false\r\n        },\r\n        toolbar: {\r\n            show: false\r\n        },\r\n        offsetX: -5,\r\n        animations: {\r\n            enabled: true,\r\n            easing: 'easeout',\r\n            animateGradually: {\r\n                enabled: true\r\n            }\r\n        }\r\n    },\r\n    grid: {\r\n        show: false\r\n    },\r\n    xaxis: {\r\n        labels: {\r\n            show: false\r\n        },\r\n        axisBorder: {\r\n            show: false\r\n        },\r\n        axisTicks: {\r\n            show: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        min: 1,\r\n        max: 10,\r\n        labels: {\r\n            show: false\r\n        },\r\n        axisBorder: {\r\n            show: false\r\n        },\r\n        axisTicks: {\r\n            show: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    tooltip: {\r\n        enabled: false,\r\n        theme: 'dark',\r\n        x: {\r\n            formatter: (x) => {\r\n                return Moment.unix(x).format(\"HH:mm\")\r\n            }\r\n        }\r\n    },\r\n    title: {\r\n        text: \"Line Chart\",\r\n        align: 'center',\r\n        style: {\r\n            color: \"#ffffff\",\r\n            fontWeight: 500,\r\n            fontSize: 18,\r\n            fontFamily: 'Poppins,sans-serif',\r\n        }\r\n    },\r\n    subtitle: {\r\n        text: \"Data is sort per time\",\r\n        align: 'center',\r\n        style: {\r\n            color: \"rgba(255, 255, 255, 0.7)\",\r\n            fontSize: 14,\r\n            fontWeight: 400,\r\n            fontFamily: 'Poppins,sans-serif',\r\n        }\r\n    },\r\n    stroke: {\r\n        width: 6,\r\n        curve: 'smooth'\r\n    },\r\n    colors: ['rgba(255,255,255,0.8)'],\r\n    fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n            gradientToColors: ['rgba(255,255,255,0.8)', 'rgba(255,255,255,0.8)']\r\n        },\r\n    }\r\n}\r\n\r\nclass NewTypePie extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Grid item xs={12} md={6} lg={4} >\r\n                <Card variant='outlined'   >\r\n                    <CardActionArea onClick={() => { this.props.onSelect(\"lineChart\") }} >\r\n                        <Chart options={optionLine} series={[\r\n                            {\r\n                                name: \"test\",\r\n                                data: [7, 6, 8, 6, 4, 9]\r\n                            }\r\n                        ]} type=\"line\" height={300} />\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTypePie","import React from 'react'\r\nimport Request from '../../../utils/Request'\r\n\r\nimport { Grid, Card, Step, StepLabel, Stepper, Typography, Paper, CardActionArea } from '@mui/material'\r\nimport NewTypePie from '../../../components/NewTypePie'\r\nimport Loading from '../../../components/Loading'\r\nimport Action from '../../../components/Action'\r\nimport NextButton from '../../../components/NextButton'\r\nimport Utils from '../../../utils/Utils'\r\n\r\nconst INTERVAL = [\r\n    {\r\n        name: \"1 minute\",\r\n        interval: 60,\r\n    },\r\n    {\r\n        name: \"5 minutes\",\r\n        interval: 300,\r\n    },\r\n    {\r\n        name: \"15 minutes\",\r\n        interval: 900,\r\n    },\r\n    {\r\n        name: \"30 minutes\",\r\n        interval: 1800,\r\n    },\r\n    {\r\n        name: \"1 hour\",\r\n        interval: 3600,\r\n    },\r\n    {\r\n        name: \"3 hours\",\r\n        interval: 10800,\r\n    },\r\n    {\r\n        name: \"6 hours\",\r\n        interval: 21600,\r\n    },\r\n    {\r\n        name: \"12 hours\",\r\n        interval: 43200,\r\n    },\r\n    {\r\n        name: \"24 hours\",\r\n        interval: 86400,\r\n    }\r\n]\r\n\r\n\r\nclass NewRapport extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            step: 0,\r\n            reference: \"\",\r\n            interval: 0,\r\n            configurations: [],\r\n            configuration: {},\r\n            settings: []\r\n        }\r\n        props.setTitle(\"New rapport\")\r\n        props.setActionType(\"return\")\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModules = await new Request().get().fetch(\"/api/modules\")\r\n        let resultSmartobjects = await new Request().get().fetch(\"/api/smartobjects\")\r\n        if (resultModules.error) {\r\n            this.props.setMessage(resultModules.package + \" : \" + resultModules.message)\r\n        } else if (resultSmartobjects.error) {\r\n            this.props.setMessage(resultSmartobjects.package + \" : \" + resultSmartobjects.message)\r\n        } else {\r\n\r\n            let configurations = []\r\n\r\n            resultSmartobjects.data.forEach(smartobject => {\r\n                if (Array.isArray(smartobject.dataSources) && smartobject.dataSources.length > 0) {\r\n                    configurations.push(smartobject)\r\n                }\r\n            })\r\n            resultModules.data.forEach(pModule => {\r\n                if (Array.isArray(pModule.dataSources) && pModule.dataSources.length > 0) {\r\n                    configurations.push({\r\n                        configuration: pModule,\r\n                        name: pModule.name,\r\n                        reference: pModule.reference,\r\n                        widgets: pModule.widgets,\r\n                        dataSources: pModule.dataSources,\r\n                        actions: pModule.actions\r\n                    })\r\n                }\r\n            })\r\n            if (configurations.length == 0) {\r\n                this.props.setMessage(\"No sources available\")\r\n                this.props.history.push('/rapport')\r\n            } else {\r\n                this.setState({ loading: false, configurations: configurations })\r\n            }\r\n\r\n            this.setState({ loading: false, configurations: configurations })\r\n        }\r\n    }\r\n\r\n    selectSource(dataSource) {\r\n        this.setState({ open: false })\r\n        let settings = []\r\n\r\n        this.state.configuration.actions.forEach(action => {\r\n            if (action.id == dataSource.action) {\r\n                settings = action.settings\r\n            }\r\n        })\r\n\r\n        if (settings.length == 0) {\r\n            this.setState({ step: 4, reference: dataSource.id, settings: settings })\r\n        } else {\r\n            this.setState({ step: 3, reference: dataSource.id, settings: settings })\r\n        }\r\n    }\r\n\r\n    getStep() {\r\n        switch (this.state.step) {\r\n            case 0:\r\n                return (\r\n                    <NewTypePie onSelect={(type) => { this.setState({ type: type, step: 1 }) }} />\r\n                )\r\n            case 1:\r\n                return this.state.configurations.map((configuration, index) => {\r\n                    if (configuration.module == \"module\") {\r\n                        return (\r\n                            <Grid key={index} item xs={12} md={12} lg={12} >\r\n                                <Card variant='outlined' >\r\n                                    <CardActionArea onClick={() => { this.setState({ configuration: configuration, step: 2 }) }} style={{ padding: 10 }}>\r\n                                        <Typography variant='subtitle1'  >\r\n                                            {String.capitalizeFirstLetter(configuration.name)}\r\n                                        </Typography>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Grid key={index} item xs={12} md={12} lg={12} >\r\n                                <Card variant='outlined'   >\r\n                                    <CardActionArea onClick={() => { this.setState({ configuration: configuration, step: 2 }) }} style={{ padding: 10 }} >\r\n                                        <Typography variant='subtitle1'  >\r\n                                            {String.capitalizeFirstLetter(configuration.reference)}\r\n                                        </Typography>\r\n                                        {\r\n                                            configuration.room &&\r\n                                            <Typography variant='body2' color=\"text.secondary\"  >\r\n                                                {String.capitalizeFirstLetter(configuration.room.name)}\r\n                                            </Typography>\r\n                                        }\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                })\r\n            case 2:\r\n\r\n                return this.state.configuration.dataSources.map((dataSource, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={12} md={12} lg={12} >\r\n                            <Card variant='outlined'   >\r\n                                <CardActionArea onClick={() => { this.selectSource(dataSource) }} style={{ padding: 10 }} >\r\n                                    <Typography variant='subtitle1' >\r\n                                        {String.capitalizeFirstLetter(dataSource.id)}\r\n                                    </Typography>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            case 3:\r\n                return (\r\n                    <>\r\n                        {\r\n                            this.state.settings.map((setting, index) => {\r\n                                return (\r\n                                    <Grid key={index} item xs={12} md={12} lg={12} >\r\n                                        <Card variant='outlined' style={{ padding: 10 }}>\r\n                                            <Action options={setting.options} label={String.capitalizeFirstLetter(setting.id)} setState={this.setState.bind(this)} id={\"rapport-\" + setting.id} action={setting} />\r\n                                        </Card>\r\n                                    </Grid>\r\n                                )\r\n                            })\r\n                        }\r\n                        <NextButton xs={12} md={12} lg={12} onClick={() => { this.setState({ step: 4 }) }} />\r\n                    </>\r\n                )\r\n            case 4:\r\n                return INTERVAL.map((interval, index) => {\r\n                    return (\r\n                        <Grid key={index} item xs={12} md={12} lg={12} >\r\n                            <Card variant='outlined'   >\r\n                                <CardActionArea onClick={() => { this.setState({ loading: true, interval: interval.interval }, () => { this.submit() }) }} style={{ padding: 10 }} >\r\n                                    <Typography variant='subtitle1'  >\r\n                                        {\"Each \" + String.capitalizeFirstLetter(interval.name)}\r\n                                    </Typography>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    )\r\n                })\r\n        }\r\n    }\r\n\r\n    async submit() {\r\n\r\n        let settings = []\r\n        let resetState = {}\r\n        for (let indexSettings = 0; indexSettings < this.state.settings.length; indexSettings++) {\r\n            let setting = this.state.settings[indexSettings]\r\n            resetState[\"rapport-\" + setting.id] = null\r\n            settings.push({\r\n                reference: setting.id,\r\n                value: this.state[\"rapport-\" + setting.id] ? this.state[\"rapport-\" + setting.id] : null,\r\n                type: typeof this.state[\"rapport-\" + setting.id]\r\n            })\r\n        }\r\n        let result = await new Request().post({\r\n            reference: this.state.reference,\r\n            chart: this.state.type,\r\n            interval: this.state.interval,\r\n            type: this.state.configuration.configuration.module,\r\n            object: this.state.configuration.configuration.module == \"smartobject\" ? this.state.configuration.id : Utils.getSum(this.state.configuration.name),\r\n            settings: settings\r\n        }).fetch(\"/api/rapports\")\r\n\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n        } else {\r\n            document.getElementById('main').scroll({\r\n                top: 0,\r\n                left: 0\r\n            })\r\n            this.props.history.push('/rapport')\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Paper variant=\"outlined\" style={{ padding: 12, justifyContent: 'left' }}>\r\n                    <Typography variant='h6' fontWeight='bold' >New rapport</Typography>\r\n                    <Typography variant='subtitle2' color=\"text.secondary\" >Capture your data</Typography>\r\n                </Paper>\r\n                <Loading loading={this.state.loading}>\r\n                    <Card variant='outlined' style={{ padding: 10, marginTop: 8 }}>\r\n                        <Stepper activeStep={this.state.step} >\r\n                            <Step key={\"type\"}>\r\n                                <StepLabel>{\"Type\"}</StepLabel>\r\n                            </Step>\r\n                            <Step key={\"source\"}>\r\n                                <StepLabel>{\"Source\"}</StepLabel>\r\n                            </Step>\r\n                            <Step key={\"data\"}>\r\n                                <StepLabel>{\"Data\"}</StepLabel>\r\n                            </Step>\r\n                            <Step key={\"settings\"}>\r\n                                <StepLabel>{\"Settings\"}</StepLabel>\r\n                            </Step>\r\n                            <Step key={\"interval\"}>\r\n                                <StepLabel>{\"Interval\"}</StepLabel>\r\n                            </Step>\r\n                        </Stepper>\r\n                    </Card>\r\n                    <Grid container spacing={1} style={{ marginTop: 0 }} >\r\n                        {this.getStep()}\r\n                    </Grid>\r\n                </Loading>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewRapport","class Utils {\r\n\r\n    static getSum(s = \"\") {\r\n        return s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);     \r\n    }\r\n\r\n}\r\nexport default Utils"],"names":["optionLine","chart","id","zoom","enabled","toolbar","show","offsetX","animations","easing","animateGradually","grid","xaxis","labels","axisBorder","axisTicks","yaxis","min","max","dataLabels","tooltip","theme","x","formatter","Moment","unix","format","title","text","align","style","color","fontWeight","fontSize","fontFamily","subtitle","stroke","width","curve","colors","fill","type","gradient","gradientToColors","NewTypePie","Grid","item","xs","md","lg","Card","variant","CardActionArea","onClick","props","onSelect","options","series","name","data","height","React","INTERVAL","interval","NewRapport","state","loading","step","reference","configurations","configuration","settings","setTitle","setActionType","Request","get","fetch","resultModules","resultSmartobjects","error","this","setMessage","package","message","forEach","smartobject","Array","isArray","dataSources","length","push","pModule","widgets","actions","history","setState","dataSource","open","action","map","index","module","padding","Typography","String","capitalizeFirstLetter","room","selectSource","setting","Action","label","bind","NextButton","submit","resetState","indexSettings","value","post","object","Utils","result","document","getElementById","scroll","top","left","Paper","justifyContent","Loading","marginTop","Stepper","activeStep","Step","StepLabel","container","spacing","getStep","s","split","reduce","a","b","charCodeAt"],"sourceRoot":""}