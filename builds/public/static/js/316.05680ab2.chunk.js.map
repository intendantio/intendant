{"version":3,"file":"static/js/316.05680ab2.chunk.js","mappings":"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","sources":["components/views/AddButton.js","screens/contents/Process/List.js","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/RadioButtonChecked.js","../node_modules/@mui/icons-material/esm/ToggleOff.js","../node_modules/@mui/icons-material/esm/ToggleOn.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js"],"sourcesContent":["import React from 'react'\r\nimport { Card, IconButton } from '@mui/material'\r\nimport { Add } from '@mui/icons-material'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction AddButton(props) {\r\n    return (\r\n        <Card variant='outlined' style={{ width: 'min-content', marginTop: 8, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n            <Link to={props.to}>\r\n                <IconButton style={{borderRadius: 0 }} >\r\n                    <Add  />\r\n                </IconButton>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default AddButton","import React from 'react'\r\nimport { ToggleOff, ToggleOn, RadioButtonChecked } from '@mui/icons-material'\r\nimport { Typography, Paper, Grid, Card, CardActionArea, Box } from '@mui/material'\r\nimport Desktop from '../../../components/Desktop'\r\nimport Loading from '../../../components/Loading'\r\nimport Request from '../../../utils/Request'\r\n\r\nimport AddButton from '../../../components/views/AddButton'\r\n\r\n\r\nclass Process extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            processes: []\r\n        }\r\n        props.setTitle(\"Process\")\r\n        props.setActionType(\"list\")\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/processes\")\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n        } else {\r\n            this.setState({ loading: false, processes: result.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Desktop isMobile={this.props.isMobile}>\r\n                    <Paper variant=\"outlined\" style={{ padding: 12, justifyContent: 'left' }}>\r\n                        <Typography variant='h6' fontWeight='bold' >Process</Typography>\r\n                        <Typography variant='subtitle2' color=\"text.secondary\" >Do multiple action at once</Typography>\r\n                    </Paper>\r\n                </Desktop>\r\n                <Loading loading={this.state.loading}>\r\n                    <Grid container spacing={1} style={{ marginTop: 0 }}>\r\n                        {\r\n                            this.state.processes.length == 0 ?\r\n                                <Grid item xs={12} md={12} lg={12}>\r\n                                    <Card variant='outlined' style={{ padding: 12 }}  >\r\n                                        <Typography variant='subtitle1' color=\"text.secondary\" >You have not added a process</Typography>\r\n                                    </Card>\r\n                                </Grid>\r\n                                :\r\n                                this.state.processes.map(process => {\r\n                                    return (\r\n                                        <Grid item xs={12} md={12} lg={12} >\r\n                                            <Card variant='outlined'   >\r\n                                                <CardActionArea style={{ padding: 12, display: 'flex', flexDirection: 'row', justifyContent: 'flex-start' }} onClick={() => { this.props.history.push('/process/' + process.id) }}  >\r\n                                                    <Box style={{ display: 'flex', justifyContent: 'center', alignSelf: 'center', marginRight: 16 }}>\r\n                                                        {\r\n                                                            process.mode == \"button\" ?\r\n                                                                <RadioButtonChecked fontSize='large' /> :\r\n\r\n                                                                process.state == \"on\" ?\r\n                                                                    <ToggleOn fontSize='large' />\r\n                                                                    :\r\n                                                                    <ToggleOff fontSize='large' />\r\n                                                        }\r\n                                                    </Box>\r\n                                                    <Box>\r\n                                                        <Typography variant='subtitle1'  >\r\n                                                            {process.description.length == 0 ? \"No name\" : process.description}\r\n                                                        </Typography>\r\n                                                        <Typography variant='body2' color=\"text.secondary\"  >\r\n                                                            {\r\n                                                                process.mode == \"button\" ?\r\n                                                                    process.description_on\r\n                                                                    :\r\n                                                                    process.description_on + \" / \" + process.description_off\r\n                                                            }\r\n                                                        </Typography>\r\n                                                    </Box>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    )\r\n                                })\r\n                        }\r\n                    </Grid>\r\n                    <AddButton to=\"/process/new\" />\r\n                </Loading>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Process","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonChecked');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h10c2.76 0 5-2.24 5-5s-2.24-5-5-5zM7 15c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z\"\n}), 'ToggleOff');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h10c2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 8c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z\"\n}), 'ToggleOn');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: theme.palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;"],"names":["props","variant","style","width","marginTop","alignContent","justifyContent","alignSelf","to","borderRadius","Process","state","loading","processes","setTitle","setActionType","Request","get","fetch","result","error","this","setMessage","package","message","setState","data","isMobile","padding","fontWeight","color","container","spacing","length","item","xs","md","lg","map","process","display","flexDirection","onClick","history","push","id","marginRight","mode","fontSize","description","description_on","description_off","React","createSvgIcon","_jsx","d","getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","name","overridesResolver","styles","root","theme","textAlign","cardActionAreaClasses","opacity","palette","action","hoverOpacity","focusOpacity","CardActionAreaFocusHighlight","focusHighlight","overflow","pointerEvents","position","top","right","bottom","left","backgroundColor","transition","transitions","create","duration","short","inProps","ref","useThemeProps","children","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","focusVisible"],"sourceRoot":""}