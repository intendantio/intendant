{"version":3,"file":"static/js/454.ed1a511e.chunk.js","mappings":"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","sources":["components/views/SaveButton.js","screens/contents/User/New.js","../node_modules/@mui/icons-material/esm/Save.js"],"sourcesContent":["import React from 'react'\r\nimport { Card, IconButton } from '@mui/material'\r\nimport { Save } from '@mui/icons-material'\r\n\r\nfunction SaveButton(props) {\r\n    return (\r\n        <Card variant='outlined' style={{ width: 'min-content', marginTop: 8, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n            <IconButton style={{borderRadius: 0 }} onClick={() => { props.onClick && props.onClick() }}>\r\n                <Save />\r\n            </IconButton>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SaveButton","import React from 'react'\r\nimport { TextField, FormControl, Radio, Typography, Paper, Grid, Card, RadioGroup, FormControlLabel } from '@mui/material'\r\nimport SaveButton from '../../../components/views/SaveButton'\r\nimport Desktop from '../../../components/Desktop'\r\nimport Request from '../../../utils/Request'\r\nimport Loading from '../../../components/Loading'\r\n\r\nclass NewUser extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            profiles: [],\r\n            profile: {\r\n                id: 0\r\n            },\r\n            login: \"\",\r\n            loading: true,\r\n            password: \"\",\r\n            confirmationPassword: \"\"\r\n        }\r\n        props.setTitle(\"New user\")\r\n        props.setActionType(\"return\")\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.props.setMessage(result.package + \" : \" + result.message)\r\n            this.props.history.push('/users')\r\n        } else {\r\n            this.setState({ profiles: result.data, profile: result.data[0], loading: false })\r\n        }\r\n    }\r\n\r\n    async add() {\r\n        if (this.state.login.length == 0) {\r\n            this.props.setMessage(\"Missing login\")\r\n        } else if (this.state.password.length == 0) {\r\n            this.props.setMessage(\"Missing password\")\r\n        } else if (this.state.password != this.state.confirmationPassword) {\r\n            this.props.setMessage(\"Passwords are not the same\")\r\n        } else {\r\n            let result = await new Request().post({ login: this.state.login, password: this.state.password, profile: this.state.profile.id, imei: \"\" }).fetch(\"/api/users\")\r\n            if (result.error) {\r\n                this.props.setMessage(result.package + \" : \" + result.message)\r\n            } else {\r\n                this.props.history.push('/user')\r\n            }\r\n        }\r\n    }\r\n\r\n    updateProfile(id) {\r\n        let profile = { id: 0 }\r\n        this.state.profiles.forEach(pProfile => {\r\n            if (pProfile.id == id) {\r\n                profile = pProfile\r\n            }\r\n        })\r\n        this.setState({ profile: profile })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Desktop {... this.props}>\r\n                    <Paper variant=\"outlined\" style={{ padding: 12, justifyContent: 'left' }}>\r\n                        <Typography variant='h6' fontWeight='bold' >New user</Typography>\r\n                        <Typography variant='subtitle2' color=\"text.secondary\" >Create new access</Typography>\r\n                    </Paper>\r\n                </Desktop>\r\n                <Loading loading={this.state.loading}>\r\n                    <Card variant='outlined' style={{ paddingTop: 4, paddingBottom: 4, paddingLeft: 12, paddingRight: 12, marginTop: 8 }}>\r\n                        <Grid container spacing={1} style={{ marginTop: 0 }}>\r\n                            <Grid item xs={12} md={12} lg={12}>\r\n                                <TextField style={{ width: '100%' }} placeholder='Login' variant=\"outlined\" value={this.state.login} onChange={(event) => { this.setState({ login: event.currentTarget.value }) }} />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6} lg={6}>\r\n                                <TextField style={{ width: '100%' }} type='password' placeholder='Password' variant=\"outlined\" value={this.state.password} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6} lg={6}>\r\n                                <TextField style={{ width: '100%' }} placeholder='Confirm password' type='password' variant=\"outlined\" value={this.state.confirmationPassword} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={10} lg={7}>\r\n                                <FormControl>\r\n                                    <RadioGroup value={this.state.profile.id} style={{ display: 'flex', flexDirection: this.props.isMobile ? 'column' : 'row' }} onChange={(event) => { this.updateProfile(event.target.value) }} >\r\n                                        {\r\n                                            this.state.profiles.map(profile => {\r\n                                                return (\r\n                                                    <FormControlLabel value={profile.id} control={<Radio />} label={String.capitalizeFirstLetter(profile.name)} />\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                    <SaveButton onClick={() => { this.add() }} />\r\n                </Loading>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default NewUser","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');"],"names":["props","variant","style","width","marginTop","marginBottom","alignContent","justifyContent","alignSelf","borderRadius","onClick","NewUser","state","profiles","profile","id","login","loading","password","confirmationPassword","setTitle","setActionType","Request","get","fetch","result","error","this","setMessage","package","message","history","push","setState","data","length","post","imei","forEach","pProfile","padding","fontWeight","color","paddingTop","paddingBottom","paddingLeft","paddingRight","container","spacing","item","xs","md","lg","placeholder","value","onChange","event","currentTarget","type","display","flexDirection","isMobile","updateProfile","target","map","control","label","String","capitalizeFirstLetter","name","add","React","createSvgIcon","_jsx","d"],"sourceRoot":""}