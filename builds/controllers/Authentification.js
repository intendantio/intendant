"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _Jwt=_interopRequireDefault(require("./tools/Jwt")),_md=_interopRequireDefault(require("md5")),_Controller=_interopRequireDefault(require("./Controller")),_package=_interopRequireDefault(require("../package.json")),_Tracing=_interopRequireDefault(require("../utils/Tracing"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class Authentification extends _Controller.default{async getAll(){try{return await this.sqlAuthorization.getAll()}catch(a){return _Tracing.default.error("Authentification : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async getAllAuthorizationByProfile(a){try{let b=await this.sqlAuthorization.getAll();if(b.error)return b;else{let c=await this.sqlAuthorizationProfile.getAllByField({profile:a});if(c.error)return c;else{let a=[];return b.data.forEach(b=>{let d=!1;c.data.forEach(c=>{b.id===c.authorization&&(d=!0,a.push({id:b.id,reference:b.reference,method:b.method,secure:1}))}),!1==d&&a.push({id:b.id,reference:b.reference,method:b.method,secure:0})}),{data:a,package:_package.default.name,message:""}}}}catch(a){return _Tracing.default.error("Authentification : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async checkAuthorization(a={}){try{let b=a.headers.authorization;null==b&&(b="Bearer aaaa.bbbb.cccc");let c=b.split(" ");if(2!=c.length)return{error:!0,message:"Authentification controller : token invalid",package:_package.default.name};if("Bearer"!=c[0])return{error:!0,message:"Authentification controller : token invalid",package:_package.default.name};let d=c[1],e=await this.sqlAuthorization.getOneByField({reference:a.url,method:a.method});if(e.error)return _Tracing.default.warning(_package.default.name,e.message+a.method+" "+a.url),{error:!0,message:e.messsage+" "+a.method+" "+a.url,package:_package.default.name};if(!1==e.data&&(await this.sqlAuthorization.insert({id:null,reference:a.url,method:a.method,secure:"1"}),e=await this.sqlAuthorization.getOneByField({reference:a.url,method:a.method})),0===e.data.secure)return{error:!1,message:"ok",package:_package.default.name};let f=_Jwt.default.verifyAccessToken(d,this.core.configuration.token);if(f.valid){let a=f.login.split("~"),b=await this.sqlUser.getOneByField({login:a[1]});if(a[0]!=this.core.salt)return _Tracing.default.warning(_package.default.name,"Authentification controller : token invalid"),{error:!0,message:"Authentification controller : token invalid",package:_package.default.name};if(b.error)return b;if(b.data){let a=await this.sqlAuthorizationProfile.getOneByField({profile:b.data.profile,authorization:e.data.id});return a.error?a:a.data?{error:!1,message:"ok",package:_package.default.name,profile:b.data.profile,user:b.data.id}:(_Tracing.default.warning(_package.default.name,"Authentification controller : token invalid"),{error:!0,message:"Authentification controller : forbiden",package:_package.default.name})}return _Tracing.default.warning(_package.default.name,"Authentification controller : user invalid"),{error:!0,message:"Authentification controller : user invalid",package:_package.default.name}}return _Tracing.default.warning(_package.default.name,"Authentification controller : token invalid"),{error:!0,message:"Authentification controller : token invalid",package:_package.default.name}}catch(a){return _Tracing.default.error("Authentification : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async getToken(a,b){try{if(!(a&&""!==a))return _Tracing.default.warning(_package.default.name,"Authentification controller : login is empty"),{error:!0,message:"Authentification controller : login is empty",package:_package.default.name};if(b&&""!==b){let c=await this.sqlUser.getOneByField({login:a});if(c.error)return c;else{let d=c.data;return d?(0,_md.default)(b+d.salt)===d.password?{error:!1,message:"",package:_package.default.name,profile:d.profile,token:_Jwt.default.generateAccessToken(this.core.salt+"~"+a,this.core.configuration.token)}:{error:!0,message:"Authentification controller : password is invalid",package:_package.default.name}:{error:!0,message:"Authentification controller : login is invalid",package:_package.default.name}}}else return _Tracing.default.warning(_package.default.name,"Authentification controller : password is empty"),{error:!0,message:"Authentification controller : password is empty",package:_package.default.name}}catch(a){return _Tracing.default.error("Authentification : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async updateAuthorizationByProfile(a,b,c){try{let d=await this.sqlAuthorizationProfile.getOneByField({authorization:b,profile:a});if(d.error)return d;if(0===c){let c=await this.sqlAuthorizationProfile.deleteAllByField({profile:a,authorization:b});return c.error?c:{error:!1,message:"",package:_package.default.name}}if(d.data)return{error:!1,message:"",package:_package.default.name};else{let c=await this.sqlAuthorizationProfile.insert({id:null,authorization:b,profile:a});return c.error?c:{error:!1,message:"",package:_package.default.name}}}catch(a){return _Tracing.default.error("Authentification : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}}var _default=Authentification;exports.default=_default,module.exports=exports.default;