"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _Math=_interopRequireDefault(require("./tools/Math")),_md=_interopRequireDefault(require("md5")),_Controller=_interopRequireDefault(require("./Controller")),_package=_interopRequireDefault(require("../package.json")),_Tracing=_interopRequireDefault(require("../utils/Tracing"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class User extends _Controller.default{async getOne(a){try{return await this.sqlUser.getOne(a)}catch(a){return _Tracing.default.error(_package.default.name,"User : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async getAll(){try{let a=await this.sqlUser.getAll();if(!1==a.error){let b=a.data.map(a=>(a.password="",a));a.data=b}return a}catch(a){return _Tracing.default.error(_package.default.name,"User : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async delete(a){try{let b=await this.sqlUser.getOne(a);if(b.error)return b;if(!1==b.data)return _Tracing.default.warning(_package.default.name,"User not found"),{error:!0,message:"User invalid",package:_package.default.name};if("admin"==b.data.login)return _Tracing.default.warning(_package.default.name,"Cannot delete admin"),{error:!0,message:"Cannot delete admin",package:_package.default.name};let c=this.sqlClient.deleteAllByField({user:a});if(c.error)return c;let d=this.sqlUser.deleteAllByField({id:a});return d.error?d:{error:!1,message:"",package:_package.default.name}}catch(a){return _Tracing.default.error(_package.default.name,"User : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async insert(a,b,c="2"){try{if(!(a&&""!==a))return _Tracing.default.warning(_package.default.name,"Login is empty"),{error:!0,message:"Login is empty",package:_package.default.name};if(b&&""!==b){let d=await this.sqlUser.getOneByField({login:a});if(d.error)return d;else{let e=d.data;if(e)return _Tracing.default.warning(_package.default.name,"Login is already register"),{error:!0,message:"Login is already register",package:_package.default.name};else{_Tracing.default.verbose(_package.default.name,"Insert user "+a);let d=_Math.default.random(16),e=(0,_md.default)(b+d),f=await this.sqlUser.insert({id:null,login:a,password:e,salt:d,profile:c});return f.error?f:{error:!1,message:"",package:_package.default.name}}}}else return _Tracing.default.warning(_package.default.name,"Password is empty"),{error:!0,message:"Password is empty",package:_package.default.name}}catch(a){return _Tracing.default.error(_package.default.name,"User : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async insertAdmin(a){try{let b=await this.getStarted();return b.getStarted?a&&"string"==typeof a?4<=a.length?this.insert("admin",a,"1"):{error:_package.default.name,message:"Too small password"}:{error:_package.default.name,message:"Invalid password type"}:{error:_package.default.name,message:"Invalid cycle state"}}catch(a){return _Tracing.default.error(_package.default.name,"User : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async update(a,b,c){try{if(b){if(c){let d=await this.sqlUser.getOne(a);if(d.error)return d;let e=d.data;if(e.login!=b){let c=this.sqlUser.updateAll({login:b},{id:a});if(c.error)return d}if(e.profile!=c){let b=this.sqlUser.updateAll({profile:c},{id:a});if(b.error)return d}return{error:!1,message:"",package:_package.default.name}}return{error:_package.default.name,message:"Missing profile"}}return{error:_package.default.name,message:"Missing login"}}catch(a){return _Tracing.default.error(_package.default.name,"User : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async updatePassword(a,b){try{let c=_Math.default.random(16),d=await this.sqlUser.updateAll({password:(0,_md.default)(b+c)},{id:a});if(d.error)return d;else{let b=await this.sqlUser.updateAll({salt:c},{id:a});return b.error?b:{error:!1,message:"",package:_package.default.name}}}catch(a){return _Tracing.default.error(_package.default.name,"User : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async getStarted(){try{let a=await this.sqlUser.getOneByField({login:"admin"});return a.error?a:!1==a.data?{error:!1,message:"",getStarted:!0}:{error:!1,message:"",getStarted:!1}}catch(a){return _Tracing.default.error(_package.default.name,"User : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}}var _default=User;exports.default=_default,module.exports=exports.default;