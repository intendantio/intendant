"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _package=_interopRequireDefault(require("../package.json")),ToadScheduler=_interopRequireWildcard(require("toad-scheduler")),_nodeSchedule=_interopRequireDefault(require("node-schedule")),_lodash=_interopRequireDefault(require("lodash")),_connector=_interopRequireDefault(require("../connector")),_Tracing=_interopRequireDefault(require("../utils/Tracing"));function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!=f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class Routine{constructor(a,b){if(this.scheduler=new ToadScheduler.ToadScheduler,this.job={cancel:()=>{}},this.core=b,this.configuration=b.configuration,this.id=a.id,this.name=a.name,this.triggers=a.triggers,this.effects=a.effects,this.watch=a.watch,this.mode=a.mode,this.sqlRoutine=new _connector.default("routine"),"counter"==this.mode){let a=new ToadScheduler.Task(this.id,async()=>{let a=!0;for(let b,c=0;c<this.triggers.length;c++)switch(b=this.triggers[c],b.type){case"smartobject":let d=new _connector.default("smartobject"),e=await d.getOne(b.source);if(e.error)return _Tracing.default.warning(_package.default.name,e.package+" "+e.error),await this.sqlRoutine.updateAll({status:0},{id:this.id}),void this.close();let f=e.data,g={};b.arguments.map(a=>{g[a.reference]=a.value});let h=await this.core.controller.smartobject.executeAction(f.id,b.action,-1,g,!0);if(h.error)return _Tracing.default.warning(_package.default.name,h.package+" "+h.error),void this.close();if(null!=b.result){let c=h.data,d=this.test(_lodash.default.get(c,b.result),b.statement,b.expected);//Tracing.verbose(Package.name, "Check condition is " + _.get(result, trigger.result) + " " + trigger.statement + " " + trigger.expected)
!1==d&&(a=!1)}break;case"module":let i={};effect.arguments.map(a=>{i[a.reference]=a.value});let j=await this.core.manager.module.executeAction(effect.source,effect.action,i);if(j.error)return _Tracing.default.warning(_package.default.name,j.package+" "+j.error),void this.close();if(null!=b.result){let c=j.data,d=this.test(_lodash.default.get(c,b.result),b.statement,b.expected);//Tracing.verbose(Package.name, "Check condition is " + _.get(result, trigger.result) + " " + trigger.statement + " " + trigger.expected)
!1==d&&(a=!1)}break;case"essential":let k={};b.arguments.map(a=>{k[a.reference]=a.value});let l=await this.core.controller.essential.executeAction(b.action,k);if(l.error)return _Tracing.default.warning(_package.default.name,l.package+" "+l.message),void this.close();break;case"process":let m=new _connector.default("process"),n=await m.getOne(b.source);if(n.error)return _Tracing.default.warning(_package.default.name,n.package+" "+n.error),await this.sqlRoutine.updateAll({status:0},{id:this.id}),void this.close();let o={};b.arguments.map(a=>{o[a.reference]=a.value});let p=await this.core.controller.process.executeAction(b.source,-1,o,!0);if(p.error)return _Tracing.default.warning(_package.default.name,p.package+" "+p.error),void this.close();if(null!=b.result){let c=p.data,d=this.test(_lodash.default.get(c,b.result),b.statement,b.expected);//Tracing.verbose(Package.name, "Check condition is " + _.get(result, trigger.result) + " " + trigger.statement + " " + trigger.expected)
!1==d&&(a=!1)}break;default:_Tracing.default.warning(_package.default.name,"Type not found"),this.close();}if(a){_Tracing.default.verbose(_package.default.name,"Routine n\xB0"+this.id+" executed");for(let a,b=0;b<this.effects.length;b++)switch(a=this.effects[b],a.type){case"smartobject":let c=new _connector.default("smartobject"),d=await c.getOne(a.source);if(d.error)return _Tracing.default.warning(_package.default.name,d.package+" "+d.message),void this.close();let e=d.data,f={};a.arguments.map(a=>{f[a.reference]=a.value});let g=await this.core.controller.smartobject.executeAction(e.id,a.action,-1,f,!0);if(g.error)return _Tracing.default.warning(_package.default.name,g.package+" "+g.message),void this.close();break;case"module":let h={};a.arguments.map(a=>{h[a.reference]=a.value});let i=await this.core.manager.module.executeAction(a.source,a.action,h);if(i.error)return _Tracing.default.warning(_package.default.name,i.package+" "+i.message),void this.close();break;case"essential":let j={};a.arguments.map(a=>{j[a.reference]=a.value});let k=await this.core.controller.essential.executeAction(a.action,j);if(k.error)return _Tracing.default.warning(_package.default.name,k.package+" "+k.message),void this.close();break;case"process":let l=new _connector.default("process"),m=await l.getOne(a.source);if(m.error)return _Tracing.default.warning(_package.default.name,m.package+" "+m.message),await this.sqlRoutine.updateAll({status:0},{id:this.id}),void this.close();let n={};a.arguments.map(a=>{n[a.reference]=a.value});let o=await this.core.controller.process.executeAction(a.source,-1,n,!0);if(o.error)return _Tracing.default.warning(_package.default.name,o.package+" "+o.error),void this.close();break;default:_Tracing.default.warning(_package.default.name,"Type not found"),this.close();}}});this.scheduler.addSimpleIntervalJob(new ToadScheduler.SimpleIntervalJob({seconds:parseInt(this.watch)},a))}else"week"==this.mode&&(this.job=_nodeSchedule.default.scheduleJob(this.watch,async()=>{_Tracing.default.verbose(_package.default.name,"Routine n\xB0 "+this.id+" trigger");let a=!0;for(let b,c=0;c<this.triggers.length;c++)switch(b=this.triggers[c],b.type){case"smartobject":let d=new _connector.default("smartobject"),e=await d.getOne(b.source);if(e.error)return _Tracing.default.warning(_package.default.name,e.package+" "+e.error),await this.sqlRoutine.updateAll({status:0},{id:this.id}),void this.close();let f=e.data,g={};b.arguments.map(a=>{g[a.reference]=a.value});let h=await this.core.controller.smartobject.executeAction(f.id,b.action,-1,g,!0);if(h.error)return _Tracing.default.warning(_package.default.name,h.package+" "+h.error),void this.close();if(null!=b.result){let c=h.data,d=this.test(_lodash.default.get(c,b.result),b.statement,b.expected);!1==d&&(a=!1)}break;case"essential":let i={};b.arguments.map(a=>{i[a.reference]=a.value});let j=await this.core.controller.essential.executeAction(b.action,i);if(j.error)return _Tracing.default.warning(_package.default.name,j.package+" "+j.message),void this.close();break;case"module":let k={};effect.arguments.map(a=>{k[a.reference]=a.value});let l=await this.core.manager.module.executeAction(effect.source,effect.action,k);if(l.error)return _Tracing.default.warning(_package.default.name,l.package+" "+l.error),void this.close();if(null!=b.result){let c=l.data,d=this.test(_lodash.default.get(c,b.result),b.statement,b.expected);!1==d&&(a=!1)}break;case"process":let m=new _connector.default("process"),n=await m.getOne(b.source);if(n.error)return _Tracing.default.warning(_package.default.name,n.package+" "+n.error),await this.sqlRoutine.updateAll({status:0},{id:this.id}),void this.close();let o={};b.arguments.map(a=>{o[a.reference]=a.value});let p=await this.core.controller.process.executeAction(b.source,-1,o,!0);if(p.error)return _Tracing.default.warning(_package.default.name,p.package+" "+p.error),void this.close();if(null!=b.result){let c=p.data,d=this.test(_lodash.default.get(c,b.result),b.statement,b.expected);!1==d&&(a=!1)}break;default:_Tracing.default.warning(_package.default.name,"Type not found"),this.close();}if(a)for(let a,b=0;b<this.effects.length;b++)switch(a=this.effects[b],a.type){case"smartobject":let c=new _connector.default("smartobject"),d=await c.getOne(a.source);if(d.error)return _Tracing.default.warning(_package.default.name,d.package+" "+d.error),void this.close();let e=d.data,f={};a.arguments.map(a=>{f[a.reference]=a.value});let g=await this.core.controller.smartobject.executeAction(e.id,a.action,-1,f,!0);if(g.error)return _Tracing.default.warning(_package.default.name,g.package+" "+g.error),void this.close();break;case"essential":let h={};a.arguments.map(a=>{h[a.reference]=a.value});let i=await this.core.controller.essential.executeAction(a.action,h);if(i.error)return _Tracing.default.warning(_package.default.name,i.package+" "+i.message),void this.close();break;case"module":let j={};a.arguments.map(a=>{j[a.reference]=a.value});let k=await this.core.manager.module.executeAction(a.source,a.action,j);if(k.error)return _Tracing.default.warning(_package.default.name,k.package+" "+k.error),void this.close();break;case"process":let l=new _connector.default("process"),m=await l.getOne(a.source);if(m.error)return _Tracing.default.warning(_package.default.name,m.package+" "+m.error),await this.sqlRoutine.updateAll({status:0},{id:this.id}),void this.close();let n={};a.arguments.map(a=>{n[a.reference]=a.value});let o=await this.core.controller.process.executeAction(a.source,-1,n,!0);if(o.error)return _Tracing.default.warning(_package.default.name,o.package+" "+o.error),void this.close();break;default:_Tracing.default.warning(_package.default.name,"Type not found"),this.close();}}))}test(a,b,c){return null==a||null==a?a="":"number"==typeof a?c=parseInt(c):a=a.toString(),"equal"===b?a==c:"bigger"===b?a>c:"smaller"===b?a<c:"different"==b&&a!=c}async close(){await this.sqlRoutine.updateAll({status:0},{id:this.id}),this.job.cancel(),this.scheduler.stop()}}var _default=Routine;exports.default=_default,module.exports=exports.default;