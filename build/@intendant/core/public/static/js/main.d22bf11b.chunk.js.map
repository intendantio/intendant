{"version":3,"sources":["components/Alert.js","utils/Request.js","screens/contents/SmartObject/List.js","components/Action.js","screens/contents/SmartObject/Detail.js","screens/contents/SmartObject/New.js","Theme.js","screens/contents/Authorization/List.js","screens/contents/Process/List.js","utils/Source.js","components/IconList.js","screens/contents/Process/New.js","screens/contents/Process/Detail.js","screens/contents/Routine/List.js","components/WeekSchedul.js","screens/contents/Routine/New.js","screens/contents/Routine/Detail.js","screens/contents/Module/List.js","screens/contents/Module/Detail.js","screens/contents/Configuration/List.js","screens/contents/Market/List.js","screens/contents/Widget/List.js","screens/contents/Widget/New.js","screens/contents/Widget/Detail.js","screens/contents/User/List.js","screens/contents/User/New.js","screens/contents/User/NewPassword.js","components/Sidebar.js","screens/Main.js","screens/GetStarted.js","screens/Authentification.js","App.js","index.js"],"names":["Alert","props","Snackbar","open","autoHideDuration","onClose","severity","elevation","variant","Request","this","method","data","url","a","authorization","localStorage","getItem","server","fetch","headers","body","JSON","stringify","result","json","error","message","Smartobject","state","page","enabled","smartobjects","get","setState","package","loading","Paper","style","display","padding","alignContent","justifyContent","alignItems","alignSelf","Typography","fontSize","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","slice","map","smartobject","to","id","textDecoration","color","hover","cursor","reference","height","width","filter","src","process","status","icon","Moment","lastUse","format","name","flexDirection","marginTop","marginBottom","textAlign","IconButton","borderRadius","Add","TablePagination","count","length","rowsPerPage","rowsPerPageOptions","onChangePage","event","React","Component","Action","action","value","default","tmp","type","marginRight","minWidth","TextField","placeholder","onChange","updateAction","currentTarget","FormControl","InputLabel","Select","target","label","values","MenuItem","styles","colors","triangle","onChangeComplete","hex","borderWidth","borderStyle","borderColor","paddingTop","paddingBottom","paddingLeft","paddingRight","Slider","defaultValue","valueLabelDisplay","orientation","min","max","step","Checkbox","defaultChecked","DetailSmartObject","match","params","profiles","referenceArguments","valueArguments","executeInformation","resultProfile","resultSmartobject","history","push","delete","settings","index","argument","undefined","post","componentDidMount","pArguments","profile","idProfile","module","Divider","arguments","pArgument","onClick","navigator","clipboard","writeText","margin","FileCopy","deleteSmartobjectArguments","Delete","nativeEvent","insertSmartobjectArguments","actions","maxWidth","Button","disabled","executeAction","gridRowGap","gridTemplateColumns","setting","bind","size","Close","parse","forEach","pprofile","ListItem","FormControlLabel","control","Switch","checked","deleteProfile","insertProfile","NewSmartobject","types","resultType","pModule","key","setModule","updateSettings","add","Save","responsiveFontSizes","createMuiTheme","palette","primary","main","Colors","secondary","typography","fontFamily","shape","Security","selectProfile","authorizations","onSelectProfile","Theme","success","warning","info","pAuthorization","secure","marginLeft","backgroundColor","background","paper","ListItemText","sort","b","button","updateSecure","getColor","Process","processs","_process","description","espace","Source","query","resultModule","resultProcess","sources","includes","mode","inputs","input","name_enable","name_disable","IconList","icons","resultJSON","Grid","container","spacing","item","xs","search","onSelect","New","popup","espaces","inputReference","inputName","inputType","inputMode","isChecked","source","arrSources","getSource","resultSource","resultEspace","fSource","fAction","enable","nameEnable","nameDisable","modeArgument","pIndex","InputProps","endAdornment","InputAdornment","position","Popover","anchorOrigin","vertical","horizontal","transformOrigin","setInput","removeModeArgument","removeSource","fullWidth","setSource","setAction","confirmationModule","set","NewProcess","referenceInput","nameInput","typeInput","modeInput","console","log","idsource","referenceSettings","valueSettings","startIcon","Autorenew","deleteProcessInput","insertProcessInput","object","Check","deleteSource","addSource","Routine","routines","put","routine","flex","updateStatus","PlayArrow","Pause","Edit","duplicate","Week","sunday","monday","tuesday","wednesday","friday","saturday","time","timeSplit","split","thursday","parseInt","onChangeMode","Cached","calculate","top","left","transform","NewRoutine","modalTrigger","modalEffect","watch","triggers","effects","statement","expected","trigger","effect","toString","updateName","updateIcon","updateWatch","WeekSchedul","Card","textTransform","removeTrigger","reset","removeEffect","save","Modal","Fade","in","addTrigger","addEffect","Module","modules","pmodule","md5","Detail","hashId","_module","Configuration","pageSmartobject","pageModule","Store","DevicesOther","Category","markets","pageMarket","pPackage","resultMarket","market","alreadyInstall","uninstall","GetApp","install","disableElevation","Widget","widgets","widget","contents","rank","content","_content","fontWeight","NewWidget","image","contentSources","widgetReference","resultConfiguration","find","contentSource","tmpsettings","pindex","multiline","deleteContent","insertSource","setType","insertContent","needSave","pContent","native","onBlur","update","setContent","users","user","login","updateProfile","Settings","password","confirmationPassword","NewPassword","changePassword","Sidebar","isMobile","Drawer","anchor","ListItemIcon","Extension","DeviceHub","AccountTree","Https","Person","ShoppingCart","onDisconnect","ExitToApp","Main","mediaQueries","mediaMatch","window","matchMedia","matches","addListener","e","basename","exact","path","SmartObject","NewSmartObject","DetailModule","DetailRoutine","DetailWidget","ListProcess","DetailProcess","User","NewUser","Market","Authorization","GetStarted","authentification","confirmePassword","onFinish","lineHeight","noValidate","autoComplete","inputProps","maxLength","register","Authentification","getStarted","customAddress","address","location","origin","service","replace","checkServer","setItem","token","removeItem","ok","protocol","onSubmit","preventDefault","autoFocus","on","disconnect","App","ThemeProvider","theme","CssBaseline","Box","userSelect","outline","WebkitTapHighlightColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d22bf11b.chunk.js","sourcesContent":["import MuiAlert from '@material-ui/lab/Alert'\nimport { Snackbar } from '@material-ui/core'\n\nfunction Alert(props) {\n    return (\n        <Snackbar open={props.open} autoHideDuration={6000} onClose={() => props.onClose()}>\n            <MuiAlert severity={props.severity} elevation={6} variant=\"filled\" {...props} />\n        </Snackbar>\n    )\n}\n\nexport default Alert","class Request {\n\n    constructor() {\n        this.method = 'GET'\n    }\n\n    post(data) {\n        this.method = 'POST'\n        this.data = data\n        return this\n    }\n\n    get() {\n        this.method = 'GET'\n        return this\n    }\n\n    delete() {\n        this.method = 'DELETE'\n        return this\n    }\n\n    put(data) {\n        this.method = 'PUT'\n        this.data = data\n        return this\n    }\n\n    async fetch(url) {\n        let authorization = localStorage.getItem(\"authorization\")\n        let server = localStorage.getItem(\"server\")\n        try {\n            let result = await fetch(server + url, {\n                method: this.method,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + authorization\n                },\n                body: this.method == 'POST' || this.method == 'PUT' ? JSON.stringify(this.data) : null\n            })\n            return await result.json()\n        } catch (error) {\n            return {\n                error: true,\n                message: \"An error has occurred\"\n            }\n        }\n    }\n\n}\n\nexport default Request","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport Moment from 'moment'\nimport { Add } from '@material-ui/icons'\nimport { Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton  } from '@material-ui/core'\nimport Icon from '../../../utils/Icon'\nimport Request from '../../../utils/Request'\nimport Alert from '../../../components/Alert'\n\nclass Smartobject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            smartobjects: []\n        }\n    }\n\n    async componentDidMount() {\n            let result = await new Request().get().fetch(\"/api/smartobjects\")\n            if (result.error) {\n                this.setState({\n                    enabled: true,\n                    message: result.package + \" : \" + result.message\n                })\n            } else {\n                this.setState({\n                    enabled: false,\n                    message: \"\",\n                    smartobjects: result.data\n                })\n            }\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    this.state.loading ?\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\n                                Chargement des smartobject\n                            </Typography>\n                        </Paper>\n                        :\n                        <div>\n                            <TableContainer component={Paper}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align=\"left\">\n                                                <Typography variant='body1'>\n                                                    Reference\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography variant='body1'>\n                                                    Status\n                                                </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <Typography variant='body1'>\n                                                    Last use\n                                                </Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.smartobjects.slice(this.state.page * 10, (this.state.page + 1) * 10).map((smartobject) => (\n                                            <Link to={\"/smartobject/\" + smartobject.id} style={{ textDecoration: 'none', color: 'white', display:'contents' }}>\n                                                <TableRow hover key={smartobject.name} style={{ cursor: 'pointer' }}>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {smartobject.reference}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"center\">\n                                                        <Typography variant='body1'>\n                                                            <img style={{ height: 25, width: 25, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + smartobject.status.icon + \".svg\"} />\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"center\">\n                                                        <Typography variant='body1'>\n                                                            {Moment(smartobject.lastUse).format(\"hh:mm DD/MM\") }\n                                                        </Typography>\n                                                    </TableCell>\n                                                </TableRow>\n                                            </Link>\n\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                                    <Link to=\"/smartobject/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                                        <IconButton style={{ borderRadius: 0 }}>\n                                            <Add />\n                                        </IconButton>\n                                    </Link>\n                                </Paper>\n                                <TablePagination\n                                    component=\"div\"\n                                    count={this.state.smartobjects.length}\n                                    rowsPerPage={10}\n                                    page={this.state.page}\n                                    rowsPerPageOptions={[]}\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\n                                />\n                            </div>\n                        </div>\n                }\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    { this.state.message }\n                </Alert>\n            </>\n        )\n    }\n}\n\nexport default Smartobject","import React from 'react'\nimport { TextField, Paper, Checkbox, Typography, Slider, FormControl, Select, MenuItem, InputLabel } from '@material-ui/core'\nimport { TwitterPicker } from 'react-color'\n\nclass Action extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            action: this.props.action,\n            setState: this.props.setState,\n            value: this.props.action.default\n        }\n    }\n\n    updateAction(action, value) {\n        let tmp = {}\n        tmp[\"argument-\" + action.id] = value\n        this.state.setState(tmp)\n        this.setState({\n            value: value\n        })\n    }\n\n    render() {\n        switch (this.state.action.type) {\n            case 'text':\n                return (\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\n                    </div>\n                )\n            case 'number':\n                return (\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\n                    </div>\n                )\n            case 'select':\n                return (\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10 }} >\n                        <FormControl variant=\"outlined\" style={{ width: '150px' }} >\n                            <InputLabel>{this.state.action.id}</InputLabel>\n                            <Select onChange={(event) => { this.updateAction(this.state.action, event.target.value) }} label={this.state.action.id} >\n                                {\n                                    this.state.action.values.map(value => {\n                                        return <MenuItem value={value} >{value}</MenuItem>\n                                    })\n                                }\n                            </Select>\n                        </FormControl>\n                    </div>\n                )\n            case 'colorpicker':\n                return (\n                    <div elevation={3} style={{ alignItems: 'flex-start', display: 'flex', padding: 10, marginRight: 5, flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row' }} >\n                        <TwitterPicker\n                            styles={{padding: 0}}\n                            colors={['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF']}\n                            triangle='hide'\n                            color={this.state.value}\n                            onChangeComplete={(color) => { this.updateAction(this.state.action, color.hex) }}\n                        />\n                    </div>\n                )\n            case 'slider':\n                return (\n                    <div elevation={3} style={{height: \"fit-content\", alignSelf: 'flex-start',borderWidth: 1,borderStyle:'solid', borderRadius: 5, borderColor: 'rgba(255, 255, 255, 0.23)', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15, marginRight: 10 }} >\n                        <Typography variant='body1' style={{ textAlign: 'center',color: 'rgba(255, 255, 255, 0.5)', padding: 0}} >\n                            {this.state.action.id}\n                        </Typography>\n                        <div style={{marginBottom: 2, marginTop: 2}} />\n                        <Slider\n                            defaultValue={0}\n                            valueLabelDisplay=\"auto\"\n                            orientation={this.props.orientation ? this.props.orientation : 'horizontal'}\n                            min={this.state.action.min}\n                            max={this.state.action.max}\n                            step={this.state.action.step}\n                            onChange={(event, value) => { this.updateAction(this.state.action, value) }}\n                        />\n                    </div>\n                )\n            case 'checkbox':\n                return (\n                    <div elevation={3} style={{height: \"fit-content\", alignSelf: 'center',borderWidth: 1,borderStyle:'solid', borderRadius: 5, borderColor: 'rgba(255, 255, 255, 0.23)', alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15, marginRight: 10 }} >\n                        <Typography variant='body1' style={{ textAlign: 'center',color: 'rgba(255, 255, 255, 0.5)', padding: 0}}>\n                            {this.state.action.id}\n                        </Typography>\n                        <Checkbox defaultChecked={this.state.action.default} color='primary' onChange={(event,value) => {this.updateAction(this.state.action, value)}} />\n                    </div>\n                )\n            default:\n                return null\n        }\n    }\n\n}\n\nexport default Action","import React from 'react'\nimport JSONPretty from 'react-json-pretty'\nimport { Paper, Typography, TableContainer, TableBody, Divider, ListItem, TableCell, TableRow, Button, TextField, FormControlLabel, IconButton, Switch } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport { FileCopy, Delete, Close, Add } from '@material-ui/icons'\nimport AlertComponent from '../../../components/Alert'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\n\nclass DetailSmartObject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: props.match.params.id,\n            smartobject: null,\n            profiles: [],\n            enabled: false,\n            loading: null,\n            message: \"\",\n            referenceArguments: \"\",\n            valueArguments: \"\",\n            executeInformation: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects/\" + this.state.id)\n        if (resultProfile.error || resultSmartobject.error) {\n            this.props.history.push('/smartobject')\n        } else {\n            this.setState({ smartobject: resultSmartobject.data, profiles: resultProfile.data })\n        }\n        this.setState({ loading: null })\n    }\n\n    async delete(id) {\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.props.history.push('/smartobject')\n        }\n    }\n\n    async executeAction(action, settings) {\n        this.setState({loading: action})\n        let tmp = {}\n        for (let index = 0; index < settings.length; index++) {\n            let argument = settings[index];\n            let value = this.state[\"argument-\" + argument.id]\n            if (value == undefined) {\n                value = argument.default\n            }\n            tmp[argument.id] = value\n        }\n        let result = await new Request().post({ settings: tmp }).fetch(\"/api/smartobjects/\" + this.state.id + \"/actions/\" + action)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message, loading: null })\n        } else {\n            if (result.data) {\n                this.setState({ executeInformation: JSON.stringify(result.data) })\n            }\n            this.componentDidMount()\n        }\n    }\n\n    async deleteSmartobjectArguments(pArguments) {\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + pArguments.smartobject + \"/arguments/\" + pArguments.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async insertSmartobjectArguments(id, reference, value) {\n        let result = await new Request().post({ reference: reference, value: value }).fetch(\"/api/smartobjects/\" + id + \"/arguments\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ referenceArguments: \"\", valueArguments: \"\" })\n            this.componentDidMount()\n        }\n    }\n\n    async insertProfile(smartobject, profile) {\n        let result = await new Request().post({idProfile: profile.id, }).fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async deleteProfile(smartobject, profile) {\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles/\" + profile.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        if (this.state.smartobject) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\n                        <div style={{ padding: 10 }}>\n                            <Typography variant='h4' >\n                                {this.state.smartobject.reference}\n                            </Typography>\n                            <Typography variant='subtitle1' >\n                                {this.state.smartobject.module}\n                            </Typography>\n                        </div>\n                        <Divider />\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Configuration\n                            </Typography>\n                            <div style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'row' }}>\n                                <TableContainer component={Paper} >\n                                    <TableBody>\n                                        {this.state.smartobject.arguments.map((pArgument) => (\n                                            <TableRow key={pArgument.id} >\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='subtitle1'>\n                                                        {pArgument.reference}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\" style={{ width: '70%' }}>\n                                                    <Typography variant='subtitle1'>\n                                                        {pArgument.value.slice(0, 50) + (pArgument.value.length > 50 ? \" (...)\" : \"\")}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\n                                                    <IconButton onClick={() => { navigator.clipboard.writeText(pArgument.value) }} style={{ borderRadius: 5, margin: 0 }}>\n                                                        <FileCopy />\n                                                    </IconButton>\n                                                </TableCell>\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\n                                                    <IconButton onClick={() => { this.deleteSmartobjectArguments(pArgument) }} style={{ borderRadius: 5, margin: 0 }}>\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                        <TableRow key={\"-1\"} >\n                                            <TableCell align=\"left\">\n                                                <TextField value={this.state.referenceArguments} onChange={(event) => { this.setState({ referenceArguments: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\n                                                </TextField>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                <TextField value={this.state.valueArguments} onChange={(event) => { this.setState({ valueArguments: event.nativeEvent.target.value }) }} placeholder='Value' style={{ width: '100%' }}>\n                                                </TextField>\n                                            </TableCell>\n                                            <TableCell align=\"right\" style={{ padding: 4 }}>\n                                                <IconButton onClick={() => { this.insertSmartobjectArguments(this.state.smartobject.id, this.state.referenceArguments, this.state.valueArguments) }} style={{ borderRadius: 5, margin: 0 }}>\n                                                    <Add />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                {\"Action\"}\n                            </Typography>\n                            {\n                                this.state.smartobject.actions.map(action => {\n                                    return (\n                                        <Paper style={{ padding: 10, marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', width: '100%', maxWidth: '100%' }}>\n                                            <Button disabled={this.state.loading == action.id} onClick={() => { this.executeAction(action.id, action.settings) }} variant={this.state.loading == action.id ? 'contained' : 'outlined'} style={{ width: '250px', height: '100%' }} >\n                                                {action.name}\n                                            </Button>\n                                            \n                                            {\n                                                action.settings.length > 0 ?\n                                                    <div style={{ display: 'grid', gridRowGap:'10px', gridTemplateColumns: 'repeat(5,min-content)' , marginTop: 10, marginBottom: 10 }}>\n                                                        {\n                                                            action.settings.map(setting => {\n                                                                return <Action flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\n                                                            })\n                                                        }\n                                                    </div> : null\n                                            }\n                                        </Paper>\n                                    )\n                                })\n                            }\n                        </div>\n                        {\n                            this.state.executeInformation.length > 0 ?\n                                <div style={{ padding: 10 }}>\n                                    <Alert severity=\"success\" action={\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\n                                            <Close />\n                                        </IconButton>\n                                    }>\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\n                                    </Alert>\n                                </div>\n                                :\n                                null\n                        }\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Authorization\n                            </Typography>\n                            {\n                                this.state.profiles.map(profile => {\n                                    let state = false\n                                    this.state.smartobject.profiles.forEach(pprofile => {\n                                        if (pprofile.profile == profile.id) {\n                                            state = true\n                                        }\n                                    })\n                                    return (\n                                        <ListItem style={{ padding: 1 }}  >\n                                            <FormControlLabel control={\n                                                <Switch\n                                                    checked={state}\n                                                    onChange={() => { \n                                                        state ? this.deleteProfile(this.state.smartobject,profile) : this.insertProfile(this.state.smartobject,profile)\n                                                    }}\n                                                    color=\"primary\"\n                                                />\n                                            } label={profile.name} />\n                                        </ListItem>\n                                    )\n                                })\n                            }\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\n                        <IconButton onClick={() => { this.delete(this.state.id) }} style={{ borderRadius: 5 }}>\n                            <Delete />\n                        </IconButton>\n                    </Paper>\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        { this.state.message }\n                    </AlertComponent>\n                </div>\n            )\n        } else {\n            return (\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </AlertComponent>\n            )\n        }\n    }\n}\n\nexport default DetailSmartObject","import React from 'react'\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\nimport { Save } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass NewSmartobject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            module: false,\n            reference: \"\",\n            enabled: false,\n            message: \"\",\n            types: []\n        }\n    }\n\n    async componentDidMount() {\n        let resultType = await new Request().get().fetch(\"/api/configurations/smartobject\")\n        if (resultType.error) {\n            this.setState({ enabled: true, message: resultType.package + \" : \" + resultType.message })\n        } else {\n            this.setState({\n                enabled: false,\n                message: \"\",\n                types: resultType.data\n            })\n        }\n    }\n\n    setModule(name) {\n        this.state.types.forEach(pModule => {\n            if (pModule.name === name) {\n                this.setState({\n                    module: pModule\n                })\n            }\n        })\n    }\n\n    updateSettings(key, value) {\n        let tmp = {}\n        tmp[\"settings-\" + key] = value\n        this.setState(tmp)\n    }\n\n    async add() {\n        if (this.state.reference === \"\") {\n            this.setState({ enabled: true, message: \"Missing-parameter : reference is empty\" })\n        } else if (this.state.module.name === \"\") {\n            this.setState({ enabled: true, message: \"Missing-parameter : type not selected\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.module.settings.length; index++) {\n                let setting = this.state.module.settings[index];\n                settings.push({\n                    reference: setting.id,\n                    value: this.state[\"settings-\" + setting.name] ? this.state[\"settings-\" + setting.name] : \"\"\n                })\n            }\n            let result = await new Request().post({ module: this.state.module.name, reference: this.state.reference, settings: settings }).fetch(\"/api/smartobjects\")\n            if (result.error) {\n                this.setState({\n                    enabled: true,\n                    message: result.package + \" : \" + result.message\n                })\n            } else {\n                this.props.history.push('/smartobject')\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'row', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\n                            <TextField onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }} style={{ width: '150px', marginRight: 10 }} label=\"Reference\" variant=\"outlined\" />\n                            <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px' }} >\n                                <InputLabel>Module</InputLabel>\n                                <Select value={this.state.module.name} onChange={(event) => { this.setModule(event.target.value) }} label=\"Connexion\" >\n                                    {\n                                        this.state.types.map(pModule => {\n                                            return <MenuItem value={pModule.name} >{pModule.name}</MenuItem>\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                    {\n                        this.state.module ?\n                            this.state.module.settings.length === 0 ?\n                                null\n                                :\n                                <div style={{ display: 'flex', flexDirection: 'column', padding: 10 }}>\n                                    <Typography variant='body1' style={{ fontSize: 20 }}>Configuration</Typography>\n                                    {\n                                        this.state.module.settings.map(settings => {\n                                            return (\n                                                <TextField\n                                                    onChange={(event) => { this.updateSettings(settings.name, event.nativeEvent.target.value) }}\n                                                    style={{ width: '300px', marginTop: 10 }}\n                                                    label={settings.name}\n                                                    variant=\"outlined\"\n                                                />\n                                            )\n                                        })\n                                    }\n                                </div>\n                            : null\n                    }\n                </Paper>\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\n                        <Save />\n                    </IconButton>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    { this.state.message }\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default NewSmartobject","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport * as Colors from '@material-ui/core/colors'\n\nexport default responsiveFontSizes(createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: Colors.pink[600],\n    },\n    secondary: {\n      main: Colors.lightBlue[500],\n    },\n  },\n  typography: {\n    fontFamily: \"'Poppins', sans-serif\",\n    \"fontWeightLight\": 400,\n    \"fontWeightRegular\": 500,\n    \"fontWeightMedium\": 600\n  },\n  shape: {\n    borderRadius: 4\n  }\n}))","import React from 'react'\nimport { Typography, Button, ListItemText, ListItem, Divider, List, Paper } from '@material-ui/core'\nimport Theme from '../../../Theme'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass Security extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            profiles: [],\n            selectProfile: '',\n            authorizations: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/profiles\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            if (this.state.selectProfile === \"\") {\n                this.setState({\n                    enabled: false,\n                    message: \"\",\n                    profiles: result.data,\n                    selectProfile: result.data[0].id\n                })\n                this.onSelectProfile(result.data[0].id)\n            } else {\n                this.setState({\n                    enabled: false,\n                    message: \"\",\n                    profiles: result.data\n                })\n                this.onSelectProfile(this.state.selectProfile)\n            }\n        }\n    }\n\n    getColor(type) {\n        switch (type) {\n            default:\n            case 'GET':\n                return Theme.palette.success.main\n            case 'POST':\n                return Theme.palette.error.main\n            case 'PUT':\n                return Theme.palette.warning.main\n            case 'DELETE':\n                return Theme.palette.info.main\n        }\n    }\n\n    async onSelectProfile(id) {\n        this.setState({\n            selectProfile: id\n        })\n        let result = await new Request().get().fetch(\"/api/profiles/\" + id + \"/authorizations\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({\n                enabled: false,\n                message: \"\",\n                authorizations: result.data\n            })\n        }\n    }\n\n    async updateSecure(profile, pAuthorization, secure) {\n        let result = await new Request().post({ authorization: pAuthorization, secure: secure }).fetch(\"/api/profiles/\" + profile + \"/authorizations\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper style={{ padding: 10, marginBottom: 10, flexDirection: 'row', display: 'flex' }}>\n                    {\n                        this.state.profiles.map(profile => {\n                            return (\n                                <Button style={{ marginLeft: 5, marginRight: 5 }} onClick={() => { this.onSelectProfile(profile.id) }} variant={this.state.selectProfile === profile.id ? 'contained' : 'outlined'} >\n                                    {\n                                        profile.name\n                                    }\n                                </Button>\n                            )\n                        })\n                    }\n                </Paper>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\n                        <ListItem >\n                            <ListItemText >\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.error.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\n                                    Refusé\n                                </Typography>\n                            </ListItemText>\n                        </ListItem>\n                        <Divider />\n                        {\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 0 }).map(authorization => {\n                                return (\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 1) }}>\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\n                                                    {authorization.method}\n                                                </Typography>\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\n                                                    {authorization.reference}\n                                                </Typography>\n                                            </div>\n                                        </ListItemText>\n                                    </ListItem>\n                                )\n                            })\n                        }\n                    </List>\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\n                        <ListItem >\n                            <ListItemText >\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.success.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\n                                    Authorisé\n                                </Typography>\n                            </ListItemText>\n                        </ListItem>\n                        <Divider />\n                        {\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 1 }).map(authorization => {\n                                return (\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 0) }} >\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\n                                                    {authorization.method}\n                                                </Typography>\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\n                                                    {authorization.reference}\n                                                </Typography>\n                                            </div>\n                                        </ListItemText>\n                                    </ListItem>\n                                )\n                            })\n                        }\n                    </List>\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    { this.state.message }\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Security","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Add } from '@material-ui/icons'\nimport { Typography, TablePagination, TableRow, Table, TableCell, TableHead, TableContainer, TableBody, Paper, IconButton } from '@material-ui/core'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass Process extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            processs: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/process\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ processs: result.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {this.state.processs.slice(this.state.page * 10, (this.state.page + 1) * 10).map((_process) => (\n                                <Link to={\"/process/\" + _process.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\n                                    <TableRow hover key={_process.name} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + _process.icon + \".svg\"} />\n                                    </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {_process.reference}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {_process.description}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {_process.espace.reference}\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </Link>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                            <Link to=\"/process/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                                <IconButton style={{ borderRadius: 0 }}>\n                                    <Add />\n                                </IconButton>\n                            </Link>\n                        </Paper>\n                    </div>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.processs.length}\n                        rowsPerPage={10}\n                        page={this.state.page}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    { this.state.message }\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Process","import Request from './Request'\n\nclass Source {\n\n    static async getSource(query = []) {\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects\")\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\n        let resultProcess = await new Request().get().fetch(\"/api/process\")\n        if (resultProcess.error) {\n            return resultProcess\n        } else if (resultModule.error) {\n            return resultModule\n        } else if (resultSmartobject.error) {\n            return resultSmartobject\n        } else {\n            let sources = []\n            if (query.includes(\"smartobject\")) {\n                resultSmartobject.data.forEach(smartobject => {\n                    let actions = []\n                    smartobject.actions.forEach(action => {\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\n                    })\n                    sources.push({ id: smartobject.id, name: \"Smartobject \" + smartobject.reference, actions: actions, type: 'smartobject' })\n                })\n            }\n            if (query.includes(\"module\")) {\n                resultModule.data.forEach(pModule => {\n                    let actions = []\n                    pModule.actions.forEach(action => {\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\n                    })\n                    sources.push({ id: pModule.name, name: \"Module \" + pModule.name, actions: actions, type: 'module' })\n                })\n            }\n            if (query.includes(\"process\")) {\n                resultProcess.data.forEach(process => {\n                    let actions = []\n                    if (process.mode == \"simple\") {\n                        actions.push({\n                            id: \"auto\",\n                            name: process.name,\n                            settings: process.inputs.map(input => {\n                                return { id: input.reference, name: input.name, type: input.type }\n                            })\n                        })\n                    } else {\n                        actions.push({\n                            id: \"enable\",\n                            name: process.name_enable,\n                            settings: process.inputs.map(input => {\n                                return { id: input.reference, name: input.name, type: input.type }\n                            })\n                        })\n                        actions.push({\n                            id: \"disable\",\n                            name: process.name_disable,\n                            settings: process.inputs.map(input => {\n                                return { id: input.reference, name: input.name, type: input.type }\n                            })\n                        })\n                    }\n                    sources.push({ id: process.id, name: \"Processus \" + process.reference, actions: actions, type: 'process' })\n                })\n            }\n            return { data: sources, error: false, package: '', message: '' }\n        }\n    }\n\n}\n\nexport default Source","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\nclass IconList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            icons: [],\n            mode: 'normal'\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            let result = await fetch(process.env.PUBLIC_URL + '/ressource/icon.json')\n            let resultJSON = await result.json()\n            this.setState({ icons: resultJSON })\n        } catch (error) {\n            this.setState({ icons: [] })\n        }\n    }\n\n    render() {\n        return (\n            <Grid container spacing={1} style={{ width: '32vw', height: '32vw',  padding: 10, marginRight: 10 }}>\n                <Grid item xs={6} >\n                    <Paper onClick={() => { this.setState({ mode: 'normal' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star.svg\"} />\n                    </Paper>\n                </Grid>\n                <Grid item xs={6} >\n                    <Paper onClick={() => { this.setState({ mode: 'outline' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star-outline.svg\"} />\n                    </Paper>\n                </Grid>\n                {\n\n                    this.state.icons.filter(icon => {\n                        if (icon.search(\"outline\") != -1 && this.state.mode == \"outline\") {\n                            return true\n                        } else if (icon.search(\"outline\") == -1 && this.state.mode == \"normal\") {\n                            return true\n                        } else {\n                            return false\n                        }\n                    }).map(icon => {\n                        return (\n                            <Grid item xs >\n                                <Paper onClick={() => {this.props.onSelect && this.props.onSelect(icon)}} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\n                                    <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + icon + \".svg\"} />\n                                </Paper>\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        )\n    }\n\n}\n\nexport default IconList","import React from 'react'\n\nimport { Popover, InputAdornment, Checkbox, Typography, Paper, Grid, InputLabel, MenuItem, FormControl, Select, TableBody, TableContainer, TextField, TableCell, Table, TableRow, Switch, Button, IconButton } from '@material-ui/core'\n\nimport { Delete, List } from '@material-ui/icons'\n\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\nimport IconList from '../../../components/IconList'\n\nclass New extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            popup: false,\n            message: \"\",\n            espaces: [],\n            reference: '',\n            icon: '',\n            description: '',\n            name: '',\n            name_disable: '',\n            name_enable: '',\n            mode: 'simple',\n            module: null,\n            espace: false,\n            inputReference: \"\",\n            inputName: \"\",\n            inputType: null,\n            inputMode: false,\n            inputs: [],\n            sources: [],\n            isChecked: false,\n            action: null,\n            source: null,\n            arrSources: []\n        }\n    }\n\n    async componentDidMount() {\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\n        if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else if (resultEspace.error) {\n            this.setState({ enabled: true, message: resultEspace.package + \" : \" + resultEspace.message })\n        } else {\n            this.setState({\n                enabled: false,\n                message: \"\",\n                espaces: resultEspace.data,\n                sources: resultSource.data\n            })\n        }\n    }\n\n    setSource(id) {\n        let fSource = false\n        this.state.sources.forEach(source => {\n            if (source.id === id) { fSource = source }\n        })\n        this.setState({ source: fSource })\n    }\n\n    setAction(id) {\n        let fAction = false\n        this.state.source.actions.forEach(action => {\n            if (action.id === id) { fAction = action }\n        })\n        this.setState({ action: fAction })\n    }\n\n    setInput() {\n        if (this.state.inputReference === \"\") {\n            this.setState({ enabled: true, message: \"Reference is missing\" })\n            return\n        }\n        if (this.state.inputType === \"\") {\n            this.setState({ enabled: true, message: \"Type is missing\" })\n            return\n        }\n        if (this.state.inputName === \"\") {\n            this.setState({ enabled: true, message: \"Name is missing\" })\n            return\n        }\n        let inputs = this.state.inputs\n        inputs.push({\n            name: this.state.inputName,\n            type: this.state.inputType,\n            reference: this.state.inputReference,\n            enable: this.state.inputMode ? 1 : 0\n        })\n        this.setState({ inputs: inputs, inputName: \"\", inputType: null, inputReference: \"\", inputMode: false })\n    }\n\n    async set() {\n        if (this.state.reference === \"\") {\n            this.setState({ enabled: true, message: \"Reference is missing\" })\n            return\n        }\n        if (this.state.icon === \"\") {\n            this.setState({ enabled: true, message: \"Icon is missing\" })\n            return\n        }\n        if (this.state.description === \"\") {\n            this.setState({ enabled: true, message: \"Description is missing\" })\n            return\n        }\n        if (this.state.espace === false) {\n            this.setState({ enabled: true, message: \"Espace is missing\" })\n            return\n        }\n        let body = {\n            description: this.state.description,\n            nameEnable: this.state.name_enable,\n            nameDisable: this.state.name_disable,\n            name: this.state.name,\n            espace: this.state.espace,\n            sources: this.state.arrSources,\n            reference: this.state.reference,\n            icon: this.state.icon,\n            mode: this.state.mode,\n            inputs: this.state.inputs\n        }\n        let result = await new Request().post(body).fetch(\"/api/process\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.props.history.push('/process')\n        }\n    }\n\n    updateAction(action, value) {\n        let tmp = {}\n        tmp[\"argument-\" + action.id] = value\n        this.setState(tmp)\n    }\n\n    removeModeArgument(index) {\n        let tmp = []\n        this.state.inputs.forEach((modeArgument, pIndex) => {\n            if (index !== pIndex) { tmp.push(modeArgument) }\n        })\n        this.setState({ inputs: tmp })\n    }\n\n    confirmationModule() {\n        if (this.state.action === false) {\n            this.setState({ enabled: true, message: \"Action missing\" })\n            return\n        }\n        if (this.state.source.actions.length === 0) {\n            this.setState({ enabled: true, message: \"Module missing\" })\n            return\n        }\n        let settings = []\n        for (let index = 0; index < this.state.action.settings.length; index++) {\n            let setting = this.state.action.settings[index]\n            let value = this.state[\"argument-\" + setting.id]\n            if (value == undefined) {\n                value = setting.default\n            }\n            settings.push({ reference: setting.id, value: value })\n        }\n        let action = {\n            source: this.state.source,\n            action: this.state.action,\n            arguments: settings,\n            enable: this.state.isChecked\n        }\n        let tmp = this.state.arrSources\n        tmp.push(action)\n        this.setState({ arrSources: tmp, action: null, source: null, isChecked: false })\n    }\n\n    removeSource(index) {\n        let tmp = []\n        this.state.arrSources.forEach((action, pIndex) => {\n            if (index !== pIndex) { tmp.push(action) }\n        })\n        this.setState({ arrSources: [] }, () => {\n            this.setState({ arrSources: tmp })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                    <div style={{ justifyContent: 'start', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\n                        <TextField\n                            onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }}\n                            style={{ width: '20%', margin: 10 }}\n                            label=\"Réference\"\n                            value={this.state.reference}\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            onChange={(event) => { this.setState({ icon: event.nativeEvent.target.value }) }}\n                            style={{ width: '20%', margin: 10 }}\n                            label=\"Icon\"\n                            variant=\"outlined\"\n                            value={this.state.icon}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\n                                            <List />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <Popover\n                            open={this.state.popup}\n                            onClose={() => { this.setState({ popup: false }) }}\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\n                        >\n                            <IconList onSelect={(icon) => { this.setState({ icon: icon, popup: false }) }} />\n                        </Popover>\n                        <TextField\n                            onChange={(event) => { this.setState({ description: event.nativeEvent.target.value }) }}\n                            style={{ width: '50%', margin: 10 }}\n                            label=\"Description\"\n                            variant=\"outlined\"\n                        />\n                        <FormControl variant=\"outlined\" style={{ margin: 10, width: '150px' }} >\n                            <InputLabel>Espace</InputLabel>\n                            <Select onChange={(event) => { this.setState({ espace: event.target.value }) }} label=\"Espace\" >\n                                {\n                                    this.state.espaces.map(espace => {\n                                        return <MenuItem value={espace.id} >{espace.name}</MenuItem>\n                                    })\n                                }\n                            </Select>\n                        </FormControl>\n                        <Typography variant='h5' style={{ margin: 10 }}>\n                            Mode\n                        </Typography>\n                        <Grid style={{ margin: 10 }} container alignItems=\"center\" >\n                            <Grid item>\n                                <Typography variant='subtitle1'>Simple</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Switch checked={this.state.mode === 'switch'} onChange={(event, checked) => { this.setState({ mode: checked ? 'switch' : 'simple' }) }} name=\"checkedC\" />\n                            </Grid>\n                            <Grid item>\n                                <Typography variant='subtitle1'>Switch</Typography>\n                            </Grid>\n                        </Grid>\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\n                            {\n                                this.state.mode === 'switch' ?\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <TextField\n                                            onChange={(event) => { this.setState({ name_enable: event.nativeEvent.target.value }) }}\n                                            style={{ width: '45%', margin: 10 }}\n                                            label=\"Texte actif\"\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            onChange={(event) => { this.setState({ name_disable: event.nativeEvent.target.value }) }}\n                                            style={{ width: '45%', margin: 10 }}\n                                            label=\"Texte passif\"\n                                            variant=\"outlined\"\n                                        />\n                                    </div> :\n                                    <div >\n                                        <TextField\n                                            onChange={(event) => { this.setState({ name: event.nativeEvent.target.value }) }}\n                                            style={{ margin: 10, width: '45%' }}\n                                            label=\"Texte\"\n                                            variant=\"outlined\"\n                                        />\n                                    </div>\n                            }\n                        </TableContainer>\n                        <Typography variant='h5' style={{ margin: 10 }}>\n                            Argument\n                        </Typography>\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\n                            <TextField\n                                value={this.state.inputReference}\n                                onChange={(event) => { this.setState({ inputReference: event.nativeEvent.target.value }) }}\n                                style={{ width: '30%', margin: 10 }}\n                                label=\"Reference\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                value={this.state.inputName}\n                                onChange={(event) => { this.setState({ inputName: event.nativeEvent.target.value }) }}\n                                style={{ width: '30%', margin: 10 }}\n                                label=\"Name\"\n                                variant=\"outlined\"\n                            />\n                            <FormControl variant=\"outlined\" style={{ margin: 10, width: '25%' }} >\n                                <InputLabel>Type</InputLabel>\n                                <Select value={this.state.inputType} onChange={(event) => { this.setState({ inputType: event.target.value }) }} label=\"Type\" >\n                                    <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\n                                    <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\n                                    <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\n                                    <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\n                                </Select>\n                            </FormControl>\n                            {\n                                this.state.mode === 'switch' ?\n                                    <Checkbox onChange={(event, checked) => { this.setState({ inputMode: checked }) }} /> : null\n                            }\n                            <Button style={{ margin: 10 }} onClick={() => { this.setInput() }} variant='outlined'>\n                                Ajouter\n                            </Button>\n                            <Table>\n                                <TableBody>\n                                    {\n                                        this.state.inputs.map((modeArgument, index) => {\n                                            return (\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {modeArgument.reference}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {modeArgument.name}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {modeArgument.type}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    {\n                                                        this.state.mode === 'switch' ?\n                                                            <TableCell align=\"center\">\n                                                                <Checkbox disabled defaultChecked={modeArgument.mode} />\n                                                            </TableCell> : null\n                                                    }\n                                                    <TableCell align=\"right\">\n                                                        <IconButton onClick={() => { this.removeModeArgument(index) }}>\n                                                            <Delete />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                    }\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <Typography variant='h5' style={{ margin: 10 }}>Action </Typography>\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\n                            <Table>\n                                <TableBody>\n                                    {\n                                        this.state.arrSources.map((action, index) => {\n                                            return (\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {action.source.name}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {action.action.name}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <Typography variant='body1'>\n                                                            {\n                                                                action.arguments.map(argument => {\n                                                                    return (\n                                                                        <Typography variant='body1'>\n                                                                            {argument.reference + \" : \" + argument.value}\n                                                                        </Typography>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Typography>\n                                                    </TableCell>\n                                                    {this.state.mode === 'simple' ? null : <TableCell align=\"center\">\n                                                        <Checkbox disabled defaultChecked={action.enable} />\n                                                    </TableCell>}\n                                                    <TableCell align=\"center\">\n                                                        <IconButton onClick={() => { this.removeSource(index) }}>\n                                                            <Delete />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                    }\n                                    <TableRow >\n                                        <TableCell align=\"left\" style={{ minWidth: '30%' }}>\n                                            <FormControl fullWidth>\n                                                <InputLabel>Source</InputLabel>\n                                                <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\n                                                    {\n                                                        this.state.sources.map(source => {\n                                                            return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                        </TableCell>\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\n                                            {\n                                                this.state.source ?\n                                                    <FormControl fullWidth >\n                                                        <InputLabel>Action</InputLabel>\n                                                        <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\n                                                            {\n                                                                this.state.source.actions.map(action => {\n                                                                    return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                    : null\n                                            }\n                                        </TableCell>\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\n                                            <div>\n                                            </div>\n                                            {\n                                                this.state.action ?\n                                                    this.state.action.settings.map(argument => {\n                                                        return (\n                                                            <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\n                                                                <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\n                                                            </div>\n                                                        )\n                                                    }) : null\n                                            }\n                                        </TableCell>\n                                        {this.state.mode === 'simple' ? null :\n                                            <TableCell align=\"center\">\n                                                <Checkbox onChange={(event, checked) => { this.setState({ isChecked: checked }) }} />\n                                            </TableCell>\n                                        }\n                                    </TableRow>\n                                    <Button style={{ margin: 10 }} onClick={() => { this.confirmationModule() }} variant='outlined'>\n                                        Ajouter\n                                    </Button>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                    <Button style={{ margin: 10 }} onClick={() => { this.set() }} variant='outlined'>Save</Button>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}> {this.state.message} </Alert>\n            </div>\n        )\n    }\n}\n\nexport default New","import React from 'react'\nimport JSONPretty from 'react-json-pretty'\n\nimport { MenuItem, Switch, ListItem, FormControlLabel, Checkbox, InputLabel, IconButton, TableHead, TextField, Typography, Paper, Divider, TableBody, TableContainer, TableCell, Table, TableRow, FormControl, Select, Button } from '@material-ui/core'\n\nimport { Check, Close, Delete, Autorenew, Add } from '@material-ui/icons'\n\nimport Alert from '../../../components/Alert'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\n\nclass NewProcess extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: props.match.params.id,\n            enabled: false,\n            message: \"\",\n            process: null,\n            profiles: [],\n            executeInformation: \"\",\n            referenceInput: \"\",\n            nameInput: \"\",\n            typeInput: null,\n            modeInput: 0,\n            action: null,\n            source: null,\n            loading: false,\n            isChecked: false,\n            sources: []\n        }\n    }\n\n\n    async componentDidMount() {\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\n        let result = await new Request().get().fetch(\"/api/process/\" + this.state.id)\n        if (resultEspace.error) {\n            this.setState({\n                enabled: true,\n                message: resultEspace.package + \" : \" + resultEspace.message\n            })\n        } else if (result.error) {\n            this.setState({\n                enabled: true,\n                message: result.package + \" : \" + result.message\n            })\n        } else {\n            this.setState({\n                process: result.data,\n                profiles: resultProfile.data,\n                espaces: resultEspace.data,\n                sources: resultSource.data\n            })\n        }\n        this.setState({ loading: null })\n    }\n\n    setSource(id) {\n        let fSource = false\n        this.state.sources.forEach(source => {\n            if (source.id === id) { fSource = source }\n        })\n        this.setState({ source: fSource })\n    }\n\n    setAction(id) {\n        let fAction = false\n        this.state.source.actions.forEach(action => {\n            if (action.id === id) { fAction = action }\n        })\n        console.log(fAction)\n        this.setState({ action: fAction })\n    }\n\n    async addSource() {\n        if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Action missing\" })\n            return\n        }\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Source missing\" })\n            return\n        }\n        let settings = []\n        for (let index = 0; index < this.state.action.settings.length; index++) {\n            let setting = this.state.action.settings[index]\n            let value = this.state[\"argument-\" + setting.id]\n            if (value == undefined) {\n                value = setting.default\n            }\n            settings.push({ reference: setting.id, value: value })\n        }\n        let action = {\n            source: this.state.source,\n            action: this.state.action,\n            arguments: settings,\n            enable: this.state.isChecked\n        }\n        let result = await new Request().post(action).fetch(\"/api/process/\" + this.state.id + \"/actions\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async deleteSource(idsource) {\n        let result = await new Request().delete().fetch(\"/api/process/\" + this.state.id + \"/actions/\" + idsource)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async delete(id) {\n        let result = await new Request().delete().fetch(\"/api/process/\" + id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.props.history.push('/process')\n        }\n    }\n\n    async executeAction() {\n        this.setState({ loading: true })\n        let tmp = {}\n        for (let index = 0; index < this.state.process.inputs.length; index++) {\n            let input = this.state.process.inputs[index];\n            let value = this.state[\"argument-\" + input.id]\n            if (value == undefined) {\n                value = input.default\n            }\n            tmp[input.reference] = value\n        }\n        let result = await new Request().post({ inputs: tmp }).fetch(\"/api/process/\" + this.state.process.id + \"/execute\")\n        if (result.error) {\n            this.setState({ loading: null, enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            if (result.data) {\n                this.setState({ executeInformation: JSON.stringify(result.data) })\n            }\n            this.componentDidMount()\n        }\n    }\n\n    async insertProfile(process, profile) {\n        let result = await new Request().post({ idProfile: profile.id, }).fetch(\"/api/process/\" + process.id + \"/profiles\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async deleteProfile(process, profile) {\n        let result = await new Request().delete().fetch(\"/api/process/\" + process.id + \"/profiles/\" + profile.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async deleteProcessInput(input) {\n        let result = await new Request().delete({}).fetch(\"/api/process/\" + this.state.process.id + \"/inputs/\" + input.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async insertProcessInput() {\n        if (this.state.typeInput == null) {\n            this.setState({ enabled: true, message: \"Missing-parameter : type is empty\" })\n            return\n        }\n        let result = await new Request().post({\n            reference: this.state.referenceInput,\n            name: this.state.nameInput,\n            type: this.state.typeInput,\n            enable: this.state.modeInput\n        }).fetch(\"/api/process/\" + this.state.process.id + \"/inputs\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({\n                referenceSettings: \"\",\n                valueSettings: \"\",\n                referenceInput: \"\",\n                nameInput: \"\",\n                modeInput: 0\n            })\n            this.componentDidMount()\n        }\n    }\n\n    updateAction(action, value) {\n        let tmp = {}\n        tmp[\"argument-\" + action.id] = value\n        this.setState(tmp)\n    }\n\n    render() {\n        if (this.state.process) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 25 }}>\n                        <Typography variant='h4'>\n                            {this.state.process.reference}\n                        </Typography>\n                        <Typography variant='subtitle1'>\n                            {this.state.process.espace.name}\n                        </Typography>\n                        <Typography variant='subtitle1'>\n                            {this.state.process.description}\n                        </Typography>\n                        <Divider style={{ marginTop: 10, marginBottom: 10 }} />\n                        <div  >\n                            <Typography variant='h5' style={{ marginBottom: 5 }}>Action</Typography>\n                            {\n                                this.state.process.mode == \"simple\" ?\n                                    this.state.process.mode === \"simple\" ?\n                                        <Button disabled={this.state.loading} style={{ alignSelf: 'center', marginTop: 10 }} variant={this.state.process.enable === 2 ? \"contained\" : \"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" startIcon={<Autorenew />}>\n                                            {this.state.process.name}\n                                        </Button> : null\n                                    :\n                                    <div style={{ flexDirection: 'column', display: 'flex', width: '20%' }}>\n                                        {\n                                            this.state.process.enable == 1 ?\n                                                <Button disabled={this.state.loading} style={{ marginTop: 10 }} variant={\"contained\"} onClick={() => { this.executeAction() }} color=\"default\" >\n                                                    {this.state.process.name_enable}\n                                                </Button> :\n                                                <Button disabled={this.state.loading} style={{ marginTop: 10 }} variant={\"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" >\n                                                    {this.state.process.name_disable}\n                                                </Button>\n                                        }\n                                    </div>\n                            }\n                        </div>\n                        <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\n                            {\n                                this.state.process.inputs.filter(input => {\n                                    return input.enable == this.state.process.enable\n                                }).map(input => {\n                                    return <Action setState={this.setState.bind(this)} action={input} flexDirection='column' orientation='horizontal' />\n                                })\n                            }\n                        </div>\n                        <div style={{ marginTop: 15 }} >\n                            <Typography variant='h5'>\n                                Input\n                            </Typography>\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableBody>\n                                            {\n                                                this.state.process.inputs.map(input =>\n                                                    <TableRow key={input.id}>\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.reference}</Typography></TableCell>\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.name}</Typography> </TableCell>\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.type}</Typography></TableCell>\n                                                        <TableCell align=\"center\"><Typography variant='body1'>{input.enable}</Typography></TableCell>\n                                                        <TableCell align=\"left\">\n                                                            <IconButton onClick={() => { this.deleteProcessInput(input) }} style={{ borderRadius: 5, margin: 0 }}>\n                                                                <Delete />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            }\n                                            <TableRow key={-1}>\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\n                                                    <TextField value={this.state.referenceInput} onChange={(event) => { this.setState({ referenceInput: event.nativeEvent.target.value }) }} placeholder='Reference' style={{ width: '100%' }}>\n                                                    </TextField>\n                                                </TableCell>\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\n                                                    <TextField value={this.state.nameInput} onChange={(event) => { this.setState({ nameInput: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\n                                                    </TextField>\n                                                </TableCell>\n                                                <TableCell align=\"left\" style={{ width: '20%' }}>\n                                                    <FormControl variant=\"outlined\" style={{ width: '100%' }} >\n                                                        <InputLabel>Type</InputLabel>\n                                                        <Select value={this.state.typeInput} onChange={(event) => { this.setState({ typeInput: event.target.value }) }} label=\"Type\" >\n                                                            <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\n                                                            <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\n                                                            <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\n                                                            <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n                                                </TableCell>\n                                                <TableCell align=\"center\" style={{ width: '10%' }}>\n                                                    {\n                                                        this.state.process.mode === 'switch' ?\n                                                            <Checkbox value={this.state.modeInput == 0} onChange={(event, checked) => { this.setState({ modeInput: checked ? 1 : 0 }) }} /> : null\n                                                    }\n                                                </TableCell>\n                                                <TableCell align=\"left\" >\n                                                    <IconButton onClick={() => { this.insertProcessInput() }} style={{ borderRadius: 5, margin: 0 }}>\n                                                        <Add />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        <div style={{ marginTop: 15 }} >\n                            <Typography variant='h5'>\n                                Module\n                            </Typography>\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell align=\"left\"><Typography variant='body1'>Module</Typography></TableCell>\n                                                <TableCell align=\"left\"><Typography variant='body1'>Type</Typography></TableCell>\n                                                <TableCell align=\"left\"><Typography variant='body1'>Action</Typography></TableCell>\n                                                <TableCell align=\"left\"><Typography variant='body1'>Arguments</Typography></TableCell>\n                                                <TableCell align=\"center\"><Typography variant='body1'>Mode</Typography></TableCell>\n                                                <TableCell align=\"left\"></TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {\n                                                this.state.process.actions.map(action =>\n                                                    <TableRow key={action.id}>\n                                                        <TableCell align=\"left\" style={{ width: '15%' }}><Typography variant='body1'>{action.object}</Typography></TableCell>\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.type}</Typography> </TableCell>\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.action}</Typography></TableCell>\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}>{action.arguments.map(argument => {\n                                                            return <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\n                                                        })}</TableCell>\n                                                        <TableCell align=\"center\" style={{ width: '15%' }}>{action.enable === 0 ? <Close /> : action.enable === 1 ? <Check /> : <Autorenew />}</TableCell>\n                                                        <TableCell align=\"left\">\n                                                            <IconButton onClick={() => { this.deleteSource(action.id) }}>\n                                                                <Delete />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            }\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                                <TableContainer style={{ marginTop: 15 }} component={Paper}>\n                                    <Table>\n                                        <TableRow>\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel>Source</InputLabel>\n                                                    <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\n                                                        {\n                                                            this.state.sources.map(source => {\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                            })\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            </TableCell>\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\n                                                {\n                                                    this.state.source ?\n                                                        <FormControl fullWidth >\n                                                            <InputLabel>Action</InputLabel>\n                                                            <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\n                                                                {\n                                                                    this.state.source.actions.map(action => {\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                                    })\n                                                                }\n                                                            </Select>\n                                                        </FormControl>\n                                                        : null\n                                                }\n                                            </TableCell>\n\n                                            <TableCell align=\"left\" style={{ width: '20%' }}>\n                                                {\n                                                    this.state.action ?\n                                                        this.state.action.settings.map(argument => {\n                                                            return (\n                                                                <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\n                                                                    <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\n                                                                </div>\n                                                            )\n                                                        }) : null\n                                                }\n                                            </TableCell>\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\n                                                {\n                                                    this.state.process.mode === 'switch' ?\n                                                        <Checkbox onChange={(event, isChecked) => { this.setState({ isChecked: isChecked }) }} /> : null\n                                                }\n                                            </TableCell>\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\n                                                <IconButton onClick={() => { this.addSource() }}>\n                                                    <Add />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        {\n                            this.state.executeInformation.length > 0 ?\n                                <div style={{ padding: 10 }}>\n                                    <Alert severity=\"success\" action={\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\n                                            <Close />\n                                        </IconButton>\n                                    }>\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\n                                    </Alert>\n                                </div>\n                                :\n                                null\n                        }\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Authorization\n                            </Typography>\n                            {\n                                this.state.profiles.map(profile => {\n                                    let state = false\n                                    this.state.process.profiles.forEach(pprofile => {\n                                        if (pprofile.profile == profile.id) {\n                                            state = true\n                                        }\n                                    })\n                                    return (\n                                        <ListItem style={{ padding: 1 }}  >\n                                            <FormControlLabel control={<Switch\n                                                checked={state}\n                                                onChange={() => {\n                                                    state ? this.deleteProfile(this.state.process, profile) : this.insertProfile(this.state.process, profile)\n                                                }}\n                                                color=\"primary\"\n                                            />} label={profile.name} />\n                                        </ListItem>\n                                    )\n                                })\n                            }\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\n                        <IconButton onClick={() => { this.delete(this.state.process.id) }} style={{ borderRadius: 5 }}>\n                            <Delete />\n                        </IconButton>\n                    </Paper>\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        {this.state.message}\n                    </Alert>\n                </div>\n            )\n        } else {\n            return (\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            )\n        }\n    }\n}\n\nexport default NewProcess","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport { IconButton, Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\nimport { Add, Delete, FileCopy, PlayArrow, Edit, Pause } from '@material-ui/icons'\n\nimport Alert from '../../../components/Alert'\nimport Theme from '../../../Theme'\nimport Request from '../../../utils/Request'\n\nclass Routine extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            loading: true,\n            enabled: false,\n            message: \"\",\n            routines: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/routines\")\n        if (result.error) {\n            this.setState({\n                enabled: true,\n                message: result.package + \" : \" + result.message\n            })\n        } else {\n            this.setState({\n                enabled: false,\n                message: \"\",\n                loading: false,\n                routines: result.data\n            })\n        }\n    }\n\n    async delete(id) {\n        let result = await new Request().delete().fetch(\"/api/routines/\" + id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async duplicate(id) {\n        let result = await new Request().put().fetch(\"/api/routines/\" + id + \"/duplicate\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async updateStatus(id, status) {\n        let result = await new Request().put({ status: status }).fetch(\"/api/routines/\" + id + \"/status\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {this.state.routines.slice(this.state.page * 10, (this.state.page + 1) * 10).map((routine) => (\n                                <TableRow key={routine.id} >\n                                    <TableCell align=\"left\">\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + routine.icon + \".svg\"} />\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {routine.name}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                        <div style={{ flex: 1, flexDirection: 'row', display: 'flex', alignContent: 'center', alignItems: 'center', justifyContent: 'end' }}>\n                                            <IconButton onClick={() => { this.updateStatus(routine.id, routine.status === 0 ? 1 : 0) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2, backgroundColor: routine.status === 1 ? Theme.palette.success.main : null }}>\n                                                {routine.status === 0 ? <PlayArrow /> : <Pause />}\n                                            </IconButton>\n                                            <IconButton onClick={() => { this.props.history.push('/routine/' + routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\n                                                <Edit />\n                                            </IconButton>\n                                            <IconButton onClick={() => { this.duplicate(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\n                                                <FileCopy />\n                                            </IconButton>\n                                            <IconButton onClick={() => { this.delete(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\n                                                <Delete />\n                                            </IconButton>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                    <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                        <Link to=\"/routine/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <IconButton style={{ borderRadius: 0 }}>\n                                <Add />\n                            </IconButton>\n                        </Link>\n                    </Paper>\n                    <TablePagination component=\"div\" count={this.state.routines.length} rowsPerPage={10} page={this.state.page} rowsPerPageOptions={[]} onChangePage={(event, page) => { this.setState({ page: page }) }} />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Routine","import React from 'react'\nimport { TextField, Button, IconButton } from '@material-ui/core'\nimport { Save, Cached } from '@material-ui/icons'\n\nclass Week extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: \"\",\n            sunday: false,\n            monday: false,\n            tuesday: false,\n            wednesday: false,\n            friday: false,\n            saturday: false,\n            time: \"00:00\"\n        }\n    }\n\n    calculate() {\n        let timeSplit = this.state.time.split(\":\")\n        if(timeSplit.length != 2) { return }\n        let value = '0 ' + timeSplit[1] + ' ' +  timeSplit[0]  + ' * * ' +  \n        \n            (this.state.sunday ? \"0,\" : \"\") +\n            (this.state.monday ? \"1,\" : \"\") +\n            (this.state.tuesday ? \"2,\" : \"\") +\n            (this.state.wednesday ? \"3,\" : \"\") +\n            (this.state.thursday ? \"4,\" : \"\") +\n            (this.state.friday ? \"5,\" : \"\") +\n            (this.state.saturday ? \"6,\" : \"\");\n\n        value = value.slice(0,value.length - 1 );\n\n\n        if((parseInt(timeSplit[1]) + parseInt(timeSplit[0]) * 60) > 1440 ) {\n            this.setState({\n                time: \"\"\n            })\n            return\n        } else {\n            this.props.onChange(value)\n        }\n    }\n\n    render() {\n        return (<div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, paddingLeft: 5, paddingRight: 5, flexDirection: 'column' }}>\n            <div style={{ display: 'flex', flexDirection: 'row', alignContent: 'center', alignItems: 'center', flex: 1, justifyContent: 'space-between' }}>\n                <div style={{ flex: 1 }}>\n                    <IconButton size='small' onClick={() => { this.props.onChangeMode() }} variant='outlined'>\n                        <Cached />\n                    </IconButton>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.sunday ? 'contained' : 'outlined'} onClick={() => {this.setState({sunday: !this.state.sunday},() => {this.calculate()})}}  >{\"Sunday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.monday ? 'contained' : 'outlined'} onClick={() => {this.setState({monday: !this.state.monday},() => {this.calculate()})}} >{\"Monday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.tuesday ? 'contained' : 'outlined'} onClick={() => {this.setState({tuesday: !this.state.tuesday},() => {this.calculate()})}} >{\"Tuesday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.wednesday ? 'contained' : 'outlined'} onClick={() => {this.setState({wednesday: !this.state.wednesday},() => {this.calculate()})}} >{\"Wednesday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.thursday ? 'contained' : 'outlined'} onClick={() => {this.setState({thursday: !this.state.thursday},() => {this.calculate()})}} >{\"Thursday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.friday ? 'contained' : 'outlined'} onClick={() => {this.setState({friday: !this.state.friday},() => {this.calculate()})}} >{\"Friday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }}>\n                    <Button fullWidth size='small' variant={this.state.saturday ? 'contained' : 'outlined'} onClick={() => {this.setState({saturday: !this.state.saturday},() => {this.calculate()})}} >{\"Saturday\"}</Button>\n                </div>\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 2, marginLeft: 2 }} >\n                    <TextField  defaultValue='00:00' type='time' size='small' value={this.state.time}  onChange={(event) => { this.setState({ time: event.currentTarget.value },() => {this.calculate()}) }}  placeholder='hh:mm' variant='outlined' />\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nexport default Week","import React from 'react'\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\nimport { Save, Add, List, Cached } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Source from '../../../utils/Source'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\nimport Theme from '../../../Theme'\nimport WeekSchedul from '../../../components/WeekSchedul'\nimport IconList from '../../../components/IconList'\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    backgroundColor: Theme.palette.background.paper,\n    padding: 10,\n    borderRadius: 5\n}\n\nclass NewRoutine extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            message: \"\",\n            routine: null,\n            sources: [],\n            mode: 'counter',\n            modalTrigger: false,\n            modalEffect: false,\n            routine: {\n                watch: 1,\n                triggers: [],\n                effects: [],\n                name: \"\",\n                icon: \"\"\n            }\n        }\n    }\n\n    async componentDidMount() {\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\"])\n        if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else {\n            this.setState({ sources: resultSource.data })\n        }\n    }\n\n    reset() {\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\n    }\n\n    setSource(id) {\n        this.state.sources.map(source => {\n            if (source.id == id) { this.setState({ source: source, action: null }) }\n        })\n    }\n\n    setAction(id) {\n        this.state.source.actions.map(action => {\n            if (action.id == id) { this.setState({ action: action }) }\n        })\n    }\n\n    updateIcon(icon) {\n        let routine = this.state.routine\n        routine.icon = icon\n        this.setState({ routine: routine })\n    }\n\n    updateName(name) {\n        let routine = this.state.routine\n        routine.name = name\n        this.setState({ routine: routine })\n    }\n\n    updateWatch(watch) {\n        let routine = this.state.routine\n        routine.watch = watch\n        this.setState({ routine: routine })\n    }\n\n    addTrigger() {\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Missing source\" })\n        } else if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Missing action\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.action.settings.length; index++) {\n                let setting = this.state.action.settings[index];\n                let value = this.state[\"argument-\" + setting.id]\n                if (value == undefined) {\n                    value = setting.default\n                }\n                settings.push({ reference: setting.id, value: value })\n            }\n            let routine = this.state.routine\n            routine.triggers.push({\n                source: this.state.source.id,\n                type: this.state.source.type,\n                action: this.state.action.id,\n                arguments: settings,\n                result: this.state.result,\n                statement: this.state.statement,\n                expected: this.state.expected\n            })\n            this.setState({\n                routine: routine,\n                modalTrigger: false,\n                action: null,\n                source: null,\n                result: null,\n                statement: null,\n                expected: null\n            })\n        }\n    }\n\n    addEffect() {\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Missing source\" })\n        } else if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Missing action\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.action.settings.length; index++) {\n                let setting = this.state.action.settings[index];\n                let value = this.state[\"argument-\" + setting.id]\n                if (value == undefined) {\n                    value = setting.default\n                }\n                settings.push({ reference: setting.id, value: value })\n            }\n            let routine = this.state.routine\n            routine.effects.push({\n                source: this.state.source.id,\n                type: this.state.source.type,\n                action: this.state.action.id,\n                arguments: settings\n            })\n            this.setState({\n                routine: routine,\n                modalEffect: false,\n                action: null,\n                source: null\n            })\n        }\n    }\n\n    removeTrigger(pIndex) {\n        let routine = this.state.routine\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\n        routine.triggers = triggers\n        this.setState({ routine: routine })\n    }\n\n    removeEffect(pIndex) {\n        let routine = this.state.routine\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\n        routine.effects = effects\n        this.setState({ routine: routine })\n    }\n\n    async save() {\n        if (this.state.routine.name.length == 0) {\n            this.setState({ enabled: true, message: \"Missing name\" })\n        } else if (this.state.routine.icon.length == 0) {\n            this.setState({ enabled: true, message: \"Missing icon\" })\n        } else if (this.state.routine.effects.length == 0) {\n            this.setState({ enabled: true, message: \"Missing effect\" })\n        } else {\n            let result = await new Request().post({\n                name: this.state.routine.name,\n                watch: this.state.routine.watch.toString(),\n                icon: this.state.routine.icon,\n                triggers: this.state.routine.triggers,\n                effects: this.state.routine.effects,\n                mode: this.state.mode\n            }).fetch(\"/api/routines\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.history.push('/routine')\n            }\n        }\n    }\n\n    render() {\n        if (this.state.routine) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                        <div>\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\n                                                    <List />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                ></TextField>\n                                <Popover\n                                    open={this.state.popup}\n                                    onClose={() => { this.setState({ popup: false }) }}\n                                    anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\n                                    transformOrigin={{ vertical: 'top', horizontal: 'center', }}\n                                >\n                                    <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon) }} />\n                                </Popover>\n                            </div>\n                            {\n                                this.state.mode == 'counter' ?\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 5, paddingRight: 5 }}>\n                                            <div style={{ flex: 1 }}>\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\n                                                    <Cached />\n                                                </IconButton>\n                                            </div>\n                                            <div style={{ display: 'flex', flex: 20, justifyContent: 'center' }}>\n                                                <Slider\n                                                    defaultValue={0}\n                                                    valueLabelDisplay=\"auto\"\n                                                    orientation={'horizontal'}\n                                                    min={0}\n                                                    max={1440}\n                                                    step={1}\n                                                    value={this.state.routine.watch}\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div> :\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25,  borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\n                                    </div>\n                            }\n\n                        </div>\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\n                            <div style={{ flex: 1, padding: 5 }} >\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\n\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\n                                    this.state.routine.triggers.map((trigger, index) => {\n                                        return (\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\n                                                <div  >\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\n                                                    {\n                                                        trigger.arguments.length > 0 ?\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                {\n                                                                    trigger.arguments.map(setting => {\n                                                                        return (\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                                {\n                                                    trigger.result && trigger.statement && trigger.expected ?\n                                                        <div>\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\n                                                            </div>\n                                                        </div>\n                                                        : null\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <Add />\n                                    </Button>\n                                </Card>\n                            </div>\n                            <div style={{ flex: 1, padding: 5 }} >\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\n                                    {\n                                        this.state.routine.effects.map((effect, index) => {\n                                            return (\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\n                                                    {\n                                                        effect.arguments.length > 0 ?\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                {\n                                                                    effect.arguments.map(setting => {\n                                                                        return (\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <Add />\n                                    </Button>\n                                </Card>\n                            </div>\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\n                            <Save />\n                        </IconButton>\n                    </Paper>\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        {this.state.message}\n                    </Alert>\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\n                        <Fade in={this.state.modalTrigger} >\n                            <Paper style={style}>\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                                    <Typography variant='h5' >\n                                        New Trigger\n                                    </Typography>\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                        <InputLabel>Source</InputLabel>\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                            {\n                                                this.state.sources.map(source => {\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                })\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                    {\n                                        this.state.source ?\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                                <InputLabel>Action</InputLabel>\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                    {\n                                                        this.state.source.actions.map(action => {\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                            : null\n                                    }\n                                    {\n                                        this.state.action && this.state.action.settings.length > 0 ?\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\n                                                    {\n                                                        this.state.action.settings.map(setting => {\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} /></div>\n                                                        })\n                                                    }\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\n                                        </div>\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\n                                            <InputLabel>Condition</InputLabel>\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\n                                        </div>\n                                    </div>\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\n                        <Fade in={this.state.modalEffect} >\n                            <Paper style={style}>\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                                    <Typography variant='h5' >\n                                        New effect\n                                    </Typography>\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                        <InputLabel>Source</InputLabel>\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                            {\n                                                this.state.sources.map(source => {\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                })\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                    {\n                                        this.state.source ?\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                                <InputLabel>Action</InputLabel>\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                    {\n                                                        this.state.source.actions.map(action => {\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                            : null\n                                    }\n                                    {\n                                        this.state.action && this.state.action.settings.length > 0 ?\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\n                                                    {\n                                                        this.state.action.settings.map(setting => {\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} /></div>\n                                                        })\n                                                    }\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Fade>\n                    </Modal>\n                </div>\n            )\n        } else {\n            return (\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            )\n        }\n    }\n}\n\nexport default NewRoutine","import React from 'react'\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\nimport { Save, Add, List, Cached } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\nimport Action from '../../../components/Action'\nimport Theme from '../../../Theme'\nimport IconList from '../../../components/IconList'\nimport WeekSchedul from '../../../components/WeekSchedul'\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    backgroundColor: Theme.palette.background.paper,\n    padding: 10,\n    borderRadius: 5\n}\n\nclass NewRoutine extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            popup: false,\n            id: props.match.params.id,\n            enabled: false,\n            message: \"\",\n            routine: null,\n            sources: [],\n            modalTrigger: false,\n            modalEffect: false,\n            mode: \"counter\"\n        }\n    }\n\n    async componentDidMount() {\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\"])\n        let result = await new Request().get().fetch(\"/api/routines/\" + this.state.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else {\n            this.setState({mode: result.data.mode, routine: result.data, sources: resultSource.data })\n        }\n    }\n\n    reset() {\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\n    }\n\n    setSource(id) {\n        this.state.sources.map(source => {\n            if (source.id == id) { this.setState({ source: source, action: null }) }\n        })\n    }\n\n    setAction(id) {\n        this.state.source.actions.map(action => {\n            if (action.id == id) { this.setState({ action: action }) }\n        })\n    }\n\n    updateIcon(icon) {\n        let routine = this.state.routine\n        routine.icon = icon\n        this.setState({ routine: routine })\n    }\n\n    updateName(name) {\n        let routine = this.state.routine\n        routine.name = name\n        this.setState({ routine: routine })\n    }\n\n    updateWatch(watch) {\n        let routine = this.state.routine\n        routine.watch = watch\n        this.setState({ routine: routine })\n    }\n\n    addTrigger() {\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Missing source\" })\n        } else if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Missing action\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.action.settings.length; index++) {\n                let setting = this.state.action.settings[index];\n                let value = this.state[\"argument-\" + setting.id]\n                if (value == undefined) {\n                    value = setting.default\n                }\n                settings.push({ reference: setting.id, value: value })\n            }\n            let routine = this.state.routine\n            routine.triggers.push({\n                source: this.state.source.id,\n                type: this.state.source.type,\n                action: this.state.action.id,\n                arguments: settings,\n                result: this.state.result,\n                statement: this.state.statement,\n                expected: this.state.expected\n            })\n            this.setState({\n                routine: routine,\n                modalTrigger: false,\n                action: null,\n                source: null,\n                result: null,\n                statement: null,\n                expected: null\n            })\n        }\n    }\n\n    addEffect() {\n        if (this.state.source == null) {\n            this.setState({ enabled: true, message: \"Missing source\" })\n        } else if (this.state.action == null) {\n            this.setState({ enabled: true, message: \"Missing action\" })\n        } else {\n            let settings = []\n            for (let index = 0; index < this.state.action.settings.length; index++) {\n                let setting = this.state.action.settings[index];\n                let value = this.state[\"argument-\" + setting.id]\n                if (value == undefined) {\n                    value = setting.default\n                }\n                settings.push({ reference: setting.id, value: value })\n            }\n            let routine = this.state.routine\n            routine.effects.push({\n                source: this.state.source.id,\n                type: this.state.source.type,\n                action: this.state.action.id,\n                arguments: settings\n            })\n            this.setState({\n                routine: routine,\n                modalEffect: false,\n                action: null,\n                source: null\n            })\n        }\n    }\n\n    removeTrigger(pIndex) {\n        let routine = this.state.routine\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\n        routine.triggers = triggers\n        this.setState({ routine: routine })\n    }\n\n    removeEffect(pIndex) {\n        let routine = this.state.routine\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\n        routine.effects = effects\n        this.setState({ routine: routine })\n    }\n\n    async save() {\n        if (this.state.routine.name.length == 0) {\n            this.setState({ enabled: true, message: \"Missing name\" })\n        } else if (this.state.routine.icon.length == 0) {\n            this.setState({ enabled: true, message: \"Missing icon\" })\n        } else if (this.state.routine.effects.length == 0) {\n            this.setState({ enabled: true, message: \"Missing effect\" })\n        } else {\n            let result = await new Request().put({\n                name: this.state.routine.name,\n                watch: this.state.routine.watch.toString(),\n                icon: this.state.routine.icon,\n                triggers: this.state.routine.triggers,\n                effects: this.state.routine.effects,\n                mode: this.state.mode\n            }).fetch('/api/routines/' + this.state.id)\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.history.push('/routine/')\n            }\n        }\n    }\n\n    render() {\n        if (this.state.routine) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                        <div>\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }} \n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\n                                                <List />\n                                            </IconButton>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                ></TextField>\n                            \n                        <Popover\n                            open={this.state.popup}\n                            onClose={() => { this.setState({ popup: false }) }}\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\n                        >\n                            <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon)}} />\n                        </Popover>\n                            \n                            </div>\n                            {\n                                this.state.mode == 'counter' ?\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 5, paddingRight: 5 }}>\n                                            <div style={{ flex: 1 }}>\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\n                                                    <Cached />\n                                                </IconButton>\n                                            </div>\n                                            <div style={{ display: 'flex', flex: 15, justifyContent: 'center' }}>\n                                                <Slider\n                                                    defaultValue={0}\n                                                    valueLabelDisplay=\"auto\"\n                                                    orientation={'horizontal'}\n                                                    min={0}\n                                                    max={1440}\n                                                    step={1}\n                                                    value={this.state.routine.watch}\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div> :\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\n                                    </div>\n                            }\n                        </div>\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\n                            <div style={{ flex: 1, padding: 5 }} >\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\n\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\n                                    this.state.routine.triggers.map((trigger, index) => {\n                                        return (\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\n                                                <div  >\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\n                                                    {\n                                                        trigger.arguments.length > 0 ?\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                {\n                                                                    trigger.arguments.map(setting => {\n                                                                        return (\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                                {\n                                                    trigger.result && trigger.statement && trigger.expected ?\n                                                        <div>\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\n                                                            </div>\n                                                        </div>\n                                                        : null\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <Add />\n                                    </Button>\n                                </Card>\n                            </div>\n                            <div style={{ flex: 1, padding: 5 }} >\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\n                                    {\n                                        this.state.routine.effects.map((effect, index) => {\n                                            return (\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\n                                                    {\n                                                        effect.arguments.length > 0 ?\n                                                            <div style={{ marginLeft: 20 }}>\n                                                                {\n                                                                    effect.arguments.map(setting => {\n                                                                        return (\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                        <Add />\n                                    </Button>\n                                </Card>\n                            </div>\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\n                            <Save />\n                        </IconButton>\n                    </Paper>\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        {this.state.message}\n                    </Alert>\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\n                        <Fade in={this.state.modalTrigger} >\n                            <Paper style={style}>\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                                    <Typography variant='h5' >\n                                        New Trigger\n                                    </Typography>\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                        <InputLabel>Source</InputLabel>\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                            {\n                                                this.state.sources.map(source => {\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                })\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                    {\n                                        this.state.source ?\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                                <InputLabel>Action</InputLabel>\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                    {\n                                                        this.state.source.actions.map(action => {\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                            : null\n                                    }\n                                    {\n                                        this.state.action && this.state.action.settings.length > 0 ?\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\n                                                    {\n                                                        this.state.action.settings.map(setting => {\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action setState={this.setState.bind(this)} action={setting} flexDirection='column' orientation='horizontal'  /></div>\n                                                        })\n                                                    }\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\n                                        </div>\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\n                                            <InputLabel>Condition</InputLabel>\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\n                                        </div>\n                                    </div>\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Fade>\n                    </Modal>\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\n                        <Fade in={this.state.modalEffect} >\n                            <Paper style={style}>\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\n                                    <Typography variant='h5' >\n                                        New effect\n                                    </Typography>\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                        <InputLabel>Source</InputLabel>\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                            {\n                                                this.state.sources.map(source => {\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                })\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                    {\n                                        this.state.source ?\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\n                                                <InputLabel>Action</InputLabel>\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                    {\n                                                        this.state.source.actions.map(action => {\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                        })\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                            : null\n                                    }\n                                    {\n                                        this.state.action && this.state.action.settings.length > 0 ?\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\n                                                    {\n                                                        this.state.action.settings.map(setting => {\n                                                            return <div style={{marginTop: 5, marginBottom: 5}}><Action setState={this.setState.bind(this)} action={setting} /></div>\n                                                        })\n                                                    }\n                                                </div>\n                                            </div>\n                                            : null\n                                    }\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\n                                        Save\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Fade>\n                    </Modal>\n                </div>\n            )\n        } else {\n            return (\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            )\n        }\n    }\n}\n\nexport default NewRoutine","import React from 'react'\nimport { Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\nimport md5 from 'md5'\nimport { Link } from \"react-router-dom\"\nimport Request from '../../../utils/Request'\nimport Alert from '../../../components/Alert'\n\nclass Module extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            modules: []\n        }\n    }\n\n    async componentDidMount() {\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\n        if (resultModule.error) {\n            this.setState({ enabled: true, message: resultModule.package + \" : \" + resultModule.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Identifiant\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.modules.slice(this.state.page * 10, (this.state.page + 1) * 10).map((pmodule) => (\n                                <Link to={\"/module/\" + md5(pmodule.name)} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\n                                    <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {pmodule.name}\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </Link>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignContent: 'center', alignItems: 'center' }}>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.modules.length}\n                        rowsPerPage={10}\n                        page={this.state.page}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Module","import React from 'react'\nimport md5 from 'md5'\nimport JSONPretty from 'react-json-pretty'\n\nimport { Alert } from '@material-ui/lab'\nimport { Close } from '@material-ui/icons'\nimport { Paper, Typography, Divider, Button, IconButton } from '@material-ui/core'\nimport AlertComponent from '../../../components/Alert'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\n\nclass Detail extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            hashId: props.match.params.id,\n            loading: null,\n            module: null,\n            enabled: false,\n            message: \"\",\n            executeInformation: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/configurations/module\")\n        if (result.error) {\n            this.setState({\n                enabled: true,\n                message: result.package + \" : \" + result.message\n            })\n            this.props.history.push('/module')\n        } else {\n            let _module = false\n            result.data.forEach(pModule => {\n                if (md5(pModule.name) == this.state.hashId) {\n                    _module = pModule\n                }\n            })\n            if (_module) {\n                this.setState({\n                    module: _module\n                })\n            } else {\n                this.props.history.push('/module')\n            }\n        }\n        this.setState({ loading: null })\n    }\n\n    async executeAction(action, settings) {\n        this.setState({ loading: action })\n        let tmp = {}\n        for (let index = 0; index < settings.length; index++) {\n            let argument = settings[index];\n            let value = this.state[\"argument-\" + argument.id]\n            if (value == undefined) {\n                value = argument.default\n            }\n            tmp[argument.id] = value\n        }\n        let result = await new Request().post({ settings: tmp, reference: this.state.module.reference }).fetch(\"/api/modules/\" + md5(this.state.module.name) + \"/actions/\" + action)\n        if (result.error) {\n            this.setState({\n                enabled: true,\n                message: result.package + \" : \" + result.message\n            })\n            this.setState({ loading: null })\n        } else {\n            if (result.data) {\n                this.setState({\n                    executeInformation: JSON.stringify(result.data)\n                })\n            }\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        if (this.state.module) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\n                        <div style={{ padding: 10 }}>\n                            <Typography variant='h4' >\n                                {this.state.module.name.split(\"/\")[1]}\n                            </Typography>\n                            <Typography variant='subtitle1' >\n                                {this.state.module.name}\n                            </Typography>\n                        </div>\n                        <Divider />\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            {\n                                this.state.module.actions.map(action => {\n                                    return (\n                                        <Paper style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', padding: 10 }}>\n                                            <Button disabled={this.state.loading == action.id} onClick={() => { this.executeAction(action.id, action.settings) }} variant={this.state.loading == action.id ? 'contained' : 'outlined'} style={{ width: '250px', height: '100%' }} >\n                                                {action.name}\n                                            </Button>\n                                            {\n                                                action.settings.length > 0 ?\n                                                    <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\n                                                        {\n                                                            action.settings.map(setting => {\n                                                                return <Action flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\n                                                            })\n                                                        }\n                                                    </div>\n                                                    : null\n                                            }\n                                        </Paper>\n                                    )\n                                })\n                            }\n                        </div>\n                        {\n                            this.state.executeInformation.length > 0 ?\n                                <div style={{ padding: 10 }}>\n                                    <Alert severity=\"success\" action={\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\n                                            <Close />\n                                        </IconButton>\n                                    }>\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\n                                    </Alert>\n                                </div>\n                                :\n                                null\n                        }\n                    </Paper>\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        {this.state.message}\n                    </AlertComponent>\n                </div>\n            )\n        } else {\n            return (\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </AlertComponent>\n            )\n        }\n    }\n}\n\nexport default Detail","import React from 'react'\nimport {IconButton, Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead } from '@material-ui/core'\n\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport { Link } from \"react-router-dom\"\nimport { Category, DevicesOther, Store } from '@material-ui/icons'\n\nclass Configuration extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            pageSmartobject: 0,\n            pageModule: 0,\n            enabled: false,\n            message: \"\",\n            modules: [],\n            smartobjects: []\n        }\n    }\n\n    async componentDidMount() {\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\n        if (resultModule.error) {\n            this.setState({ enabled: true, message: resultModule.package + \" : \" + resultModule.message })\n        } else if (resultSmartobject.error) {\n            this.setState({ enabled: true, message: resultSmartobject.package + \" : \" + resultSmartobject.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data, smartobjects: resultSmartobject.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Identifiant\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Name\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.smartobjects.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.id}\n                                        </Typography>\n                                    </TableCell><TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.name}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center'}}>\n                <div style={{ flexDirection: 'row', display: 'flex' }}>\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                            <Link to=\"/market/module\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <IconButton style={{ borderRadius: 0 }}>\n                                    <Store />\n                                </IconButton>\n                            </Link>\n                            </Paper>\n                    </div>\n                        <TablePagination\n                        component=\"div\"\n                        count={this.state.smartobjects.length}\n                        rowsPerPage={10}\n                        page={this.state.pageSmartobject}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ pageSmartobject: page }) }}\n                    />\n                </div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Identifiant\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Name\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.modules.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.id}\n                                        </Typography>\n                                    </TableCell><TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.name}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                <div style={{ flexDirection: 'row', display: 'flex' }}>\n                        <Paper style={{width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                            <Link to=\"/market/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <IconButton style={{ borderRadius: 0 }}>\n                                    {this.state.id != \"smartobject\" ? <DevicesOther/> : <Category />}\n                                </IconButton>\n                            </Link>\n                            </Paper>\n                    </div>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.modules.length}\n                        rowsPerPage={10}\n                        page={this.state.pageModule}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ pageModule: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Configuration","import React from 'react'\nimport { IconButton, Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead, Button } from '@material-ui/core'\n\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport { Link } from \"react-router-dom\"\nimport { Category, DevicesOther, Close, GetApp } from '@material-ui/icons'\n\nclass Configuration extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: props.match.params.id,\n            enabled: false,\n            message: \"\",\n            markets: [],\n            pageMarket: 0,\n            severity: \"error\",\n            loading: false\n        }\n    }\n\n    async install(pPackage) {\n        this.setState({loading: true})\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/install\")\n        if (result.error) {\n            this.setState({loading: false, severity: \"error\",enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({severity: \"info\", enabled: true, message: pPackage + \" was installed\" })\n            this.componentDidMount()\n        }\n    }\n\n    async uninstall(pPackage) {\n        this.setState({loading: true})\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/uninstall\")\n        if (result.error) {\n            this.setState({loading: false,severity: \"error\", enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({severity: \"info\", enabled: true, message: pPackage + \" was removed\" })\n            this.componentDidMount()\n        }\n    }\n    componentDidUpdate() {\n        if (this.props.match.params.id != this.state.id) {\n            this.setState({\n                id: this.props.match.params.id\n            }, () => { this.componentDidMount() })\n        }\n    }\n\n    async componentDidMount() {\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\n        let result = await fetch(\"https://market.intendant.io\")\n        let resultMarket = await result.json()\n        resultMarket = resultMarket.map(market => {\n            market.alreadyInstall = false\n            return market\n        })\n        resultModule.data.forEach(pModule => {\n            resultMarket = resultMarket.map(market => {\n                if (market.name == pModule.name) {\n                    market.alreadyInstall = true\n                }\n\n                return market\n            })\n        })\n        resultSmartobject.data.forEach(pModule => {\n            resultMarket = resultMarket.map(market => {\n                if (market.name == pModule.name) {\n                    market.alreadyInstall = true\n                }\n\n                return market\n            })\n        })\n        this.setState({ markets: resultMarket.filter(market => { return market.name.includes(this.state.id) }) })\n        if (resultModule.error) {\n            this.setState({ severity: \"error\",enabled: true, message: resultModule.package + \" : \" + resultModule.message })\n        } else if (resultSmartobject.error) {\n            this.setState({ severity: \"error\",enabled: true, message: resultSmartobject.package + \" : \" + resultSmartobject.message })\n        } else {\n            this.setState({ modules: resultModule.data, smartobjects: resultSmartobject.data })\n        }\n        this.setState({loading: false})\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Name\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='left'>\n                                    <Typography variant='body1'>\n                                        Dependencies\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='center'>\n                                    <Typography variant='body1'>\n                                        Action\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.markets.slice(this.state.pageMarket * 10, (this.state.pageMarket + 1) * 10).map((pmodule) => (\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            {pmodule.name}\n                                        </Typography>\n                                    </TableCell><TableCell align=\"left\">\n                                        <Typography variant='body1'>\n                                            None\n                                        </Typography>\n                                    </TableCell><TableCell align=\"center\">\n                                        <Typography variant='body1'>\n                                            {\n                                                pmodule.alreadyInstall ?\n                                                    <Button disabled={this.state.loading} size='small' startIcon={<Close />} onClick={() => {this.uninstall(pmodule.name)}} variant=\"outlined\" >\n                                                        Remove\n                                                    </Button>\n                                                    :\n                                                    <Button disabled={this.state.loading} size='small' startIcon={<GetApp />} onClick={() => {this.install(pmodule.name)}} variant=\"outlined\" disableElevation  >\n                                                        Install\n                                                    </Button>\n                                            }\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                            <Link to={this.state.id == \"smartobject\" ? \"/market/module\" : \"/market/smartobject\"} style={{ textDecoration: 'none', color: 'white' }}>\n                                <IconButton style={{ borderRadius: 0 }}>\n                                    {this.state.id != \"smartobject\" ? <DevicesOther /> : <Category />}\n                                </IconButton>\n                            </Link>\n                        </Paper>\n                    </div>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.markets.length}\n                        rowsPerPage={10}\n                        page={this.state.pageMarket}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ pageMarket: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Configuration","import React from 'react'\nimport { Add } from '@material-ui/icons'\nimport { Typography, Paper, TableBody, TableContainer , TableHead ,TableCell, Table, TableRow, TablePagination, IconButton  } from '@material-ui/core'\nimport { Link } from \"react-router-dom\"\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass Widget extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            widgets: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/widgets\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", widgets: result.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableBody>\n                            {this.state.widgets.slice(this.state.page * 10, (this.state.page + 1) * 10).map((widget) => (\n                                <Link to={\"/widget/\" + widget.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\n                                    <TableRow hover key={widget.reference} style={{ cursor: 'pointer' }}>\n                                    <TableCell align=\"left\">\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + widget.icon + \".svg\"} />\n                                    </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {widget.reference}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            {widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map(content => {\n                                                return content.content.split(\"\\n\").map(_content => {\n                                                    return (\n                                                        <Typography variant='body1' style={{ fontWeight: content.type.reference == 'title' ? 'bold' : 'normal' }}>\n                                                            {_content}\n                                                        </Typography>\n                                                    )\n                                                })\n                                            })}\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            <Typography variant='body1'>\n                                                {widget.icon}\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </Link>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                            <Link to=\"/widget/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                                <IconButton style={{ borderRadius: 0 }}>\n                                    <Add />\n                                </IconButton>\n                            </Link>\n                        </Paper>\n                    </div>\n                    <TablePagination\n                        component=\"div\"\n                        count={this.state.widgets.length}\n                        rowsPerPage={10}\n                        page={this.state.page}\n                        rowsPerPageOptions={[]}\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\n                    />\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    { this.state.message }\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Widget","import React from 'react'\nimport Alert from '../../../components/Alert'\nimport Action from '../../../components/Action'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\n\nimport { Popover, InputAdornment, TableRow, Table, MenuItem, FormControl, TableCell, IconButton, Typography, InputLabel, Button, TextField, Paper, TableBody, TableContainer, TableHead, Divider, Select } from '@material-ui/core'\nimport { Close, Add, List } from '@material-ui/icons'\nimport IconList from '../../../components/IconList'\n\nclass NewWidget extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            message: \"\",\n            popup: false,\n            content: null,\n            description: \"\",\n            image: \"\",\n            sources: [],\n            contentSources: [],\n            source: null,\n            action: null,\n            widgetReference: \"\",\n            reference: \"\",\n            icon: \"\",\n            type: \"title\",\n            types: [],\n            contents: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/smartobjects\")\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\n        let resultSource = await Source.getSource([\"smartobject\",\"module\"])\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else if (resultConfiguration.error) {\n            this.setState({ enabled: true, message: resultConfiguration.package + \" : \" + resultConfiguration.message })\n        } else if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", loading: false, sources: resultSource.data, type: false, types: resultConfiguration.data.contents.types })\n        }\n    }\n\n    setSource(id) {\n        this.state.sources.map(source => {\n            if (source.id == id) { this.setState({ source: source, action: null }) }\n        })\n    }\n\n\n    setAction(id) {\n        this.state.source.actions.map(action => {\n            if (action.id == id) {\n                this.setState({ action: action })\n            }\n        })\n    }\n\n    setType(id) {\n        this.state.types.map(type => {\n            if (type.id == id) {\n                this.setState({ type: type })\n            }\n        })\n    }\n\n    async save() {\n        if (this.state.widgetReference.length == 0 || this.state.contentSources.length == 0 || this.state.icon.length == 0) {\n            this.setState({ enabled: true, message: \"Missing parameters\" })\n            return\n        }\n        let authorization = localStorage.getItem(\"authorization\")\n        let server = localStorage.getItem(\"server\")\n        let result = await fetch(server + \"/api/widgets\", {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \" + authorization\n            },\n            body: JSON.stringify({\n                reference: this.state.widgetReference,\n                sources: this.state.contentSources,\n                contents: this.state.contents,\n                icon: this.state.icon\n            })\n        })\n        let resultJSON = await result.json()\n        if (resultJSON.error) {\n            this.setState({ enabled: true, message: resultJSON.package + \" : \" + resultJSON.message })\n        } else {\n            this.props.history.push('/widget')\n        }\n    }\n\n\n    insertContent() {\n        let contents = this.state.contents\n        contents.push({ type: this.state.type, content: this.state.content })\n        this.setState({ contents: contents, content: \"\" })\n    }\n\n    insertSource() {\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\n            this.setState({ enabled: true, message: \"Missing parameters\" })\n            return\n        }\n        let find = false\n        let contentSources = this.state.contentSources\n        contentSources.forEach(contentSource => {\n            if (contentSource.reference == this.state.reference) {\n                find = true\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\n            }\n        })\n        if (find) {\n            return\n        }\n        let tmpsettings = []\n        let action = this.state.action\n        for (let index = 0; index < action.settings.length; index++) {\n            let argument = action.settings[index];\n            let value = this.state[\"argument-\" + argument.id]\n            if (value == undefined) {\n                value = argument.default\n            }\n            tmpsettings.push({ reference: argument.id, value: value })\n        }\n        contentSources.push({\n            source: this.state.source,\n            action: this.state.action,\n            arguments: tmpsettings,\n            reference: this.state.reference\n        })\n        this.setState({\n            contentSources: contentSources,\n            action: null,\n            source: null,\n            reference: \"\"\n        })\n    }\n\n    delete(index) {\n        let contents = []\n        this.state.contents.forEach((content, pindex) => {\n            if (pindex != index) { contents.push(content) }\n        })\n        this.setState({ contents: contents })\n    }\n\n    deleteContent(index) {\n        let contentSources = []\n        this.state.contentSources.forEach((content, pindex) => {\n            if (pindex != index) { contentSources.push(content) }\n        })\n        this.setState({ contentSources: contentSources })\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\n                    <div style={{ padding: 10 }}>\n                        <Typography variant='h4' > Widget </Typography>\n                    </div>\n                    <Divider />\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\n                        <TextField\n                            onChange={(event) => { this.setState({ widgetReference: event.target.value }) }}\n                            multiline\n                            value={this.state.widgetReference}\n                            label=\"Reference\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            style={{ marginLeft: 10 }}\n                            onChange={(event) => { this.setState({ icon: event.target.value }) }}\n                            multiline\n                            value={this.state.icon}\n                            label=\"Icon\"\n                            variant=\"outlined\"\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\n                                            <List />\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                        <Popover\n                            open={this.state.popup}\n                            onClose={() => { this.setState({ popup: false }) }}\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}\n                        >\n                            <IconList onSelect={(icon) => { this.setState({ popup: false, icon: icon }) }} />\n\n                        </Popover>\n                    </div>\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\n                        <Typography variant='h5' > Source </Typography>\n                        <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\n                            <TableContainer component={Paper}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align='left'>\n                                                <Typography variant='subtitle1'> Source </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                <Typography variant='subtitle1'> Argument </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            this.state.contentSources.map((contentSource, index) => {\n                                                return (\n                                                    <TableRow >\n                                                        <TableCell align=\"left\" style={{ width: '30%' }}>\n                                                            <Typography variant='subtitle1'> {contentSource.reference} </Typography>\n                                                            <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\n                                                            <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\n                                                        </TableCell>\n                                                        <TableCell align=\"left\">\n                                                            <Typography variant='subtitle1'>\n                                                                {JSON.stringify(contentSource.arguments)}\n                                                            </Typography>\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">\n                                                            <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\n                                                                <Close />\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            })\n                                        }\n                                        <TableRow  >\n                                            <TableCell align=\"left\" style={{ width: '30%' }}>\n                                                <TextField\n                                                    onChange={(event) => { this.setState({ reference: event.target.value }) }}\n                                                    style={{ width: '100%' }}\n                                                    multiline\n                                                    value={this.state.reference}\n                                                    label=\"Reference\"\n                                                    variant=\"outlined\"\n                                                />\n                                                <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\n                                                    <InputLabel>Source</InputLabel>\n                                                    <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                                        {\n                                                            this.state.sources.map(source => {\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                            })\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                                {\n                                                    this.state.source ?\n                                                        <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\n                                                            <InputLabel>Action</InputLabel>\n                                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                                {\n                                                                    this.state.source.actions.map(action => {\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                                    })\n                                                                }\n                                                            </Select>\n                                                        </FormControl>\n                                                        : null\n                                                }\n                                            </TableCell>\n                                            <TableCell align=\"right\" style={{ width: '40%' }}>\n                                                {\n                                                    this.state.action && this.state.action.settings.length > 0 ?\n                                                        <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\n                                                            <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\n                                                                {\n                                                                    this.state.action.settings.map(setting => {\n                                                                        return <Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} />\n                                                                    })\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                        : null\n                                                }\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\n                                                    <Add />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </div>\n                    </div>\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\n                        <Typography variant='h5' > Content </Typography>\n                        <div style={{ marginTop: 10, marginBottom: 10 }}>\n                            <TableContainer component={Paper}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell align='left'>\n                                                <Typography variant='subtitle1'> Type </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                <Typography variant='subtitle1'> Affichage </Typography>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.contents.sort((a, b) => { return a.type.rank > b.type.rank }).map((content, index) => (\n                                            <TableRow >\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='subtitle1'> {content.type.name} </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='subtitle1'> {content.content} </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton onClick={() => { this.delete(index) }} style={{ borderRadius: 2 }}>\n                                                        <Close />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                        <TableRow  >\n                                            <TableCell align=\"left\">\n                                                <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\n                                                    <InputLabel>Type</InputLabel>\n                                                    <Select value={this.state.type.id} onChange={(event) => { this.setType( event.target.value ) }} label=\"Type\" >\n                                                        {\n                                                            this.state.types.map(type => {\n                                                                return <MenuItem value={type.id} >{type.name}</MenuItem>\n                                                            })\n                                                        }\n                                                    </Select>\n                                                </FormControl>\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                <TextField\n                                                    onChange={(event) => { this.setState({ content: event.target.value }) }}\n                                                    style={{ width: '100%' }}\n                                                    multiline\n                                                    value={this.state.content}\n                                                    label=\"Name\"\n                                                    variant=\"outlined\"\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <IconButton onClick={() => { this.insertContent() }} style={{ borderRadius: 2 }}>\n                                                    <Add />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </div>\n                    </div>\n                    <Button style={{ marginTop: 5, marginBottom: 5 }} onClick={() => { this.save() }} variant='outlined'>\n                        Save\n                    </Button>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default NewWidget","import React from 'react'\nimport Action from '../../../components/Action'\nimport { FormControl, Select, InputLabel, MenuItem, Paper, Typography, Divider, IconButton, TextField, TableCell, TableBody, TableContainer, TableHead, Table, TableRow } from '@material-ui/core'\nimport { Close, Add, Delete, ArrowUpward, ArrowDownward } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\nimport Source from '../../../utils/Source'\n\nclass Widget extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            message: \"\",\n            id: props.match.params.id,\n            contentSources: [],\n            reference: '',\n            source: null,\n            action: null,\n            type: \"title\",\n            content: \"\",\n            sources: [],\n            types: [],\n            widget: null,\n            needSave: null\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/widgets/\" + this.state.id)\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else if (resultSource.error) {\n            this.setState({ enabled: true, message: resultSource.package + \" : \" + resultSource.message })\n        } else if (resultConfiguration.error) {\n            this.setState({ enabled: true, message: resultConfiguration.package + \" : \" + resultConfiguration.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", loading: false, widget: result.data, sources: resultSource.data, types: resultConfiguration.data.contents.types})\n        }\n    }\n\n    async delete() {\n        let result = await new Request().delete({}).fetch(\"/api/widgets/\" + this.state.widget.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.props.history.push('/widget')\n        }\n    }\n\n    async deleteSource(source) {\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.widget.id + \"/sources/\" + source)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async insertSource() {\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\n            this.setState({ enabled: true, message: \"Missing parameters\" })\n            return\n        }\n        let find = false\n        this.state.widget.sources.forEach(contentSource => {\n            if (contentSource.reference == this.state.reference) {\n                find = true\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\n            }\n        })\n        if (find) {\n            return\n        }\n        let tmpsettings = []\n        let action = this.state.action\n        for (let index = 0; index < action.settings.length; index++) {\n            let argument = action.settings[index];\n            let value = this.state[\"argument-\" + argument.id]\n            if (value == undefined) {\n                value = argument.default\n            }\n            tmpsettings.push({ reference: argument.id, value: value })\n        }\n        let result = await new Request().post({\n            source: this.state.source,\n            action: this.state.action,\n            arguments: tmpsettings,\n            reference: this.state.reference\n        }).fetch(\"/api/widgets/\" + this.state.id + \"/sources\")\n\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ action: null, source: null, reference: \"\" })\n            this.componentDidMount()\n        }\n    }\n\n    setSource(id) {\n        this.state.sources.map(source => {\n            if (source.id == id) { this.setState({ source: source, action: null }) }\n        })\n    }\n\n\n    setAction(id) {\n        this.state.source.actions.map(action => {\n            if (action.id == id) {\n                this.setState({ action: action })\n            }\n        })\n    }\n\n    async setContent() {\n        let result = await new Request().post({type: this.state.type, content: this.state.content}).fetch(\"/api/widgets/\" + this.state.id + \"/contents\")\n        if(result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ content: \"\" })\n            this.componentDidMount()\n        }\n    }\n\n    async deleteContent(id) {\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.id + \"/contents/\" + id)\n        if(result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async update(content) {\n        let widget = this.state.widget\n        let contents = widget.contents.map(pContent => {\n            if (pContent.id == content.id) {\n                pContent.native = content.native\n            }\n            return pContent\n        })\n        widget.contents = contents\n        this.setState({ widget: widget, needSave: null })\n        let result = await new Request().put({ content: content }).fetch(\"/api/widgets/\" + this.state.widget.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        if (this.state.widget) {\n            return (\n                <div>\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                        <div style={{ padding: 10 }}>\n                            <Typography variant='h4' style={{ fontSize: 25 }}>\n                                {this.state.widget.reference}\n                            </Typography>\n                            <Typography variant='subtitle1' >\n                                {this.state.widget.icon}\n                            </Typography>\n                        </div>\n                        <Divider />\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Source\n                            </Typography>\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell align='left' >\n                                                    <Typography variant='subtitle1'>Reference</Typography>\n                                                </TableCell>\n                                                <TableCell align='left'>\n                                                    <Typography variant='subtitle1' >Source</Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='subtitle1' >Argument</Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {\n                                                this.state.widget.sources.map((source, index) => {\n                                                    return (\n                                                        <TableRow >\n                                                            <TableCell align=\"left\" >\n                                                                <Typography variant='subtitle1'>\n                                                                    {source.reference}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"left\">\n                                                                <Typography variant='subtitle1'>\n                                                                    {source.object}\n                                                                </Typography>\n                                                                <Typography variant='subtitle1'>\n                                                                    {source.action}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"left\" >\n                                                                <Typography variant='subtitle1'>\n                                                                    {\n                                                                        source.arguments.map(argument => {\n                                                                            return (\n                                                                                <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\n                                                                            )\n                                                                        })\n                                                                    }\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"right\">\n                                                                <IconButton onClick={() => { this.deleteSource(source.id) }} style={{ borderRadius: 3 }}>\n                                                                    <Delete />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    )\n                                                })\n                                            }\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableBody>\n                                            {\n                                                this.state.contentSources.map((contentSource, index) => {\n                                                    return (\n                                                        <TableRow >\n                                                            <TableCell align=\"left\" style={{ width: '30%' }}>\n                                                                <Typography variant='subtitle1'> {contentSource.reference} </Typography>\n                                                                <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\n                                                                <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"left\">\n                                                                <Typography variant='subtitle1'>\n                                                                    {JSON.stringify(contentSource.arguments)}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"right\">\n                                                                <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\n                                                                    <Close />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    )\n                                                })\n                                            }\n                                            <TableRow  >\n                                                <TableCell align=\"left\" style={{ width: '30%' }}>\n                                                    <TextField\n                                                        onChange={(event) => { this.setState({ reference: event.target.value }) }}\n                                                        style={{ width: '100%' }}\n                                                        multiline\n                                                        value={this.state.reference}\n                                                        label=\"Reference\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\n                                                        <InputLabel>Source</InputLabel>\n                                                        <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\n                                                            {\n                                                                this.state.sources.map(source => {\n                                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                    {\n                                                        this.state.source ?\n                                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\n                                                                <InputLabel>Action</InputLabel>\n                                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\n                                                                    {\n                                                                        this.state.source.actions.map(action => {\n                                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\n                                                                        })\n                                                                    }\n                                                                </Select>\n                                                            </FormControl>\n                                                            : null\n                                                    }\n                                                </TableCell>\n                                                <TableCell align=\"right\" style={{ width: '40%' }}>\n                                                    {\n                                                        this.state.action && this.state.action.settings.length > 0 ?\n                                                            <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\n                                                                <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\n                                                                    {\n                                                                        this.state.action.settings.map(setting => {\n                                                                            return <Action flexDirection='column' orientation='horizontal'  setState={this.setState.bind(this)} action={setting} />\n                                                                        })\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                            : null\n                                                    }\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\n                                                        <Add />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\n                            <Typography variant='h5' >\n                                Content\n                            </Typography>\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\n                                <TableContainer component={Paper}>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell align='left' style={{width: '15%'}} >\n                                                    <Typography variant='subtitle1'>Type</Typography>\n                                                </TableCell>\n                                                <TableCell align='left' style={{ width: '80%' }}>\n                                                    <Typography variant='subtitle1' >content</Typography>\n                                                </TableCell>\n                                                <TableCell align='left' style={{width: '20%'}}>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {\n                                                this.state.widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map((content, index) => {\n                                                    return (\n                                                        <TableRow >\n                                                            <TableCell align=\"left\" >\n                                                                <Typography variant='subtitle1'>\n                                                                    {content.type.name}\n                                                                </Typography>\n                                                            </TableCell>\n                                                            <TableCell align=\"left\" >\n                                                                <TextField\n                                                                    style={{ width: '100%', marginBottom: 5 }}\n                                                                    onChange={(event) => { content.native = event.target.value; this.setState({needSave: index}) }}\n                                                                    onBlur={(event) => {this.update(content) }}\n                                                                    multiline\n                                                                    value={content.native}\n                                                                    variant=\"outlined\"\n                                                                />\n                                                                {\n                                                                    content.content.split(\"\\n\").map(_content => {\n                                                                        return (\n                                                                            <Typography variant='body1' color={this.state.needSave == index ? 'primary' : 'inherit'} style={{ fontWeight: _content.type == 'title' ? 'bold' : 'normal' }}>\n                                                                                {_content}\n                                                                            </Typography>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </TableCell>\n                                                            <TableCell align=\"right\">\n                                                                <IconButton onClick={() => { this.deleteContent(content.id) }} style={{ borderRadius: 3 }}>\n                                                                    <Delete />\n                                                                </IconButton>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    )\n                                                })\n                                            }\n                                            <TableRow  >\n                                                <TableCell align=\"left\">\n                                                    <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\n                                                        <InputLabel>Type</InputLabel>\n                                                        <Select value={this.state.type} onChange={(event) => { this.setState({ type: event.target.value }) }} label=\"Type\" >\n                                                            {\n                                                                this.state.types.map(type => {\n                                                                    return <MenuItem value={type.id} >{type.name}</MenuItem>\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <TextField\n                                                        onChange={(event) => { this.setState({ content: event.target.value }) }}\n                                                        style={{ width: '100%' }}\n                                                        multiline\n                                                        value={this.state.content}\n                                                        label=\"Name\"\n                                                        variant=\"outlined\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton onClick={() => { this.setContent() }} style={{ borderRadius: 2 }}>\n                                                        <Add />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </div>\n                    </Paper>\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\n                        <IconButton onClick={() => { this.delete() }} style={{ borderRadius: 5 }}>\n                            <Delete />\n                        </IconButton>\n                    </Paper>\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                        {this.state.message}\n                    </Alert>\n                </div>\n            )\n        } else {\n            return (\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            )\n        }\n    }\n}\n\nexport default Widget","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport Moment from 'moment'\nimport { Add, Delete, Settings } from '@material-ui/icons'\nimport { FormControl, Button, MenuItem, Select, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton } from '@material-ui/core'\nimport Request from '../../../utils/Request'\nimport Alert from '../../../components/Alert'\n\nclass Smartobject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: 0,\n            enabled: false,\n            message: \"\",\n            users: [],\n            profiles: []\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/users\")\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\n        if (result.error) {\n            this.setState({\n                enabled: true,\n                message: result.package + \" : \" + result.message\n            })\n        } else if (resultProfile.error) {\n            this.setState({\n                enabled: true,\n                message: resultProfile.package + \" : \" + resultProfile.message\n            })\n        } else {\n            this.setState({\n                enabled: false,\n                message: \"\",\n                users: result.data,\n                profiles: resultProfile.data\n            })\n        }\n    }\n\n    async delete(id) {\n        let result = await new Request().delete().fetch(\"/api/users/\" + id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    async updateProfile(user, profile) {\n        let result = await new Request().put({\n            login: user.login,\n            profile: profile\n        }).fetch(\"/api/users/\" + user.id)\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.componentDidMount()\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    this.state.loading ?\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\n                                Chargement des smartobject\n                            </Typography>\n                        </Paper>\n                        :\n                        <div>\n                            <TableContainer component={Paper}>\n                                <Table>\n                                    <TableBody>\n                                        {this.state.users.sort((a, b) => {\n                                            return a.profile > b.profile\n                                        }).slice(this.state.page * 10, (this.state.page + 1) * 10).map((user) => (\n                                            <TableRow hover key={user.id} style={{ cursor: 'pointer' }}>\n                                                <TableCell align=\"left\">\n                                                    <Typography variant='body1'>\n                                                        {\n                                                            user.login\n                                                        }\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <FormControl variant=\"outlined\"  >\n                                                        <Select disabled={user.login == 'admin'} value={user.profile} onChange={(event) => { this.updateProfile(user, event.target.value) }} >\n                                                            {\n                                                                this.state.profiles.map(profile => {\n                                                                    return (\n                                                                        <MenuItem value={profile.id} >{profile.name}</MenuItem>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton onClick={() => { this.props.history.push('/user/' + user.id +  \"/password\") }} style={{ borderRadius: 3 }}>\n                                                        <Settings />\n                                                    </IconButton>\n                                                    <IconButton onClick={() => { this.delete(user.id) }} style={{ borderRadius: 3 }}>\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\n                                    <Link to=\"/user/new\" style={{ textDecoration: 'none', color: 'white' }}>\n                                        <IconButton style={{ borderRadius: 0 }}>\n                                            <Add />\n                                        </IconButton>\n                                    </Link>\n                                </Paper>\n                                <TablePagination\n                                    component=\"div\"\n                                    count={this.state.users.length}\n                                    rowsPerPage={10}\n                                    page={this.state.page}\n                                    rowsPerPageOptions={[]}\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\n                                />\n                            </div>\n                        </div>\n                }\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </>\n        )\n    }\n}\n\nexport default Smartobject","import React from 'react'\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\nimport { Save } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass NewSmartobject extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            message: \"\",\n            profiles: [],\n            profile: 1,\n            login: \"\",\n            password: \"\",\n            confirmationPassword: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        let result = await new Request().get().fetch(\"/api/profiles\")\n        if (result.error) {\n            this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n        } else {\n            this.setState({ enabled: false, message: \"\", profiles: result.data })\n        }\n    }\n\n    async add() {\n        if(this.state.login.length == 0) {\n            this.setState({ enabled: true, message: \"Missing login\" })\n        } else if(this.state.password.length == 0) {\n            this.setState({ enabled: true, message: \"Missing password\" })\n        } else if(this.state.password != this.state.confirmationPassword) {\n                this.setState({ enabled: true, message: \"Passwords are not the same\" })\n            } else {\n            let result = await new Request().post({login: this.state.login, password: this.state.password, profile: this.state.profile}).fetch(\"/api/users\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.history.push('/user')\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\n                            <TextField placeholder='login' variant=\"outlined\" value={this.state.login} onChange={(event) => { this.setState({ login: event.currentTarget.value }) }} />\n                            <TextField type='password' placeholder='password' variant=\"outlined\" value={this.state.password} style={{ marginTop: 10 }} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\n                        <FormControl variant=\"outlined\" style={{ width: '100%', marginTop: 10 }} >\n                                <Select value={this.state.profile} onChange={(event) => { this.setState({ profile: event.target.value }) }} >\n                                    {\n                                        this.state.profiles.map(profile => {\n                                            return (\n                                                <MenuItem value={profile.id} >{profile.name}</MenuItem>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </div>\n                </Paper>\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\n                        <Save />\n                    </IconButton>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default NewSmartobject","import React from 'react'\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\nimport { Save } from '@material-ui/icons'\nimport Alert from '../../../components/Alert'\nimport Request from '../../../utils/Request'\n\nclass NewPassword extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enabled: false,\n            id: props.match.params.id,\n            message: \"\",\n            confirmationPassword: \"\",\n            password: \"\"\n        }\n    }\n\n    async changePassword() {\n        if(this.state.password.length == 0) {\n            this.setState({ enabled: true, message: \"Missing password\" })\n        } else if(this.state.confirmationPassword.length == 0) {\n            this.setState({ enabled: true, message: \"Missing confirmation password\" })\n        } else if(this.state.password != this.state.confirmationPassword) {\n            this.setState({ enabled: true, message: \"Passwords are not the same\" })\n        } else {\n            let result = await new Request().post({password: this.state.password}).fetch(\"/api/users/\" + this.state.id + \"/password\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.history.push('/user')\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\n                            <TextField placeholder='password' type='password' variant=\"outlined\" value={this.state.password} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\n                        </div>\n                    </div>\n                </Paper>\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\n                    <IconButton onClick={() => { this.changePassword() }} style={{ borderRadius: 0 }} variant='outlined'>\n                        <Save />\n                    </IconButton>\n                </Paper>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default NewPassword","import React from 'react'\nimport { Drawer, List, Typography, Divider, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport {ShoppingCart, DevicesOther, ExitToApp, AccountTree, Category, DeviceHub, Https, Extension, Settings, Person} from '@material-ui/icons'\nimport { Link } from \"react-router-dom\"\n\nclass Sidebar extends React.Component {\n\n    render() {\n        if(this.props.isMobile) {\n            return null\n        }\n        return (\n            <Drawer variant=\"persistent\" anchor=\"left\" open={true} style={{ width: 240 }} >\n                <div style={{ width: 240 }}>\n                    <List>\n                        <div style={{display:'flex', justifyContent:'flex-start', padding: 5, alignContent:'center', alignSelf:'center', alignItems:'center'}}>\n                        <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '7vh', width: '7vh', borderRadius: 7, marginLeft: 15 }} />\n                        <div>\n                        <Typography variant='h5' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 15, paddingLeft: 10 }}>\n                            Intendant\n                        </Typography>\n                        <Typography variant='subtitle1' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 0, paddingBottom: 15, paddingLeft: 10 }}>\n                            Administration\n                        </Typography>\n                        </div>  \n                            </div>\n                    \n                        <Divider />\n                        <Link to=\"/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"smartobject\"}>\n                                <ListItemIcon>\n                                    <DevicesOther />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Smartobject\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/module\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"module\"}>\n                                <ListItemIcon>\n                                    <Category />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Module\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/widget\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"widget\"} >\n                                <ListItemIcon>\n                                    <Extension />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Widget\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/process\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"process\"} >\n                                <ListItemIcon>\n                                    <DeviceHub />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Process\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/routine\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"configuration\"} >\n                                <ListItemIcon>\n                                    <AccountTree />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Routine\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/authorization\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"authorization\"} >\n                                <ListItemIcon>\n                                    <Https />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Authorization\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/user\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"user\"} >\n                                <ListItemIcon>\n                                    <Person />\n                                </ListItemIcon>\n                                <ListItemText primary={\"User\"} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/market/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\n                            <ListItem button key={\"market\"} >\n                                <ListItemIcon>\n                                    <ShoppingCart />\n                                </ListItemIcon>\n                                <ListItemText primary={\"Market\"} />\n                            </ListItem>\n                        </Link>\n                        <Divider />\n                        <ListItem button key={\"disconnect\"} onClick={() => {this.props.onDisconnect()}} >\n                            <ListItemIcon>\n                                <ExitToApp />\n                            </ListItemIcon>\n                            <ListItemText primary={\"Disconnect\"} />\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n        )\n    }\n\n}\n\nexport default Sidebar","import React from 'react'\nimport { Toolbar, AppBar } from '@material-ui/core'\nimport SmartObject from './contents/SmartObject/List'\nimport DetailSmartObject from './contents/SmartObject/Detail'\nimport NewSmartObject from './contents/SmartObject/New'\nimport Authorization from './contents/Authorization/List'\nimport ListProcess from './contents/Process/List'\nimport NewProcess from './contents/Process/New'\nimport DetailProcess from './contents/Process/Detail'\nimport Routine from './contents/Routine/List'\nimport NewRoutine from './contents/Routine/New'\nimport DetailRoutine from './contents/Routine/Detail'\nimport Module from './contents/Module/List'\nimport DetailModule from './contents/Module/Detail'\nimport Configuration from './contents/Configuration/List'\nimport Market from './contents/Market/List'\nimport Widget from './contents/Widget/List'\nimport NewWidget from './contents/Widget/New'\nimport DetailWidget from './contents/Widget/Detail'\nimport User from './contents/User/List'\nimport NewUser from './contents/User/New'\nimport NewPassword from './contents/User/NewPassword'\nimport Sidebar from '../components/Sidebar'\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isMobile: false\n        }\n    }\n\n    componentDidMount() {\n        this.mediaQueries('(max-width: 900px)')\n    }\n\n    mediaQueries(query) {\n        let mediaMatch = window.matchMedia(query);\n        this.setState({ isMobile: mediaMatch.matches })\n        const handler = e => this.setState({ isMobile: e.matches })\n        mediaMatch.addListener(handler)\n    }\n\n    render() {\n        return (\n            <Router basename='/admin'>\n                <Sidebar isMobile={this.state.isMobile} onDisconnect={() => { this.props.onDisconnect() }} />\n                <main style={{ padding: 20, width: this.state.isMobile ? '95vw' :  '80vw', height: '100vh' }} >\n                    <div style={{ marginLeft: this.state.isMobile ? 0 : 240, marginTop: this.state.isMobile ? 0 : 32 }}>\n                        <Switch>\n                            <Route exact path=\"/smartobject\" component={SmartObject} />\n                            <Route exact path=\"/smartobject/new\" component={NewSmartObject} />\n                            <Route exact path=\"/smartobject/:id\" component={DetailSmartObject} />\n                            <Route exact path=\"/module\" component={Module} />\n                            <Route exact path=\"/module/:id\" component={DetailModule} />\n                            <Route exact path=\"/routine\" component={Routine} />\n                            <Route exact path=\"/routine/new\" component={NewRoutine} />\n                            <Route exact path=\"/routine/:id\" component={DetailRoutine} />\n                            <Route exact path=\"/widget\" component={Widget} />\n                            <Route exact path=\"/widget/new\" component={NewWidget} />\n                            <Route exact path=\"/widget/authorization\" component={Widget} />\n                            <Route exact path=\"/widget/:id\" component={DetailWidget} />\n                            <Route exact path=\"/process\" component={ListProcess} />\n                            <Route exact path=\"/process/new\" component={NewProcess} />\n                            <Route exact path=\"/process/:id\" component={DetailProcess} />\n                            <Route exact path=\"/user\" component={User} />\n                            <Route exact path=\"/user/new\" component={NewUser} />\n                            <Route exact path=\"/user/:id/password\" component={NewPassword} />\n                            <Route exact path=\"/configuration\" component={Configuration} />\n                            <Route exact path=\"/market/:id\" component={Market} />\n                            <Route exact path=\"/authorization\" component={Authorization} />\n                        </Switch>\n                    </div>\n                </main>\n            </Router>\n        )\n    }\n}\n\nexport default Main","import React from 'react'\nimport Package from '../../package.json'\nimport { Paper, TextField, Button, Typography } from '@material-ui/core'\nimport Alert from '../components/Alert'\nimport Main from './Main'\nimport Request from '../utils/Request'\n\nclass GetStarted extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            authentification: true,\n            enabled: false,\n            message: \"\",\n            password: \"\",\n            confirmePassword: \"\",\n            login: \"admin\",\n            isMobile: false\n        }\n    }\n\n    componentDidMount() {\n        this.mediaQueries('(max-width: 900px)')\n    }\n    \n    mediaQueries(query) {\n        let mediaMatch = window.matchMedia(query);\n        this.setState({ isMobile: mediaMatch.matches })\n        const handler = e => this.setState({ isMobile: e.matches })\n        mediaMatch.addListener(handler)\n    }\n\n\n    async register() {\n        if (this.state.password == this.state.confirmePassword) {\n            let result = await new Request().put({ password: this.state.password }).fetch(\"/api/getstarted\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                this.props.onFinish()\n            }\n        } else {\n            this.setState({ enabled: true, message: 'Password and password confirmation is not the same' })\n        }\n    }\n\n\n    render() {\n        return (\n            <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '30vw', textAlign: 'center' }}>\n                <div >\n                    <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7 }} />\n                    <div style={{ fontSize: 70, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\n                        Intendant\n                    </div>\n                    <div style={{ fontSize: 14, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 30 }}>\n                        At the first launch, you must set the admin password\n                    </div>\n                </div>\n                <div noValidate autoComplete=\"off\" style={{ marginBottom: 10}}>\n                    <div style={{ marginTop: 10 }}>\n                        <TextField value={this.state.password} fullWidth label=\"Password\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\n                    </div>\n                    <div style={{ marginTop: 10 }}>\n                        <TextField value={this.state.confirmePassword} fullWidth label=\"Confirmation\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ confirmePassword: event.nativeEvent.target.value }) }} />\n                    </div>\n                    <div style={{  marginTop: 15, textAlign: 'end' }}>\n                        <Button variant='plain' onClick={() => { this.register() }}  >\n                            Let's get started\n                        </Button>\n                    </div>\n                </div>\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                    {this.state.message}\n                </Alert>\n            </Paper>\n        )\n    }\n\n}\n\nexport default GetStarted;\n","import React from 'react'\nimport Package from '../../package.json'\nimport { Paper, TextField, Button, Typography, Switch, IconButton } from '@material-ui/core'\nimport Alert from '../components/Alert'\nimport Main from './Main'\nimport GetStarted from './GetStarted'\nimport Request from '../utils/Request'\nimport { Settings } from '@material-ui/icons'\n\nclass Authentification extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            authentification: true,\n            enabled: false,\n            getStarted: false,\n            message: \"\",\n            password: \"\",\n            customAddress: false,\n            address: window.location.origin,\n            login: \"admin\",\n            isMobile: false\n        }\n    }\n\n\n    mediaQueries(query) {\n        let mediaMatch = window.matchMedia(query);\n        this.setState({ isMobile: mediaMatch.matches })\n        const handler = e => this.setState({ isMobile: e.matches })\n        mediaMatch.addListener(handler)\n    }\n\n    componentDidMount() {\n        let service = localStorage.getItem(\"server\")\n        if (service) {\n            this.setState({ address: service.replace(\"http://\", \"\") })\n        }\n        this.mediaQueries('(max-width: 900px)')\n    }\n\n    async login() {\n        if (await this.checkServer()) {\n            let result = await new Request().post({ login: this.state.login, password: this.state.password }).fetch(\"/api/authentification\")\n            if (result.error) {\n                this.setState({ enabled: true, message: result.package + \" : \" + result.message })\n            } else {\n                localStorage.setItem(\"authorization\", result.token)\n                this.setState({ enabled: false, message: \"\", authentification: false })\n            }\n        }\n    }\n\n    disconnect() {\n        localStorage.removeItem(\"authorization\")\n        this.setState({ authentification: true, password: \"\" })\n    }\n\n    async checkServer() {\n        let ok = true\n        let protocol = window.location.protocol + \"//\"\n        if(this.state.address.split(\"://\").length > 1) {\n            protocol = \"\"\n        }\n        try {\n            let result = await fetch(protocol + this.state.address + \"/api/ping\", {}, 2000)\n            let resultJSON = await result.json()\n            if (resultJSON.message != \"pong\") {\n                this.setState({ enabled: true, message: 'Connection to server failed' })\n                ok = false\n            } else {\n                localStorage.setItem(\"server\",protocol + this.state.address)\n                if (resultJSON.getStarted) {\n                    this.setState({ getStarted: true })\n                    return false\n                }\n            }\n        } catch (error) {\n            this.setState({ enabled: true, message: 'Connection to server failed' })\n            ok = false\n        }\n        return ok\n    }\n\n    render() {\n        if (this.state.getStarted) {\n            return (\n                <GetStarted onFinish={() => { this.setState({ getStarted: false }) }} />\n            )\n        } else {\n            if (this.state.authentification) {\n                return (\n                    <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '25vw', textAlign: 'center' }}>\n                        <div>\n                            <div style={{ marginBottom: 50 }}>\n                                <img  onClick={() => {this.setState({customAddress: !this.state.customAddress}) }}  src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7, cursor: 'pointer' }} />\n                                <div style={{ fontSize: 55, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\n                                    Intendant\n                                </div>\n                                <div style={{ fontSize: 20, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 15 }}>\n                                    Administration\n                                </div>\n                            </div>\n                            <form noValidate onSubmit={(e) => { e.preventDefault(); this.login() }} autoComplete=\"off\" style={{ marginBottom: 10 }}>\n                                {\n                                    this.state.customAddress ?\n                                        <div style={{ padding: 5 }}>\n                                            <TextField value={this.state.address} fullWidth label=\"Server address\" autoFocus onChange={(event) => { this.setState({ address: event.nativeEvent.target.value }) }} />\n                                        </div>\n                                        :\n                                        null\n                                }\n\n                                <div style={{ padding: 5 }}>\n                                    <TextField value={this.state.login} fullWidth label=\"Login\" autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ login: event.nativeEvent.target.value }) }} />\n                                </div>\n                                <div style={{ padding: 5 }}>\n                                    <TextField value={this.state.password} fullWidth label=\"Password\" type='password' autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\n                                </div>\n                                <div style={{ padding: 5, marginTop: 5, textAlign: 'end' }}>\n                                    <Button type='submit' variant='plain' on onSubmit={() => { this.login() }} onClick={() => { this.login() }}  >\n                                        Connection\n                                    </Button>\n                                </div>\n                            </form>\n                        </div>\n                        <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\n                            {this.state.message}\n                        </Alert>\n                    </Paper>\n                )\n            } else {\n                return (\n                    <Main onDisconnect={() => { this.disconnect() }} />\n                )\n            }\n        }\n    }\n\n}\n\nexport default Authentification;\n","import Authentification from './screens/Authentification'\nimport Theme from './Theme'\nimport { ThemeProvider, CssBaseline, Box } from '@material-ui/core'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={Theme} >\n      <CssBaseline />\n      <Box style={{ userSelect: 'none', outline: 'none', WebkitTapHighlightColor: 'rgba(41,108,71,0.33)', height: '100vh', width: '100wh', backgroundColor: Theme.palette.background.default, display: 'flex', flexDirection: 'column', alignSelf: 'center', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\n        <Authentification />\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}