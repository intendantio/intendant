"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _package=_interopRequireDefault(require("../package")),_fs=_interopRequireDefault(require("fs"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class Manager{constructor(a){this.core=a,this.connector=a.connector,this.logger=a.logger,this.configuration=a.configuration,this.installSmartobjects=[],this.logger.verbose(_package.default.name,"Smartobject manager : start"),this.smartobjects=new Map,this.before()}async before(){try{this.logger.verbose(_package.default.name,"Smartobject manager : disable smartobjects");let a=new this.connector(this.configuration,this.core,"smartobject"),b=await a.updateAll({status:2});if(b.error)return void this.logger.warning(_package.default.name,b.package+" "+b.message);await this.initialisation()}catch(a){return this.core.logger.error("Smartobject manager : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async initialisation(){try{let a=new this.connector(this.configuration,this.core,"smartobject"),b=await a.getAll();if(b.error)return void this.logger.error(_package.default.name,b.package+" : "+b.message);b.data.forEach(async a=>{await this.instanciate(a)})}catch(a){return this.core.logger.error("Smartobject manager : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async restart(){try{this.core.logger.verbose(_package.default.name,"Smartobject manager : restart"),this.smartobjects=new Map,await this.before()}catch(a){return this.core.logger.error("Smartobject manager : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async instanciate(a){try{let b=new this.connector(this.configuration,this.core,"smartobject"),c=new this.connector(this.configuration,this.core,"smartobject_argument");if(!1===this.smartobjects.has(a.reference)){let d=await c.getAllByField({smartobject:a.id});if(d.error)return void this.logger.warning(_package.default.name,d.package+" : "+d.message);let e=d.data,f={_id:a.id.toString()};for(let a,b=0;b<e.length;b++)a=e[b],f[a.reference]=a.value;if(this.installSmartobjects.includes(a.module))try{let c=require(a.module),d=require(a.module+"/package.json"),e=new c(f,this.core,d),g=await b.updateAll({status:1},{id:a.id});if(g.error)return void this.logger.warning(_package.default.name,g.message);this.smartobjects.set(a.reference,e),this.logger.verbose(_package.default.name,"Smartobject manager : instanciate smartobject n\xB0"+a.id+" successful")}catch(a){this.logger.warning(_package.default.name,a)}else _fs.default.existsSync("./node_modules/"+a.module)?(this.installSmartobjects.push(a.module),this.instanciate(a)):(await b.updateAll({status:3},{id:a.id}),this.logger.warning(_package.default.name,"Smartobject manager : missing smartobject library "+a.module))}}catch(a){return this.core.logger.error("Smartobject manager : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}async update(a){try{this.core.logger.verbose(_package.default.name,"Smartobject manager : update smartobject n\xB0"+a);let b=new this.connector(this.configuration,this.core,"smartobject"),c=await b.getOne(a);if(c.error)return c;let d=c.data;return this.smartobjects.has(d.reference)&&this.smartobjects.delete(d.reference),await this.instanciate(d),{error:!1,message:"",package:_package.default.name}}catch(a){return this.core.logger.error("Smartobject manager : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}getAll(){try{this.core.logger.verbose(_package.default.name,"Smartobject manager : get all smartobject configuration");let a=[];return this.installSmartobjects.forEach(b=>{try{let c=require(b+"/package.json");a.push(c)}catch(a){this.core.logger.warning(_package.default.name,"Smartobject manager : inaccessible configuration from module "+b),this.core.logger.warning(_package.default.name,JSON.stringify(a.toString()))}}),{error:!1,package:_package.default.name,message:"",data:a}}catch(a){return this.core.logger.error("Smartobject manager : "+a.toString()),{package:_package.default.name,error:!0,message:"Internal server error"}}}}var _default=Manager;exports.default=_default,module.exports=exports.default;