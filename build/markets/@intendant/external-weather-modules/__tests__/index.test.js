"use strict";var _core=_interopRequireDefault(require("@intendant/core/__mocks__/core")),_cache=_interopRequireDefault(require("@intendant/core/__mocks__/cache")),_package=_interopRequireDefault(require("../package.json"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}describe("@intendant/external-weather-modules",()=>{/* turnOn */beforeEach(()=>jest.resetModules()),test("action success > getWeather",async()=>{jest.mock("node-fetch",()=>async()=>({json:async()=>({}),status:200}));let a=require("../index"),b=new a(_core.default),c=await b.__getWeather({city:"jest-city"});expect(c).toEqual({code:"ok",error:!1,message:"",data:{},source:"https://www.prevision-meteo.ch"})}),test("action success > getWeather",async()=>{jest.mock("node-fetch",()=>async()=>({json:async()=>({}),status:200}));let a=require("../index"),b=new a(_core.default),c=await b.__getWeather();expect(c).toEqual({code:_package.default.name+">getWeather>city>missing",error:!0,message:"City is missing"})}),test("action error status > getWeather",async()=>{jest.mock("node-fetch",()=>async()=>({status:500}));let a=require("../index"),b=new a(_core.default),c=await b.__getWeather({city:"jest-city"});expect(c).toEqual({code:_package.default.name+">getWeather>code>invalidStatus>500",error:!0,message:"Invalid status 500"})}),test("action error request > getWeather",async()=>{jest.mock("node-fetch",()=>async()=>({json:async()=>{},status:200}));let a=require("../index"),b=new a(_core.default),c=await b.__getWeather({city:"jest-city"});expect(c).toEqual({code:_package.default.name+">getWeather>throwException",error:!0,message:"Throw exception"})}),test("action success cache > getWeather",async()=>{jest.mock("node-fetch",()=>async()=>({json:async()=>({}),status:200}));let a=require("../index");_core.default.controller.cache=_cache.default.inCache;let b=new a(_core.default),c=await b.__getWeather({city:"jest-city"});expect(c).toEqual({code:"ok",error:!1,message:"",data:{jest:"cache"},source:"cache://www.prevision-meteo.ch"})}),test("action error cache > getWeather",async()=>{jest.mock("node-fetch",()=>async()=>({json:async()=>({}),status:200}));let a=require("../index");_core.default.controller.cache=_cache.default.errorInCache;let b=new a(_core.default),c=await b.__getWeather({city:"jest-city"});expect(c).toEqual({code:"@intendant/core>get>jest-error",error:!0,cache:!1,message:"jest-error"})})});