"use strict";var _core=_interopRequireDefault(require("@intendant/core/__mocks__/core")),_package=_interopRequireDefault(require("../package.json"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}describe("@intendant/internal-list-manager-modules",()=>{beforeEach(()=>jest.resetModules());let a=require("../index"),b=new a(_core.default);/* getOne */ /* Create */ /* Add */ /* remove */b.__create({reference:"jest-list"}),test("action success > getAll",async()=>{let a=await b.__getAll();expect(a).toEqual({package:_package.default.name,error:!1,data:["jest-list"],message:""})}),test("action success > getAll",async()=>{let a=await b.__getAll();expect(a).toEqual({package:_package.default.name,error:!1,data:["jest-list"],message:""})}),test("action missing reference > getSize",async()=>{let a=await b.__getSize({});expect(a).toEqual({package:_package.default.name,error:!0,message:"Reference is missing"})}),test("action missing list > getSize",async()=>{let a=await b.__getSize({reference:"jest-list-not-found"});expect(a).toEqual({package:_package.default.name,error:!0,message:"List is missing"})}),test("action success > getSize",async()=>{let a=await b.__getSize({reference:"jest-list"});expect(a).toEqual({package:_package.default.name,error:!1,data:{size:0},message:""})}),test("action missing reference > getOne",async()=>{let a=await b.__getOne({});expect(a).toEqual({package:_package.default.name,error:!0,message:"Reference is missing"})}),test("action missing list > getOne",async()=>{let a=await b.__getOne({reference:"jest-list-not-found"});expect(a).toEqual({package:_package.default.name,error:!0,message:"List is missing"})}),test("action success > getOne",async()=>{let a=await b.__getOne({reference:"jest-list"});expect(a).toEqual({package:_package.default.name,error:!1,data:[],message:""})}),test("action missing list > create",async()=>{let a=await b.__create({reference:"jest-list"});expect(a).toEqual({package:_package.default.name,error:!0,message:"List already exist"})}),test("action missing reference > create",async()=>{let a=await b.__create({});expect(a).toEqual({package:_package.default.name,error:!0,message:"Reference is missing"})}),test("action missing reference > add",async()=>{let a=await b.__add({});expect(a).toEqual({package:_package.default.name,error:!0,message:"Reference is missing"})}),test("action missing item > add",async()=>{let a=await b.__add({reference:"jest-list"});expect(a).toEqual({package:_package.default.name,error:!0,message:"Item is missing"})}),test("action missing list > add",async()=>{let a=await b.__add({reference:"jest-list-not-found",item:"test"});expect(a).toEqual({package:_package.default.name,error:!0,message:"List is missing"})}),test("action success > add",async()=>{let a=await b.__add({reference:"jest-list",item:"test"});expect(a).toEqual({package:_package.default.name,error:!1,message:""})}),test("action missing reference > remove",async()=>{let a=await b.__remove({});expect(a).toEqual({package:_package.default.name,error:!0,message:"Reference is missing"})}),test("action missing list > remove",async()=>{let a=await b.__remove({reference:"jest-list"});expect(a).toEqual({package:_package.default.name,error:!0,message:"Index is missing"})}),test("action success > clear",async()=>{let a=await b.__clear({reference:"jest-list"});expect(a).toEqual({package:_package.default.name,error:!1,message:""})}),test("action missing list > clear",async()=>{let a=await b.__clear({reference:"jest-list-not-found"});expect(a).toEqual({package:_package.default.name,error:!0,message:"List is missing"})}),test("action missing reference > clear",async()=>{let a=await b.__clear({});expect(a).toEqual({package:_package.default.name,error:!0,message:"Reference is missing"})}),test("action success > delete",async()=>{let a=await b.__delete({reference:"jest-list"});expect(a).toEqual({package:_package.default.name,error:!1,message:""})}),test("action missing list > delete",async()=>{let a=await b.__delete({reference:"jest-list-not-found"});expect(a).toEqual({package:_package.default.name,error:!0,message:"List is missing"})}),test("action missing reference > delete",async()=>{let a=await b.__delete({});expect(a).toEqual({package:_package.default.name,error:!0,message:"Reference is missing"})})});