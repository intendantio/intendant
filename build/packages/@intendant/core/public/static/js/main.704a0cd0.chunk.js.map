{"version":3,"sources":["components/Alert.js","utils/Request.js","screens/contents/SmartObject/List.js","components/Action.js","screens/contents/SmartObject/Detail.js","screens/contents/SmartObject/New.js","Theme.js","screens/contents/Authorization/List.js","screens/contents/Process/List.js","utils/Source.js","components/IconList.js","screens/contents/Process/New.js","screens/contents/Process/Detail.js","screens/contents/Routine/List.js","components/WeekSchedul.js","screens/contents/Routine/New.js","screens/contents/Routine/Detail.js","screens/contents/Module/List.js","screens/contents/Module/Detail.js","screens/contents/Configuration/List.js","screens/contents/Market/List.js","screens/contents/Widget/List.js","screens/contents/Widget/New.js","screens/contents/Widget/Detail.js","screens/contents/User/List.js","screens/contents/User/New.js","screens/contents/User/NewPassword.js","components/Sidebar.js","screens/Main.js","screens/GetStarted.js","screens/Authentification.js","App.js","index.js"],"names":["Alert","props","Snackbar","open","autoHideDuration","onClose","severity","elevation","variant","Request","this","method","data","url","a","authorization","localStorage","getItem","server","fetch","headers","body","JSON","stringify","result","json","error","message","Smartobject","state","page","enabled","smartobjects","get","setState","code","loading","Paper","style","display","padding","alignContent","justifyContent","alignItems","alignSelf","Typography","fontSize","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","slice","map","smartobject","to","id","textDecoration","color","hover","cursor","reference","height","width","filter","src","process","status","icon","Moment","lastUse","format","name","flexDirection","marginTop","marginBottom","textAlign","IconButton","borderRadius","Add","TablePagination","count","length","rowsPerPage","rowsPerPageOptions","onChangePage","event","React","Component","Action","action","value","default","tmp","type","marginRight","minWidth","TextField","placeholder","onChange","updateAction","currentTarget","FormControl","InputLabel","Select","target","label","values","MenuItem","triangle","onChangeComplete","hex","toUpperCase","Slider","defaultValue","valueLabelDisplay","orientation","min","max","step","Checkbox","defaultChecked","DetailSmartObject","match","params","profiles","referenceSettings","valueSettings","executeInformation","resultProfile","resultSmartobject","history","push","delete","settings","index","argument","undefined","post","componentDidMount","profile","idProfile","module","Divider","paddingBottom","setting","onClick","navigator","clipboard","writeText","margin","FileCopy","deleteSmartobjectSettings","Delete","nativeEvent","insertSmartobjectSettings","actions","maxWidth","Button","executeAction","gridRowGap","gridTemplateColumns","bind","size","Close","parse","forEach","pprofile","ListItem","FormControlLabel","control","Switch","checked","deleteProfile","insertProfile","NewSmartobject","types","resultType","pModule","key","setModule","updateSettings","add","Save","responsiveFontSizes","createMuiTheme","palette","primary","main","Colors","secondary","typography","fontFamily","shape","Security","selectProfile","authorizations","onSelectProfile","Theme","success","warning","info","pAuthorization","secure","marginLeft","backgroundColor","background","paper","ListItemText","sort","b","button","updateSecure","paddingLeft","paddingRight","getColor","Process","processs","_process","description","espace","Source","query","resultModule","resultProcess","sources","includes","mode","inputs","input","name_enable","name_disable","IconList","icons","resultJSON","Grid","container","spacing","item","xs","search","onSelect","New","popup","espaces","inputReference","inputName","inputType","inputMode","isChecked","source","arrSources","getSource","resultSource","resultEspace","fSource","fAction","enable","nameEnable","nameDisable","modeArgument","pIndex","arguments","InputProps","endAdornment","InputAdornment","position","Popover","anchorOrigin","vertical","horizontal","transformOrigin","setInput","disabled","removeModeArgument","removeSource","fullWidth","setSource","setAction","confirmationModule","set","NewProcess","referenceInput","nameInput","typeInput","modeInput","idsource","startIcon","Autorenew","Check","deleteProcessInput","insertProcessInput","object","deleteSource","addSource","Routine","routines","put","routine","flex","updateStatus","PlayArrow","Pause","Edit","duplicate","Week","sunday","monday","tuesday","wednesday","friday","saturday","time","timeSplit","split","parseInt","paddingTop","onChangeMode","Cached","calculate","thursday","top","left","transform","NewRoutine","modalTrigger","modalEffect","watch","triggers","effects","statement","expected","trigger","effect","toString","updateName","updateIcon","borderStyle","borderWidth","borderColor","updateWatch","WeekSchedul","Card","textTransform","removeTrigger","reset","removeEffect","save","Modal","Fade","in","addTrigger","addEffect","Module","modules","pmodule","md5","Detail","hashId","_module","Configuration","pageSmartobject","pageModule","Store","DevicesOther","Category","markets","pageMarket","pPackage","package","resultMarket","market","alreadyInstall","uninstall","GetApp","install","disableElevation","Widget","widgets","widget","contents","rank","content","_content","fontWeight","NewWidget","image","contentSources","widgetReference","resultConfiguration","find","contentSource","tmpsettings","pindex","multiline","deleteContent","insertSource","setType","insertContent","pContent","native","update","setContent","users","user","login","updateProfile","Settings","password","confirmationPassword","NewPassword","changePassword","Sidebar","isMobile","Drawer","anchor","ListItemIcon","Extension","DeviceHub","AccountTree","Https","Person","ShoppingCart","onDisconnect","ExitToApp","Main","mediaQueries","mediaMatch","window","matchMedia","matches","addListener","e","basename","exact","path","SmartObject","NewSmartObject","DetailModule","DetailRoutine","DetailWidget","ListProcess","DetailProcess","User","NewUser","Market","Authorization","GetStarted","authentification","confirmePassword","onFinish","lineHeight","noValidate","autoComplete","inputProps","maxLength","register","Authentification","getStarted","customAddress","address","location","origin","service","replace","checkServer","setItem","token","removeItem","ok","protocol","onSubmit","preventDefault","autoFocus","on","disconnect","App","ThemeProvider","theme","CssBaseline","Box","userSelect","outline","WebkitTapHighlightColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.704a0cd0.chunk.js","sourcesContent":["import MuiAlert from '@material-ui/lab/Alert'\r\nimport { Snackbar } from '@material-ui/core'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <Snackbar open={props.open} autoHideDuration={6000} onClose={() => props.onClose()}>\r\n            <MuiAlert severity={props.severity} elevation={6} variant=\"filled\" {...props} />\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default Alert","class Request {\r\n\r\n    constructor() {\r\n        this.method = 'GET'\r\n    }\r\n\r\n    post(data) {\r\n        this.method = 'POST'\r\n        this.data = data\r\n        return this\r\n    }\r\n\r\n    get() {\r\n        this.method = 'GET'\r\n        return this\r\n    }\r\n\r\n    delete() {\r\n        this.method = 'DELETE'\r\n        return this\r\n    }\r\n\r\n    put(data) {\r\n        this.method = 'PUT'\r\n        this.data = data\r\n        return this\r\n    }\r\n\r\n    async fetch(url) {\r\n        let authorization = localStorage.getItem(\"authorization\")\r\n        let server = localStorage.getItem(\"server\")\r\n        try {\r\n            let result = await fetch(server + url, {\r\n                method: this.method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + authorization\r\n                },\r\n                body: this.method == 'POST' || this.method == 'PUT' ? JSON.stringify(this.data) : null\r\n            })\r\n            return await result.json()\r\n        } catch (error) {\r\n            return {\r\n                error: true,\r\n                message: \"An error has occurred\"\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Request","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'moment'\r\nimport { Add } from '@material-ui/icons'\r\nimport { Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton  } from '@material-ui/core'\r\nimport Icon from '../../../utils/Icon'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Smartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            smartobjects: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n            let result = await new Request().get().fetch(\"/api/smartobjects\")\r\n            if (result.error) {\r\n                this.setState({\r\n                    enabled: true,\r\n                    message: result.code + \" : \" + result.message\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    smartobjects: result.data\r\n                })\r\n            }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <div>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='body1'>\r\n                                                    Reference\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Typography variant='body1'>\r\n                                                    Status\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Typography variant='body1'>\r\n                                                    Last use\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.smartobjects.slice(this.state.page * 10, (this.state.page + 1) * 10).map((smartobject) => (\r\n                                            <Link to={\"/smartobject/\" + smartobject.id} style={{ textDecoration: 'none', color: 'white', display:'contents' }}>\r\n                                                <TableRow hover key={smartobject.name} style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {smartobject.reference}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography variant='body1'>\r\n                                                            <img style={{ height: 25, width: 25, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + smartobject.status.icon + \".svg\"} />\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {Moment(smartobject.lastUse).format(\"hh:mm DD/MM\") }\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </Link>\r\n\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                                    <Link to=\"/smartobject/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.smartobjects.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Smartobject","import React from 'react'\r\nimport { TextField, Paper, Checkbox, Typography, Slider, FormControl, Select, MenuItem, InputLabel } from '@material-ui/core'\r\nimport { TwitterPicker } from 'react-color'\r\n\r\nclass Action extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            action: this.props.action,\r\n            setState: this.props.setState,\r\n            value: this.props.action.default\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"argument-\" + action.id] = value\r\n        this.state.setState(tmp)\r\n        this.setState({\r\n            value: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        switch (this.state.action.type) {\r\n            case 'text':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\r\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\r\n                    </div>\r\n                )\r\n            case 'number':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10, minWidth: '150px' }} >\r\n                        <TextField variant=\"outlined\" placeholder={this.state.action.id} onChange={(event) => { this.updateAction(this.state.action, event.currentTarget.value) }} />\r\n                    </div>\r\n                )\r\n            case 'select':\r\n                return (\r\n                    <div elevation={3} style={{ alignItems: 'center', display: 'flex', marginRight: 10 }} >\r\n                        <FormControl variant=\"outlined\" style={{ width: '150px' }} >\r\n                            <InputLabel>{this.state.action.id}</InputLabel>\r\n                            <Select onChange={(event) => { this.updateAction(this.state.action, event.target.value) }} label={this.state.action.id} >\r\n                                {\r\n                                    this.state.action.values.map(value => {\r\n                                        return <MenuItem value={value} >{value}</MenuItem>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                )\r\n            case 'colorpicker':\r\n                return (\r\n                    <Paper elevation={3} style={{ alignItems: 'flex-start', display: 'flex', padding: 10, marginRight: 5, flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row' }} >\r\n                        <TwitterPicker\r\n                            triangle='hide'\r\n                            color={this.state.value}\r\n                            onChangeComplete={(color) => { this.updateAction(this.state.action, color.hex) }}\r\n                        />\r\n                    </Paper>\r\n                )\r\n            case 'slider':\r\n                return (\r\n                    <Paper elevation={3} style={{ alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: this.props.flexDirection ? this.props.flexDirection : 'row', padding: 10, marginRight: 5 }} >\r\n                        <Typography variant='body1' style={{ textAlign: 'start', marginBottom: 5 }}>\r\n                            {this.state.action.id.toUpperCase()}\r\n                        </Typography>\r\n                        <Slider\r\n                            defaultValue={0}\r\n                            valueLabelDisplay=\"auto\"\r\n                            orientation={this.props.orientation ? this.props.orientation : 'horizontal'}\r\n                            min={this.state.action.min}\r\n                            max={this.state.action.max}\r\n                            step={this.state.action.step}\r\n                            onChange={(event, value) => { this.updateAction(this.state.action, value) }}\r\n                        />\r\n                    </Paper>\r\n                )\r\n            case 'checkbox':\r\n                return (\r\n                    <Paper elevation={3} style={{ alignItems: 'center', justifyContent: 'center', display: 'flex', flexDirection: 'row', padding: 10, marginRight: 5 }} >\r\n                        <Typography variant='body1' style={{ textAlign: 'start', marginBottom: 5 }}>\r\n                            {this.state.action.id.toUpperCase()}\r\n                        </Typography>\r\n                        <Checkbox defaultChecked={this.state.action.default} onChange={(event,value) => {this.updateAction(this.state.action, value)}} />\r\n                    </Paper>\r\n                )\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Action","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\nimport { Paper, Typography, TableContainer, TableBody, Divider, ListItem, TableCell, TableRow, Button, TextField, FormControlLabel, IconButton, Switch } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab'\r\nimport { FileCopy, Delete, Close, Add } from '@material-ui/icons'\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass DetailSmartObject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            smartobject: null,\r\n            profiles: [],\r\n            enabled: false,\r\n            message: \"\",\r\n            referenceSettings: \"\",\r\n            valueSettings: \"\",\r\n            executeInformation: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects/\" + this.state.id)\r\n        if (resultProfile.error || resultSmartobject.error) {\r\n            this.props.history.push('/smartobject')\r\n        } else {\r\n            this.setState({ smartobject: resultSmartobject.data, profiles: resultProfile.data })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/smartobject')\r\n        }\r\n    }\r\n\r\n    async executeAction(action, settings) {\r\n        let tmp = {}\r\n        for (let index = 0; index < settings.length; index++) {\r\n            let argument = settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmp[argument.id] = value\r\n        }\r\n        let result = await new Request().post({ settings: tmp }).fetch(\"/api/smartobjects/\" + this.state.id + \"/actions/\" + action)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({ executeInformation: JSON.stringify(result.data) })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteSmartobjectSettings(settings) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + settings.smartobject + \"/settings/\" + settings.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertSmartobjectSettings(id, reference, value) {\r\n        let result = await new Request().post({ reference: reference, value: value }).fetch(\"/api/smartobjects/\" + id + \"/settings\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ referenceSettings: \"\", valueSettings: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProfile(smartobject, profile) {\r\n        let result = await new Request().post({idProfile: profile.id, }).fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(smartobject, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/smartobjects/\" + smartobject.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.smartobject) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                {this.state.smartobject.reference}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.smartobject.module}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Configuration\r\n                            </Typography>\r\n                            <div style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'row' }}>\r\n                                <TableContainer component={Paper} >\r\n                                    <TableBody>\r\n                                        {this.state.smartobject.settings.map((setting) => (\r\n                                            <TableRow key={setting.id} >\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1'>\r\n                                                        {setting.reference}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ width: '70%' }}>\r\n                                                    <Typography variant='subtitle1'>\r\n                                                        {setting.value.slice(0, 50) + (setting.value.length > 50 ? \" (...)\" : \"\")}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\r\n                                                    <IconButton onClick={() => { navigator.clipboard.writeText(setting.value) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <FileCopy />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ padding: 4 }}>\r\n                                                    <IconButton onClick={() => { this.deleteSmartobjectSettings(setting) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        <TableRow key={\"-1\"} >\r\n                                            <TableCell align=\"left\">\r\n                                                <TextField value={this.state.referenceSettings} onChange={(event) => { this.setState({ referenceSettings: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\r\n                                                </TextField>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <TextField value={this.state.valueSettings} onChange={(event) => { this.setState({ valueSettings: event.nativeEvent.target.value }) }} placeholder='Value' style={{ width: '100%' }}>\r\n                                                </TextField>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{ padding: 4 }}>\r\n                                                <IconButton onClick={() => { this.insertSmartobjectSettings(this.state.smartobject.id, this.state.referenceSettings, this.state.valueSettings) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                {\"Action\"}\r\n                            </Typography>\r\n                            {\r\n                                this.state.smartobject.actions.map(action => {\r\n                                    return (\r\n                                        <Paper style={{ padding: 10, marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', width: '100%', maxWidth: '100%' }}>\r\n                                            <Button onClick={() => { this.executeAction(action.id, action.settings) }} variant='outlined' style={{ width: '250px', height: '100%' }} >\r\n                                                {action.name}\r\n                                            </Button>\r\n                                            \r\n                                            {\r\n                                                action.settings.length > 0 ?\r\n                                                    <div style={{ display: 'grid', gridRowGap:'10px', gridTemplateColumns: 'repeat(5,min-content)' , marginTop: 10, marginBottom: 10 }}>\r\n                                                        {\r\n                                                            action.settings.map(setting => {\r\n                                                                return <Action flexDirection='column' orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                            })\r\n                                                        }\r\n                                                    </div> : null\r\n                                            }\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map(profile => {\r\n                                    let state = false\r\n                                    this.state.smartobject.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={\r\n                                                <Switch\r\n                                                    checked={state}\r\n                                                    onChange={() => { \r\n                                                        state ? this.deleteProfile(this.state.smartobject,profile) : this.insertProfile(this.state.smartobject,profile)\r\n                                                    }}\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            } label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, marginBottom: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        { this.state.message }\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default DetailSmartObject","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewSmartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            module: false,\r\n            reference: \"\",\r\n            enabled: false,\r\n            message: \"\",\r\n            types: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultType = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        if (resultType.error) {\r\n            this.setState({ enabled: true, message: resultType.code + \" : \" + resultType.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                types: resultType.data\r\n            })\r\n        }\r\n    }\r\n\r\n    setModule(id) {\r\n        this.state.types.forEach(pModule => {\r\n            if (pModule.id === id) {\r\n                this.setState({\r\n                    module: pModule\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    updateSettings(key, value) {\r\n        let tmp = {}\r\n        tmp[\"settings-\" + key] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    async add() {\r\n        if (this.state.reference === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : reference is empty\" })\r\n        } else if (this.state.module.name === \"\") {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : type not selected\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.module.settings.length; index++) {\r\n                let setting = this.state.module.settings[index];\r\n                settings.push({\r\n                    reference: setting.id,\r\n                    value: this.state[\"settings-\" + setting.name] ? this.state[\"settings-\" + setting.name] : \"\"\r\n                })\r\n            }\r\n            let result = await new Request().post({ module: this.state.module.id, reference: this.state.reference, settings: settings }).fetch(\"/api/smartobjects\")\r\n            if (result.error) {\r\n                this.setState({\r\n                    enabled: true,\r\n                    message: result.code + \" : \" + result.message\r\n                })\r\n            } else {\r\n                this.props.history.push('/smartobject')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'row', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }} style={{ width: '150px', marginRight: 10 }} label=\"Reference\" variant=\"outlined\" />\r\n                            <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '300px' }} >\r\n                                <InputLabel>Module</InputLabel>\r\n                                <Select value={this.state.module.id} onChange={(event) => { this.setModule(event.target.value) }} label=\"Connexion\" >\r\n                                    {\r\n                                        this.state.types.map(pModule => {\r\n                                            return <MenuItem value={pModule.id} >{pModule.name}</MenuItem>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.module ?\r\n                            this.state.module.settings.length === 0 ?\r\n                                null\r\n                                :\r\n                                <div style={{ display: 'flex', flexDirection: 'column', padding: 10 }}>\r\n                                    <Typography variant='body1' style={{ fontSize: 20 }}>Configuration</Typography>\r\n                                    {\r\n                                        this.state.module.settings.map(settings => {\r\n                                            return (\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.updateSettings(settings.name, event.nativeEvent.target.value) }}\r\n                                                    style={{ width: '300px', marginTop: 10 }}\r\n                                                    label={settings.name}\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            : null\r\n                    }\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSmartobject","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\r\nimport * as Colors from '@material-ui/core/colors'\r\n\r\nexport default responsiveFontSizes(createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: Colors.pink[600],\r\n    },\r\n    secondary: {\r\n      main: Colors.lightBlue[500],\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    \"fontWeightLight\": 400,\r\n    \"fontWeightRegular\": 500,\r\n    \"fontWeightMedium\": 600\r\n  },\r\n  shape: {\r\n    borderRadius: 4\r\n  }\r\n}))","import React from 'react'\r\nimport { Typography, Button, ListItemText, ListItem, Divider, List, Paper } from '@material-ui/core'\r\nimport Theme from '../../../Theme'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Security extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            profiles: [],\r\n            selectProfile: '',\r\n            authorizations: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            if (this.state.selectProfile === \"\") {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    profiles: result.data,\r\n                    selectProfile: result.data[0].id\r\n                })\r\n                this.onSelectProfile(result.data[0].id)\r\n            } else {\r\n                this.setState({\r\n                    enabled: false,\r\n                    message: \"\",\r\n                    profiles: result.data\r\n                })\r\n                this.onSelectProfile(this.state.selectProfile)\r\n            }\r\n        }\r\n    }\r\n\r\n    getColor(type) {\r\n        switch (type) {\r\n            default:\r\n            case 'GET':\r\n                return Theme.palette.success.main\r\n            case 'POST':\r\n                return Theme.palette.error.main\r\n            case 'PUT':\r\n                return Theme.palette.warning.main\r\n            case 'DELETE':\r\n                return Theme.palette.info.main\r\n        }\r\n    }\r\n\r\n    async onSelectProfile(id) {\r\n        this.setState({\r\n            selectProfile: id\r\n        })\r\n        let result = await new Request().get().fetch(\"/api/profiles/\" + id + \"/authorizations\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                authorizations: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async updateSecure(profile, pAuthorization, secure) {\r\n        let result = await new Request().post({ authorization: pAuthorization, secure: secure }).fetch(\"/api/profiles/\" + profile + \"/authorizations\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper style={{ padding: 10, marginBottom: 10, flexDirection: 'row', display: 'flex' }}>\r\n                    {\r\n                        this.state.profiles.map(profile => {\r\n                            return (\r\n                                <Button style={{ marginLeft: 5, marginRight: 5 }} onClick={() => { this.onSelectProfile(profile.id) }} variant={this.state.selectProfile === profile.id ? 'contained' : 'outlined'} >\r\n                                    {\r\n                                        profile.name\r\n                                    }\r\n                                </Button>\r\n                            )\r\n                        })\r\n                    }\r\n                </Paper>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\r\n                        <ListItem >\r\n                            <ListItemText >\r\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.error.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    Refusé\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        {\r\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 0 }).map(authorization => {\r\n                                return (\r\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 1) }}>\r\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\r\n                                                    {authorization.method}\r\n                                                </Typography>\r\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\r\n                                                    {authorization.reference}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                    <List style={{ backgroundColor: Theme.palette.background.paper, width: '45%' }}>\r\n                        <ListItem >\r\n                            <ListItemText >\r\n                                <Typography variant='subtitle1' style={{ display: 'flex', padding: 3, borderRadius: 3, backgroundColor: Theme.palette.success.main, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center' }}>\r\n                                    Authorisé\r\n                                </Typography>\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                        <Divider />\r\n                        {\r\n                            this.state.authorizations.sort((a, b) => { return a.method < b.method }).filter(a => { return a.secure === 1 }).map(authorization => {\r\n                                return (\r\n                                    <ListItem button onClick={() => { this.updateSecure(this.state.selectProfile, authorization.id, 0) }} >\r\n                                        <ListItemText style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                                <Typography variant='body' style={{ padding: 3, paddingLeft: 8, paddingRight: 8, borderRadius: 3, backgroundColor: this.getColor(authorization.method) }}>\r\n                                                    {authorization.method}\r\n                                                </Typography>\r\n                                                <Typography variant='body' style={{ padding: 3, borderRadius: 3, marginLeft: 5 }}>\r\n                                                    {authorization.reference}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Security","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Add } from '@material-ui/icons'\r\nimport { Typography, TablePagination, TableRow, Table, TableCell, TableHead, TableContainer, TableBody, Paper, IconButton } from '@material-ui/core'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Process extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            processs: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/process\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ processs: result.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.processs.slice(this.state.page * 10, (this.state.page + 1) * 10).map((_process) => (\r\n                                <Link to={\"/process/\" + _process.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                    <TableRow hover key={_process.name} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + _process.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {_process.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {_process.description}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {_process.espace.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Link>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/process/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Add />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.processs.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Process","import Request from './Request'\r\n\r\nclass Source {\r\n\r\n    static async getSource(query = []) {\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/smartobjects\")\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultProcess = await new Request().get().fetch(\"/api/process\")\r\n        if (resultProcess.error) {\r\n            return resultProcess\r\n        } else if (resultModule.error) {\r\n            return resultModule\r\n        } else if (resultSmartobject.error) {\r\n            return resultSmartobject\r\n        } else {\r\n            let sources = []\r\n            if (query.includes(\"smartobject\")) {\r\n                resultSmartobject.data.forEach(smartobject => {\r\n                    let actions = []\r\n                    smartobject.actions.forEach(action => {\r\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\r\n                    })\r\n                    sources.push({ id: smartobject.id, name: \"Smartobject \" + smartobject.reference, actions: actions, type: 'smartobject' })\r\n                })\r\n            }\r\n            if (query.includes(\"module\")) {\r\n                resultModule.data.forEach(pModule => {\r\n                    let actions = []\r\n                    pModule.actions.forEach(action => {\r\n                        actions.push({ id: action.id, name: action.name, settings: action.settings })\r\n                    })\r\n                    sources.push({ id: pModule.id, name: \"Module \" + pModule.name, actions: actions, type: 'module' })\r\n                })\r\n            }\r\n            if (query.includes(\"process\")) {\r\n                resultProcess.data.forEach(process => {\r\n                    let actions = []\r\n                    if (process.mode == \"simple\") {\r\n                        actions.push({\r\n                            id: \"auto\",\r\n                            name: process.name,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                    } else {\r\n                        actions.push({\r\n                            id: \"enable\",\r\n                            name: process.name_enable,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                        actions.push({\r\n                            id: \"disable\",\r\n                            name: process.name_disable,\r\n                            settings: process.inputs.map(input => {\r\n                                return { id: input.reference, name: input.name, type: input.type }\r\n                            })\r\n                        })\r\n                    }\r\n                    sources.push({ id: process.id, name: \"Processus \" + process.reference, actions: actions, type: 'process' })\r\n                })\r\n            }\r\n            return { data: sources, error: false, code: '', message: '' }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Source","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nclass IconList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            icons: [],\r\n            mode: 'normal'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let result = await fetch(process.env.PUBLIC_URL + '/ressource/icon.json')\r\n            let resultJSON = await result.json()\r\n            this.setState({ icons: resultJSON })\r\n        } catch (error) {\r\n            this.setState({ icons: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={1} style={{ width: '32vw', height: '32vw',  padding: 10, marginRight: 10 }}>\r\n                <Grid item xs={6} >\r\n                    <Paper onClick={() => { this.setState({ mode: 'normal' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star.svg\"} />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={6} >\r\n                    <Paper onClick={() => { this.setState({ mode: 'outline' }) }} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                        <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/star-outline.svg\"} />\r\n                    </Paper>\r\n                </Grid>\r\n                {\r\n\r\n                    this.state.icons.filter(icon => {\r\n                        if (icon.search(\"outline\") != -1 && this.state.mode == \"outline\") {\r\n                            return true\r\n                        } else if (icon.search(\"outline\") == -1 && this.state.mode == \"normal\") {\r\n                            return true\r\n                        } else {\r\n                            return false\r\n                        }\r\n                    }).map(icon => {\r\n                        return (\r\n                            <Grid item xs >\r\n                                <Paper onClick={() => {this.props.onSelect && this.props.onSelect(icon)}} style={{ cursor: 'pointer', display: 'flex', justifyContent: 'center', alignContent: 'center', padding: 5, alignItems: 'center', alignSelf: 'center' }}>\r\n                                    <img style={{ height: 30, width: 30, alignSelf: 'center', filter: 'invert(100%)' }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + icon + \".svg\"} />\r\n                                </Paper>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default IconList","import React from 'react'\r\n\r\nimport { Popover, InputAdornment, Checkbox, Typography, Paper, Grid, InputLabel, MenuItem, FormControl, Select, TableBody, TableContainer, TextField, TableCell, Table, TableRow, Switch, Button, IconButton } from '@material-ui/core'\r\n\r\nimport { Delete, List } from '@material-ui/icons'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\nimport IconList from '../../../components/IconList'\r\n\r\nclass New extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            popup: false,\r\n            message: \"\",\r\n            espaces: [],\r\n            reference: '',\r\n            icon: '',\r\n            description: '',\r\n            name: '',\r\n            name_disable: '',\r\n            name_enable: '',\r\n            mode: 'simple',\r\n            module: null,\r\n            espace: false,\r\n            inputReference: \"\",\r\n            inputName: \"\",\r\n            inputType: null,\r\n            inputMode: false,\r\n            inputs: [],\r\n            sources: [],\r\n            isChecked: false,\r\n            action: null,\r\n            source: null,\r\n            arrSources: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\r\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\r\n        if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else if (resultEspace.error) {\r\n            this.setState({ enabled: true, message: resultEspace.code + \" : \" + resultEspace.message })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                espaces: resultEspace.data,\r\n                sources: resultSource.data\r\n            })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        let fSource = false\r\n        this.state.sources.forEach(source => {\r\n            if (source.id === id) { fSource = source }\r\n        })\r\n        this.setState({ source: fSource })\r\n    }\r\n\r\n    setAction(id) {\r\n        let fAction = false\r\n        this.state.source.actions.forEach(action => {\r\n            if (action.id === id) { fAction = action }\r\n        })\r\n        this.setState({ action: fAction })\r\n    }\r\n\r\n    setInput() {\r\n        if (this.state.inputReference === \"\") {\r\n            this.setState({ enabled: true, message: \"Reference is missing\" })\r\n            return\r\n        }\r\n        if (this.state.inputType === \"\") {\r\n            this.setState({ enabled: true, message: \"Type is missing\" })\r\n            return\r\n        }\r\n        if (this.state.inputName === \"\") {\r\n            this.setState({ enabled: true, message: \"Name is missing\" })\r\n            return\r\n        }\r\n        let inputs = this.state.inputs\r\n        inputs.push({\r\n            name: this.state.inputName,\r\n            type: this.state.inputType,\r\n            reference: this.state.inputReference,\r\n            enable: this.state.inputMode ? 1 : 0\r\n        })\r\n        this.setState({ inputs: inputs, inputName: \"\", inputType: null, inputReference: \"\", inputMode: false })\r\n    }\r\n\r\n    async set() {\r\n        if (this.state.reference === \"\") {\r\n            this.setState({ enabled: true, message: \"Reference is missing\" })\r\n            return\r\n        }\r\n        if (this.state.icon === \"\") {\r\n            this.setState({ enabled: true, message: \"Icon is missing\" })\r\n            return\r\n        }\r\n        if (this.state.description === \"\") {\r\n            this.setState({ enabled: true, message: \"Description is missing\" })\r\n            return\r\n        }\r\n        if (this.state.espace === false) {\r\n            this.setState({ enabled: true, message: \"Espace is missing\" })\r\n            return\r\n        }\r\n        let body = {\r\n            description: this.state.description,\r\n            nameEnable: this.state.name_enable,\r\n            nameDisable: this.state.name_disable,\r\n            name: this.state.name,\r\n            espace: this.state.espace,\r\n            sources: this.state.arrSources,\r\n            reference: this.state.reference,\r\n            icon: this.state.icon,\r\n            mode: this.state.mode,\r\n            inputs: this.state.inputs\r\n        }\r\n        let result = await new Request().post(body).fetch(\"/api/process\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/process')\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"argument-\" + action.id] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n    removeModeArgument(index) {\r\n        let tmp = []\r\n        this.state.inputs.forEach((modeArgument, pIndex) => {\r\n            if (index !== pIndex) { tmp.push(modeArgument) }\r\n        })\r\n        this.setState({ inputs: tmp })\r\n    }\r\n\r\n    confirmationModule() {\r\n        if (this.state.action === false) {\r\n            this.setState({ enabled: true, message: \"Action missing\" })\r\n            return\r\n        }\r\n        if (this.state.source.actions.length === 0) {\r\n            this.setState({ enabled: true, message: \"Module missing\" })\r\n            return\r\n        }\r\n        let settings = []\r\n        for (let index = 0; index < this.state.action.settings.length; index++) {\r\n            let setting = this.state.action.settings[index]\r\n            let value = this.state[\"argument-\" + setting.id]\r\n            if (value == undefined) {\r\n                value = setting.default\r\n            }\r\n            settings.push({ reference: setting.id, value: value })\r\n        }\r\n        let action = {\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: settings,\r\n            enable: this.state.isChecked\r\n        }\r\n        let tmp = this.state.arrSources\r\n        tmp.push(action)\r\n        this.setState({ arrSources: tmp, action: null, source: null, isChecked: false })\r\n    }\r\n\r\n    removeSource(index) {\r\n        let tmp = []\r\n        this.state.arrSources.forEach((action, pIndex) => {\r\n            if (index !== pIndex) { tmp.push(action) }\r\n        })\r\n        this.setState({ arrSources: [] }, () => {\r\n            this.setState({ arrSources: tmp })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ justifyContent: 'start', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ reference: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '20%', margin: 10 }}\r\n                            label=\"Réference\"\r\n                            value={this.state.reference}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ icon: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '20%', margin: 10 }}\r\n                            label=\"Icon\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.icon}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                            <List />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\r\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ icon: icon, popup: false }) }} />\r\n                        </Popover>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ description: event.nativeEvent.target.value }) }}\r\n                            style={{ width: '50%', margin: 10 }}\r\n                            label=\"Description\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <FormControl variant=\"outlined\" style={{ margin: 10, width: '150px' }} >\r\n                            <InputLabel>Espace</InputLabel>\r\n                            <Select onChange={(event) => { this.setState({ espace: event.target.value }) }} label=\"Espace\" >\r\n                                {\r\n                                    this.state.espaces.map(espace => {\r\n                                        return <MenuItem value={espace.id} >{espace.name}</MenuItem>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>\r\n                            Mode\r\n                        </Typography>\r\n                        <Grid style={{ margin: 10 }} container alignItems=\"center\" >\r\n                            <Grid item>\r\n                                <Typography variant='subtitle1'>Simple</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch checked={this.state.mode === 'switch'} onChange={(event, checked) => { this.setState({ mode: checked ? 'switch' : 'simple' }) }} name=\"checkedC\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant='subtitle1'>Switch</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\r\n                            {\r\n                                this.state.mode === 'switch' ?\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <TextField\r\n                                            onChange={(event) => { this.setState({ name_enable: event.nativeEvent.target.value }) }}\r\n                                            style={{ width: '45%', margin: 10 }}\r\n                                            label=\"Texte actif\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            onChange={(event) => { this.setState({ name_disable: event.nativeEvent.target.value }) }}\r\n                                            style={{ width: '45%', margin: 10 }}\r\n                                            label=\"Texte passif\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </div> :\r\n                                    <div >\r\n                                        <TextField\r\n                                            onChange={(event) => { this.setState({ name: event.nativeEvent.target.value }) }}\r\n                                            style={{ margin: 10, width: '45%' }}\r\n                                            label=\"Texte\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </div>\r\n                            }\r\n                        </TableContainer>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>\r\n                            Argument\r\n                        </Typography>\r\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\r\n                            <TextField\r\n                                value={this.state.inputReference}\r\n                                onChange={(event) => { this.setState({ inputReference: event.nativeEvent.target.value }) }}\r\n                                style={{ width: '30%', margin: 10 }}\r\n                                label=\"Reference\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <TextField\r\n                                value={this.state.inputName}\r\n                                onChange={(event) => { this.setState({ inputName: event.nativeEvent.target.value }) }}\r\n                                style={{ width: '30%', margin: 10 }}\r\n                                label=\"Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <FormControl variant=\"outlined\" style={{ margin: 10, width: '25%' }} >\r\n                                <InputLabel>Type</InputLabel>\r\n                                <Select value={this.state.inputType} onChange={(event) => { this.setState({ inputType: event.target.value }) }} label=\"Type\" >\r\n                                    <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\r\n                                    <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\r\n                                    <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\r\n                                    <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            {\r\n                                this.state.mode === 'switch' ?\r\n                                    <Checkbox onChange={(event, checked) => { this.setState({ inputMode: checked }) }} /> : null\r\n                            }\r\n                            <Button style={{ margin: 10 }} onClick={() => { this.setInput() }} variant='outlined'>\r\n                                Ajouter\r\n                            </Button>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        this.state.inputs.map((modeArgument, index) => {\r\n                                            return (\r\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {modeArgument.reference}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {modeArgument.name}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {modeArgument.type}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    {\r\n                                                        this.state.mode === 'switch' ?\r\n                                                            <TableCell align=\"center\">\r\n                                                                <Checkbox disabled defaultChecked={modeArgument.mode} />\r\n                                                            </TableCell> : null\r\n                                                    }\r\n                                                    <TableCell align=\"right\">\r\n                                                        <IconButton onClick={() => { this.removeModeArgument(index) }}>\r\n                                                            <Delete />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Typography variant='h5' style={{ margin: 10 }}>Action </Typography>\r\n                        <TableContainer style={{ padding: 10, margin: 10 }} component={Paper}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {\r\n                                        this.state.arrSources.map((action, index) => {\r\n                                            return (\r\n                                                <TableRow onClick={() => { }} hover style={{ cursor: 'pointer' }}>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {action.source.name}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {action.action.name}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        <Typography variant='body1'>\r\n                                                            {\r\n                                                                action.arguments.map(argument => {\r\n                                                                    return (\r\n                                                                        <Typography variant='body1'>\r\n                                                                            {argument.reference + \" : \" + argument.value}\r\n                                                                        </Typography>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    {this.state.mode === 'simple' ? null : <TableCell align=\"center\">\r\n                                                        <Checkbox disabled defaultChecked={action.enable} />\r\n                                                    </TableCell>}\r\n                                                    <TableCell align=\"center\">\r\n                                                        <IconButton onClick={() => { this.removeSource(index) }}>\r\n                                                            <Delete />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <TableRow >\r\n                                        <TableCell align=\"left\" style={{ minWidth: '30%' }}>\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel>Source</InputLabel>\r\n                                                <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\r\n                                                    {\r\n                                                        this.state.sources.map(source => {\r\n                                                            return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                            {\r\n                                                this.state.source ?\r\n                                                    <FormControl fullWidth >\r\n                                                        <InputLabel>Action</InputLabel>\r\n                                                        <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\r\n                                                            {\r\n                                                                this.state.source.actions.map(action => {\r\n                                                                    return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                    : null\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                            <div>\r\n                                            </div>\r\n                                            {\r\n                                                this.state.action ?\r\n                                                    this.state.action.settings.map(argument => {\r\n                                                        return (\r\n                                                            <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\r\n                                                                <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\r\n                                                            </div>\r\n                                                        )\r\n                                                    }) : null\r\n                                            }\r\n                                        </TableCell>\r\n                                        {this.state.mode === 'simple' ? null :\r\n                                            <TableCell align=\"center\">\r\n                                                <Checkbox onChange={(event, checked) => { this.setState({ isChecked: checked }) }} />\r\n                                            </TableCell>\r\n                                        }\r\n                                    </TableRow>\r\n                                    <Button style={{ margin: 10 }} onClick={() => { this.confirmationModule() }} variant='outlined'>\r\n                                        Ajouter\r\n                                    </Button>\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                    <Button style={{ margin: 10 }} onClick={() => { this.set() }} variant='outlined'>Save</Button>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}> {this.state.message} </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default New","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\n\r\nimport { MenuItem, Switch, ListItem, FormControlLabel, Checkbox, InputLabel, IconButton, TableHead, TextField, Typography, Paper, Divider, TableBody, TableContainer, TableCell, Table, TableRow, FormControl, Select, Button } from '@material-ui/core'\r\n\r\nimport { Check, Close, Delete, Autorenew, Add } from '@material-ui/icons'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nclass NewProcess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            enabled: false,\r\n            message: \"\",\r\n            process: null,\r\n            profiles: [],\r\n            executeInformation: \"\",\r\n            referenceInput: \"\",\r\n            nameInput: \"\",\r\n            typeInput: null,\r\n            modeInput: 0,\r\n            action: null,\r\n            source: null,\r\n            isChecked: false,\r\n            sources: []\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\r\n        let resultEspace = await new Request().get().fetch(\"/api/espaces\")\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        let result = await new Request().get().fetch(\"/api/process/\" + this.state.id)\r\n        if (resultEspace.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultEspace.code + \" : \" + resultEspace.message\r\n            })\r\n        } else if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                process: result.data,\r\n                profiles: resultProfile.data,\r\n                espaces: resultEspace.data,\r\n                sources: resultSource.data\r\n            })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        let fSource = false\r\n        this.state.sources.forEach(source => {\r\n            if (source.id === id) { fSource = source }\r\n        })\r\n        this.setState({ source: fSource })\r\n    }\r\n\r\n    setAction(id) {\r\n        let fAction = false\r\n        this.state.source.actions.forEach(action => {\r\n            if (action.id === id) { fAction = action }\r\n        })\r\n        this.setState({ action: fAction })\r\n    }\r\n\r\n    async addSource() {\r\n        if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Action missing\" })\r\n            return\r\n        }\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Source missing\" })\r\n            return\r\n        }\r\n        let settings = []\r\n        for (let index = 0; index < this.state.action.settings.length; index++) {\r\n            let setting = this.state.action.settings[index]\r\n            let value = this.state[\"argument-\" + setting.id]\r\n            if (value == undefined) {\r\n                value = setting.default\r\n            }\r\n            settings.push({ reference: setting.id, value: value })\r\n        }\r\n\r\n        let action = {\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: settings,\r\n            enable: this.state.isChecked\r\n        }\r\n        let result = await new Request().post(action).fetch(\"/api/process/\" + this.state.id + \"/actions\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteSource(idsource) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + this.state.id + \"/actions/\" + idsource)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/process')\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async executeAction() {\r\n        let tmp = {}\r\n        for (let index = 0; index < this.state.process.inputs.length; index++) {\r\n            let input = this.state.process.inputs[index];\r\n            let value = this.state[\"argument-\" + input.id]\r\n            if (value == undefined) {\r\n                value = input.default\r\n            }\r\n            tmp[input.reference] = value\r\n        }\r\n        let result = await new Request().post({ inputs: tmp }).fetch(\"/api/process/\" + this.state.process.id + \"/execute\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({ executeInformation: JSON.stringify(result.data) })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProfile(process, profile) {\r\n        let result = await new Request().post({idProfile: profile.id, }).fetch(\"/api/process/\" + process.id + \"/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProfile(process, profile) {\r\n        let result = await new Request().delete().fetch(\"/api/process/\" + process.id + \"/profiles/\" + profile.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteProcessInput(input) {\r\n        let result = await new Request().delete({}).fetch(\"/api/process/\" + this.state.process.id + \"/inputs/\" + input.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertProcessInput() {\r\n        if (this.state.typeInput == null) {\r\n            this.setState({ enabled: true, message: \"Missing-parameter : type is empty\" })\r\n            return\r\n        }\r\n        let result = await new Request().post({\r\n            reference: this.state.referenceInput,\r\n            name: this.state.nameInput,\r\n            type: this.state.typeInput,\r\n            enable: this.state.modeInput\r\n        }).fetch(\"/api/process/\" + this.state.process.id + \"/inputs\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({\r\n                referenceSettings: \"\",\r\n                valueSettings: \"\",\r\n                referenceInput: \"\",\r\n                nameInput: \"\",\r\n                modeInput: 0\r\n            })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    updateAction(action, value) {\r\n        let tmp = {}\r\n        tmp[\"argument-\" + action.id] = value\r\n        this.setState(tmp)\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.process) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 25 }}>\r\n                        <Typography variant='h4'>\r\n                            {this.state.process.reference}\r\n                        </Typography>\r\n                        <Typography variant='subtitle1'>\r\n                            {this.state.process.espace.name}\r\n                        </Typography>\r\n                        <Typography variant='subtitle1'>\r\n                            {this.state.process.description}\r\n                        </Typography>\r\n                        <Divider style={{ marginTop: 10, marginBottom: 10 }} />\r\n                        <div  >\r\n                            <Typography variant='h5' style={{ marginBottom: 5 }}>Action</Typography>\r\n                            {\r\n                                this.state.process.mode == \"simple\" ?\r\n                                    this.state.process.mode === \"simple\" ?\r\n                                        <Button style={{ alignSelf: 'center', marginLeft: 10, marginTop: 10 }} variant={this.state.process.enable === 2 ? \"contained\" : \"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" startIcon={<Autorenew />}>\r\n                                            {this.state.process.name}\r\n                                        </Button> : null\r\n                                    :\r\n                                    <div style={{ flexDirection: 'column', display: 'flex', width: '20%' }}>\r\n                                        {\r\n                                            this.state.process.enable == 1 ?\r\n                                                <Button style={{ marginTop: 10 }} variant={\"contained\"} onClick={() => { this.executeAction() }} color=\"default\" startIcon={<Check />}>\r\n                                                    {this.state.process.name_enable}\r\n                                                </Button> :\r\n                                                <Button style={{ marginTop: 10 }} variant={\"outlined\"} onClick={() => { this.executeAction() }} color=\"default\" startIcon={<Close />}>\r\n                                                    {this.state.process.name_disable}\r\n                                                </Button>\r\n                                        }\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\r\n                            {\r\n                                this.state.process.inputs.filter(input => {\r\n                                    return input.enable == this.state.process.enable\r\n                                }).map(input => {\r\n                                    return <Action setState={this.setState.bind(this)} action={input} orientation='vertical' />\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div style={{ marginTop: 15 }} >\r\n                            <Typography variant='h5'>\r\n                                Input\r\n                            </Typography>\r\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.process.inputs.map(input =>\r\n                                                    <TableRow key={input.id}>\r\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.reference}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.name}</Typography> </TableCell>\r\n                                                        <TableCell align=\"left\"><Typography variant='body1'>{input.type}</Typography></TableCell>\r\n                                                        <TableCell align=\"center\"><Typography variant='body1'>{input.enable}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\">\r\n                                                            <IconButton onClick={() => { this.deleteProcessInput(input) }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                                <Delete />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            <TableRow key={-1}>\r\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\r\n                                                    <TextField value={this.state.referenceInput} onChange={(event) => { this.setState({ referenceInput: event.nativeEvent.target.value }) }} placeholder='Reference' style={{ width: '100%' }}>\r\n                                                    </TextField>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ width: '35%' }}>\r\n                                                    <TextField value={this.state.nameInput} onChange={(event) => { this.setState({ nameInput: event.nativeEvent.target.value }) }} placeholder='Name' style={{ width: '100%' }}>\r\n                                                    </TextField>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" style={{ width: '20%' }}>\r\n                                                    <FormControl variant=\"outlined\" style={{ width: '100%' }} >\r\n                                                        <InputLabel>Type</InputLabel>\r\n                                                        <Select value={this.state.typeInput} onChange={(event) => { this.setState({ typeInput: event.target.value }) }} label=\"Type\" >\r\n                                                            <MenuItem value={\"text\"} >{\"Text\"}</MenuItem>\r\n                                                            <MenuItem value={\"colorpicker\"} >{\"Color picker\"}</MenuItem>\r\n                                                            <MenuItem value={\"number\"} >{\"Number\"}</MenuItem>\r\n                                                            <MenuItem value={\"slider\"} >{\"Slider\"}</MenuItem>\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\" style={{ width: '10%' }}>\r\n                                                    {\r\n                                                        this.state.process.mode === 'switch' ?\r\n                                                            <Checkbox value={this.state.modeInput == 0} onChange={(event, checked) => { this.setState({ modeInput: checked ? 1 : 0 }) }} /> : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\" >\r\n                                                    <IconButton onClick={() => { this.insertProcessInput() }} style={{ borderRadius: 5, margin: 0 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginTop: 15 }} >\r\n                            <Typography variant='h5'>\r\n                                Module\r\n                            </Typography>\r\n                            <div style={{ flexDirection: 'column', display: 'flex', width: '100%', marginTop: 10 }}>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Module</Typography></TableCell>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Type</Typography></TableCell>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Action</Typography></TableCell>\r\n                                                <TableCell align=\"left\"><Typography variant='body1'>Arguments</Typography></TableCell>\r\n                                                <TableCell align=\"center\"><Typography variant='body1'>Mode</Typography></TableCell>\r\n                                                <TableCell align=\"left\"></TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.process.actions.map(action =>\r\n                                                    <TableRow key={action.id}>\r\n                                                        <TableCell align=\"left\" style={{ width: '15%' }}><Typography variant='body1'>{action.object}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.type}</Typography> </TableCell>\r\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}><Typography variant='body1'>{action.action}</Typography></TableCell>\r\n                                                        <TableCell align=\"left\" style={{ width: '20%' }}>{action.arguments.map(argument => {\r\n                                                            return <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\r\n                                                        })}</TableCell>\r\n                                                        <TableCell align=\"center\" style={{ width: '15%' }}>{action.enable === 0 ? <Close /> : action.enable === 1 ? <Check /> : <Autorenew />}</TableCell>\r\n                                                        <TableCell align=\"left\">\r\n                                                            <IconButton onClick={() => { this.deleteSource(action.id) }}>\r\n                                                                <Delete />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                                <TableContainer style={{ marginTop: 15 }} component={Paper}>\r\n                                    <Table>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\r\n                                                <FormControl fullWidth>\r\n                                                    <InputLabel>Source</InputLabel>\r\n                                                    <Select value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Connexion\" >\r\n                                                        {\r\n                                                            this.state.sources.map(source => {\r\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" style={{ width: '25%' }}>\r\n                                                {\r\n                                                    this.state.source ?\r\n                                                        <FormControl fullWidth >\r\n                                                            <InputLabel>Action</InputLabel>\r\n                                                            <Select value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Connexion\" >\r\n                                                                {\r\n                                                                    this.state.source.actions.map(action => {\r\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n\r\n                                            <TableCell align=\"left\" style={{ width: '20%' }}>\r\n                                                {\r\n                                                    this.state.action ?\r\n                                                        this.state.action.settings.map(argument => {\r\n                                                            return (\r\n                                                                <div style={{ marginLeft: 10, marginRight: 10, marginTop: 5, marginBottom: 2 }} >\r\n                                                                    <TextField variant=\"outlined\" placeholder={argument.id} onChange={(event) => { this.updateAction(argument, event.currentTarget.value, this.state.action) }} />\r\n                                                                </div>\r\n                                                            )\r\n                                                        }) : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\r\n                                                {\r\n                                                    this.state.process.mode === 'switch' ?\r\n                                                        <Checkbox onChange={(event, isChecked) => { this.setState({ isChecked: isChecked }) }} /> : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" style={{ width: '5%' }}>\r\n                                                <IconButton onClick={() => { this.addSource() }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Authorization\r\n                            </Typography>\r\n                            {\r\n                                this.state.profiles.map(profile => {\r\n                                    let state = false\r\n                                    this.state.process.profiles.forEach(pprofile => {\r\n                                        if (pprofile.profile == profile.id) {\r\n                                            state = true\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <ListItem style={{ padding: 1 }}  >\r\n                                            <FormControlLabel control={<Switch\r\n                                                checked={state}\r\n                                                onChange={() => { \r\n                                                    state ? this.deleteProfile(this.state.process,profile) : this.insertProfile(this.state.process,profile)\r\n                                                }}\r\n                                                color=\"primary\"\r\n                                            />} label={profile.name} />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete(this.state.process.id) }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        { this.state.message }\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewProcess","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { IconButton, Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\r\nimport { Add, Delete, FileCopy, PlayArrow, Edit, Pause } from '@material-ui/icons'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Theme from '../../../Theme'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Routine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            loading: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            routines: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/routines\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                loading: false,\r\n                routines: result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/routines/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async duplicate(id) {\r\n        let result = await new Request().put().fetch(\"/api/routines/\" + id + \"/duplicate\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateStatus(id, status) {\r\n        let result = await new Request().put({ status: status }).fetch(\"/api/routines/\" + id + \"/status\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.routines.slice(this.state.page * 10, (this.state.page + 1) * 10).map((routine) => (\r\n                                <TableRow key={routine.id} >\r\n                                    <TableCell align=\"left\">\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + routine.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {routine.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <div style={{ flex: 1, flexDirection: 'row', display: 'flex', alignContent: 'center', alignItems: 'center', justifyContent: 'end' }}>\r\n                                            <IconButton onClick={() => { this.updateStatus(routine.id, routine.status === 0 ? 1 : 0) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2, backgroundColor: routine.status === 1 ? Theme.palette.success.main : null }}>\r\n                                                {routine.status === 0 ? <PlayArrow /> : <Pause />}\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.props.history.push('/routine/' + routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.duplicate(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <FileCopy />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => { this.delete(routine.id) }} style={{ borderRadius: 3, padding: 8, marginLeft: 2, marginRight: 2 }}>\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                        <Link to=\"/routine/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <IconButton style={{ borderRadius: 0 }}>\r\n                                <Add />\r\n                            </IconButton>\r\n                        </Link>\r\n                    </Paper>\r\n                    <TablePagination component=\"div\" count={this.state.routines.length} rowsPerPage={10} page={this.state.page} rowsPerPageOptions={[]} onChangePage={(event, page) => { this.setState({ page: page }) }} />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routine","import React from 'react'\r\nimport { TextField, Button, IconButton } from '@material-ui/core'\r\nimport { Save, Cached } from '@material-ui/icons'\r\n\r\nclass Week extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: \"\",\r\n            sunday: false,\r\n            monday: false,\r\n            tuesday: false,\r\n            wednesday: false,\r\n            friday: false,\r\n            saturday: false,\r\n            time: \"\"\r\n        }\r\n    }\r\n\r\n    calculate() {\r\n        let timeSplit = this.state.time.split(\":\")\r\n        if(timeSplit.length != 2) { return }\r\n        let value = '0 ' + timeSplit[1] + ' ' +  timeSplit[0]  + ' * * ' +  \r\n        \r\n            (this.state.sunday ? \"0,\" : \"\") +\r\n            (this.state.monday ? \"2,\" : \"\") +\r\n            (this.state.tuesday ? \"3,\" : \"\") +\r\n            (this.state.wednesday ? \"4,\" : \"\") +\r\n            (this.state.friday ? \"5,\" : \"\") +\r\n            (this.state.saturday ? \"6,\" : \"\");\r\n\r\n        value = value.slice(0,value.length - 1 );\r\n\r\n\r\n        if((parseInt(timeSplit[1]) + parseInt(timeSplit[0]) * 60) > 1440 ) {\r\n            this.setState({\r\n                time: \"\"\r\n            })\r\n            return\r\n        } else {\r\n            this.props.onChange(value)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, paddingLeft: 15, paddingRight: 15, flexDirection: 'column' }}>\r\n            <div style={{ display: 'flex', flexDirection: 'row', alignContent: 'center', alignItems: 'center', flex: 1, justifyContent: 'space-between' }}>\r\n                <div style={{ flex: 1 }}>\r\n                    <IconButton size='small' onClick={() => { this.props.onChangeMode() }} variant='outlined'>\r\n                        <Cached />\r\n                    </IconButton>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 3, marginLeft: 3 }}>\r\n                    <Button fullWidth variant={this.state.sunday ? 'contained' : 'outlined'} onClick={() => {this.setState({sunday: !this.state.sunday},() => {this.calculate()})}}  >{\"Sunday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 3, marginLeft: 3 }}>\r\n                    <Button fullWidth variant={this.state.monday ? 'contained' : 'outlined'} onClick={() => {this.setState({monday: !this.state.monday},() => {this.calculate()})}} >{\"Monday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 3, marginLeft: 3 }}>\r\n                    <Button fullWidth variant={this.state.tuesday ? 'contained' : 'outlined'} onClick={() => {this.setState({tuesday: !this.state.tuesday},() => {this.calculate()})}} >{\"Tuesday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 3, marginLeft: 3 }}>\r\n                    <Button fullWidth variant={this.state.wednesday ? 'contained' : 'outlined'} onClick={() => {this.setState({wednesday: !this.state.wednesday},() => {this.calculate()})}} >{\"Wednesday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 3, marginLeft: 3 }}>\r\n                    <Button fullWidth variant={this.state.thursday ? 'contained' : 'outlined'} onClick={() => {this.setState({thursday: !this.state.thursday},() => {this.calculate()})}} >{\"Thursday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 3, marginLeft: 3 }}>\r\n                    <Button fullWidth variant={this.state.friday ? 'contained' : 'outlined'} onClick={() => {this.setState({friday: !this.state.friday},() => {this.calculate()})}} >{\"Friday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3, textAlign: 'center', marginRight: 3, marginLeft: 3 }}>\r\n                    <Button fullWidth variant={this.state.saturday ? 'contained' : 'outlined'} onClick={() => {this.setState({saturday: !this.state.saturday},() => {this.calculate()})}} >{\"Saturday\"}</Button>\r\n                </div>\r\n                <div style={{ flex: 3 }}>\r\n                    <TextField size='small' value={this.state.time}  onChange={(event) => { this.setState({ time: event.currentTarget.value },() => {this.calculate()}) }}  placeholder='hh:mm' variant='outlined' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Week","import React from 'react'\r\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\r\nimport { Save, Add, List, Cached } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Source from '../../../utils/Source'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Theme from '../../../Theme'\r\nimport WeekSchedul from '../../../components/WeekSchedul'\r\nimport IconList from '../../../components/IconList'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass NewRoutine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            routine: null,\r\n            sources: [],\r\n            mode: 'counter',\r\n            modalTrigger: false,\r\n            modalEffect: false,\r\n            routine: {\r\n                watch: 1,\r\n                triggers: [],\r\n                effects: [],\r\n                name: \"\",\r\n                icon: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\"])\r\n        if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({ sources: resultSource.data })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) { this.setState({ action: action }) }\r\n        })\r\n    }\r\n\r\n    updateIcon(icon) {\r\n        let routine = this.state.routine\r\n        routine.icon = icon\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateName(name) {\r\n        let routine = this.state.routine\r\n        routine.name = name\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateWatch(watch) {\r\n        let routine = this.state.routine\r\n        routine.watch = watch\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    addTrigger() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.triggers.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings,\r\n                result: this.state.result,\r\n                statement: this.state.statement,\r\n                expected: this.state.expected\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalTrigger: false,\r\n                action: null,\r\n                source: null,\r\n                result: null,\r\n                statement: null,\r\n                expected: null\r\n            })\r\n        }\r\n    }\r\n\r\n    addEffect() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.effects.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalEffect: false,\r\n                action: null,\r\n                source: null\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTrigger(pIndex) {\r\n        let routine = this.state.routine\r\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\r\n        routine.triggers = triggers\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    removeEffect(pIndex) {\r\n        let routine = this.state.routine\r\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\r\n        routine.effects = effects\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.routine.name.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing name\" })\r\n        } else if (this.state.routine.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing icon\" })\r\n        } else if (this.state.routine.effects.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing effect\" })\r\n        } else {\r\n            let result = await new Request().post({\r\n                name: this.state.routine.name,\r\n                watch: this.state.routine.watch.toString(),\r\n                icon: this.state.routine.icon,\r\n                triggers: this.state.routine.triggers,\r\n                effects: this.state.routine.effects,\r\n                mode: this.state.mode\r\n            }).fetch(\"/api/routines\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/routine')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.routine) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\r\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                                    <List />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                ></TextField>\r\n                                <Popover\r\n                                    open={this.state.popup}\r\n                                    onClose={() => { this.setState({ popup: false }) }}\r\n                                    anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                                    transformOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                                >\r\n                                    <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon) }} />\r\n                                </Popover>\r\n                            </div>\r\n                            {\r\n                                this.state.mode == 'counter' ?\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 15, paddingRight: 15 }}>\r\n                                            <div style={{ flex: 1 }}>\r\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\r\n                                                    <Cached />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <div style={{ display: 'flex', flex: 15, justifyContent: 'center' }}>\r\n                                                <Slider\r\n                                                    defaultValue={0}\r\n                                                    valueLabelDisplay=\"auto\"\r\n                                                    orientation={'horizontal'}\r\n                                                    min={0}\r\n                                                    max={1440}\r\n                                                    step={1}\r\n                                                    value={this.state.routine.watch}\r\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> :\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\r\n                                    </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\r\n\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\r\n                                    this.state.routine.triggers.map((trigger, index) => {\r\n                                        return (\r\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                <div  >\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\r\n                                                    {\r\n                                                        trigger.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    trigger.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                                {\r\n                                                    trigger.result && trigger.statement && trigger.expected ?\r\n                                                        <div>\r\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\r\n                                    {\r\n                                        this.state.routine.effects.map((effect, index) => {\r\n                                            return (\r\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\r\n                                                    {\r\n                                                        effect.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    effect.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\r\n                        <Fade in={this.state.modalTrigger} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New Trigger\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <Action setState={this.setState.bind(this)} action={setting} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\r\n                                            <InputLabel>Condition</InputLabel>\r\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\r\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\r\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\r\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\r\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\r\n                        <Fade in={this.state.modalEffect} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New effect\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <Action setState={this.setState.bind(this)} action={setting} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewRoutine","import React from 'react'\r\nimport { Popover, InputAdornment, FormControlLabel, Modal, Fade, Select, MenuItem, Checkbox, Slider, FormControl, InputLabel, Card, Typography, Button, TextField, IconButton, Paper } from '@material-ui/core'\r\nimport { Save, Add, List, Cached } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\nimport Action from '../../../components/Action'\r\nimport Theme from '../../../Theme'\r\nimport IconList from '../../../components/IconList'\r\nimport WeekSchedul from '../../../components/WeekSchedul'\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    backgroundColor: Theme.palette.background.paper,\r\n    padding: 10,\r\n    borderRadius: 5\r\n}\r\n\r\nclass NewRoutine extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            popup: false,\r\n            id: props.match.params.id,\r\n            enabled: false,\r\n            message: \"\",\r\n            routine: null,\r\n            sources: [],\r\n            modalTrigger: false,\r\n            modalEffect: false,\r\n            mode: \"counter\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultSource = await Source.getSource([\"smartobject\", \"process\", \"module\"])\r\n        let result = await new Request().get().fetch(\"/api/routines/\" + this.state.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({mode: result.data.mode, routine: result.data, sources: resultSource.data })\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ action: null, source: null, result: null, statement: null, expected: null })\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) { this.setState({ action: action }) }\r\n        })\r\n    }\r\n\r\n    updateIcon(icon) {\r\n        let routine = this.state.routine\r\n        routine.icon = icon\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateName(name) {\r\n        let routine = this.state.routine\r\n        routine.name = name\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    updateWatch(watch) {\r\n        let routine = this.state.routine\r\n        routine.watch = watch\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    addTrigger() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.triggers.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings,\r\n                result: this.state.result,\r\n                statement: this.state.statement,\r\n                expected: this.state.expected\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalTrigger: false,\r\n                action: null,\r\n                source: null,\r\n                result: null,\r\n                statement: null,\r\n                expected: null\r\n            })\r\n        }\r\n    }\r\n\r\n    addEffect() {\r\n        if (this.state.source == null) {\r\n            this.setState({ enabled: true, message: \"Missing source\" })\r\n        } else if (this.state.action == null) {\r\n            this.setState({ enabled: true, message: \"Missing action\" })\r\n        } else {\r\n            let settings = []\r\n            for (let index = 0; index < this.state.action.settings.length; index++) {\r\n                let setting = this.state.action.settings[index];\r\n                let value = this.state[\"argument-\" + setting.id]\r\n                if (value == undefined) {\r\n                    value = setting.default\r\n                }\r\n                settings.push({ reference: setting.id, value: value })\r\n            }\r\n            let routine = this.state.routine\r\n            routine.effects.push({\r\n                source: this.state.source.id,\r\n                type: this.state.source.type,\r\n                action: this.state.action.id,\r\n                arguments: settings\r\n            })\r\n            this.setState({\r\n                routine: routine,\r\n                modalEffect: false,\r\n                action: null,\r\n                source: null\r\n            })\r\n        }\r\n    }\r\n\r\n    removeTrigger(pIndex) {\r\n        let routine = this.state.routine\r\n        let triggers = routine.triggers.filter((trigger, index) => { return index != pIndex })\r\n        routine.triggers = triggers\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    removeEffect(pIndex) {\r\n        let routine = this.state.routine\r\n        let effects = routine.effects.filter((effect, index) => { return index != pIndex })\r\n        routine.effects = effects\r\n        this.setState({ routine: routine })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.routine.name.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing name\" })\r\n        } else if (this.state.routine.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing icon\" })\r\n        } else if (this.state.routine.effects.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing effect\" })\r\n        } else {\r\n            let result = await new Request().put({\r\n                name: this.state.routine.name,\r\n                watch: this.state.routine.watch.toString(),\r\n                icon: this.state.routine.icon,\r\n                triggers: this.state.routine.triggers,\r\n                effects: this.state.routine.effects,\r\n                mode: this.state.mode\r\n            }).fetch('/api/routines/' + this.state.id)\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/routine/')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.routine) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <TextField onChange={(event) => { this.updateName(event.nativeEvent.target.value) }} style={{ width: '49%' }} value={this.state.routine.name} label=\"Name\" variant='outlined'></TextField>\r\n                                <TextField onChange={(event) => { this.updateIcon(event.nativeEvent.target.value) }} value={this.state.routine.icon} label=\"Icon\" variant='outlined' style={{ width: '49%' }} \r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                                <List />\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                ></TextField>\r\n                            \r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top',  horizontal: 'center', }}\r\n                            transformOrigin={{  vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ popup: false }); this.updateIcon(icon)}} />\r\n                        </Popover>\r\n                            \r\n                            </div>\r\n                            {\r\n                                this.state.mode == 'counter' ?\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <div style={{ display: 'flex', paddingTop: 15, paddingBottom: 15, paddingLeft: 15, paddingRight: 15 }}>\r\n                                            <div style={{ flex: 1 }}>\r\n                                                <IconButton size='small' onClick={() => { this.setState({ mode: 'week' }) }} variant='outlined'>\r\n                                                    <Cached />\r\n                                                </IconButton>\r\n                                            </div>\r\n                                            <div style={{ display: 'flex', flex: 15, justifyContent: 'center' }}>\r\n                                                <Slider\r\n                                                    defaultValue={0}\r\n                                                    valueLabelDisplay=\"auto\"\r\n                                                    orientation={'horizontal'}\r\n                                                    min={0}\r\n                                                    max={1440}\r\n                                                    step={1}\r\n                                                    value={this.state.routine.watch}\r\n                                                    onChange={(event, value) => { this.updateWatch(value) }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> :\r\n                                    <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, marginRight: 10, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <WeekSchedul onChange={(value) => { this.updateWatch(value) }} onChangeMode={() => { this.setState({ mode: 'counter' }) }} />\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                        <div style={{ flexDirection: 'row', display: 'flex', marginTop: 20 }}>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\"  >Trigger</Typography>\r\n\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>   {\r\n                                    this.state.routine.triggers.map((trigger, index) => {\r\n                                        return (\r\n                                            <div onClick={() => this.removeTrigger(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                <div  >\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + trigger.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + trigger.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + trigger.action}</Typography>\r\n                                                    {\r\n                                                        trigger.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    trigger.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                                {\r\n                                                    trigger.result && trigger.statement && trigger.expected ?\r\n                                                        <div>\r\n                                                            <Typography variant=\"body2\"  >{\"Pour condition\"}</Typography>\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                <Typography variant=\"body2\"  >{\"Resultat : \" + trigger.result}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Condition : \" + trigger.statement}</Typography>\r\n                                                                <Typography variant=\"body2\"  >{\"Expected : \" + trigger.expected}</Typography>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalTrigger: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                            <div style={{ flex: 1, padding: 5 }} >\r\n                                <Typography variant=\"subtitle1\" >Effect</Typography>\r\n                                <Card style={{ textTransform: 'none', padding: 15, marginTop: 5, marginRight: 10, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content' }}>\r\n                                    {\r\n                                        this.state.routine.effects.map((effect, index) => {\r\n                                            return (\r\n                                                <div onClick={() => this.removeEffect(index)} style={{ textTransform: 'none', padding: 15, marginTop: 5, borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', height: 'min-content', marginBottom: 10 }}>\r\n                                                    <Typography variant=\"body2\"  >{\"Type : \" + effect.type} </Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Reference : \" + effect.source}</Typography>\r\n                                                    <Typography variant=\"body2\"  >{\"Action : \" + effect.action}</Typography>\r\n                                                    {\r\n                                                        effect.arguments.length > 0 ?\r\n                                                            <div style={{ marginLeft: 20 }}>\r\n                                                                {\r\n                                                                    effect.arguments.map(setting => {\r\n                                                                        return (\r\n                                                                            <Typography variant=\"body2\"  >{setting.reference + \" : \" + setting.value} </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </div> : null\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <Button onClick={() => { this.reset(); this.setState({ modalEffect: true }) }} style={{ width: '100%', borderStyle: 'solid', borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                        <Add />\r\n                                    </Button>\r\n                                </Card>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                        <IconButton onClick={() => { this.save() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                            <Save />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                    <Modal open={this.state.modalTrigger} onClose={() => { this.reset(); this.setState({ modalTrigger: false }) }} >\r\n                        <Fade in={this.state.modalTrigger} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New Trigger\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <Action setState={this.setState.bind(this)} action={setting} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Result\"} value={this.state.result} onChange={(event) => { this.setState({ result: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                        <FormControl variant=\"outlined\" style={{ marginBottom: 5, marginTop: 5, flex: 1 }} >\r\n                                            <InputLabel>Condition</InputLabel>\r\n                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.statement} onChange={(event) => { this.setState({ statement: event.target.value }) }} label=\"Source\" >\r\n                                                <MenuItem value={\"equal\"} >{\"=\"}</MenuItem>\r\n                                                <MenuItem value={\"smaller\"} >{\"<\"}</MenuItem>\r\n                                                <MenuItem value={\"bigger\"} >{\">\"}</MenuItem>\r\n                                                <MenuItem value={\"different\"} >{\"<>\"}</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <div style={{ marginBottom: 10, marginTop: 10, flex: 1 }} >\r\n                                            <TextField variant=\"outlined\" placeholder={\"Expected\"} value={this.state.expected} onChange={(event) => { this.setState({ expected: event.currentTarget.value }) }} style={{ width: '100%' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Button onClick={() => { this.addTrigger() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                    <Modal open={this.state.modalEffect} onClose={() => { this.reset(); this.setState({ modalEffect: false }) }} >\r\n                        <Fade in={this.state.modalEffect} >\r\n                            <Paper style={style}>\r\n                                <div style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <Typography variant='h5' >\r\n                                        New effect\r\n                                    </Typography>\r\n                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                        <InputLabel>Source</InputLabel>\r\n                                        <Select placeholder='Source' style={{ width: '100%' }} value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                            {\r\n                                                this.state.sources.map(source => {\r\n                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        this.state.source ?\r\n                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5 }} >\r\n                                                <InputLabel>Action</InputLabel>\r\n                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                    {\r\n                                                        this.state.source.actions.map(action => {\r\n                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                        })\r\n                                                    }\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                            <div style={{ marginBottom: 10, marginTop: 10, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)' }}>\r\n                                                <div style={{ display: 'flex', flexDirection: 'column', paddingTop: 10, paddingBottom: 10 }}>\r\n                                                    {\r\n                                                        this.state.action.settings.map(setting => {\r\n                                                            return <Action setState={this.setState.bind(this)} action={setting} />\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            : null\r\n                                    }\r\n                                    <Button onClick={() => { this.addEffect() }} variant='outlined' style={{ width: 'minContent', marginTop: 5 }}>\r\n                                        Save\r\n                                    </Button>\r\n                                </div>\r\n                            </Paper>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default NewRoutine","import React from 'react'\r\nimport { Paper, TableBody, TableContainer, TableHead, TableCell, Table, TableRow, TablePagination, Typography } from '@material-ui/core'\r\nimport md5 from 'md5'\r\nimport { Link } from \"react-router-dom\"\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Module extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            modules: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        if (resultModule.error) {\r\n            this.setState({ enabled: true, message: resultModule.code + \" : \" + resultModule.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Identifiant\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.modules.slice(this.state.page * 10, (this.state.page + 1) * 10).map((pmodule) => (\r\n                                <Link to={\"/module/\" + md5(pmodule.id)} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                    <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {pmodule.id}\r\n                                            </Typography>\r\n                                        </TableCell><TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {pmodule.name}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Link>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignContent: 'center', alignItems: 'center' }}>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.modules.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Module","import React from 'react'\r\nimport md5 from 'md5'\r\nimport JSONPretty from 'react-json-pretty'\r\n\r\nimport { Alert } from '@material-ui/lab'\r\nimport { Close } from '@material-ui/icons'\r\nimport { Paper, Typography, Divider, Button, IconButton } from '@material-ui/core'\r\n\r\nimport AlertComponent from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Detail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hashId: props.match.params.id,\r\n            module: null,\r\n            loading: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            executeInformation: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/configurations/module\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n            this.props.history.push('/module')\r\n        } else {\r\n            let _module = false\r\n            result.data.forEach(pModule => {\r\n                if (md5(pModule.id) == this.state.hashId) {\r\n                    _module = pModule\r\n                }\r\n            })\r\n            if (_module) {\r\n                this.setState({\r\n                    module: _module\r\n                })\r\n            } else {\r\n                this.props.history.push('/module')\r\n            }\r\n        }\r\n    }\r\n\r\n    async executeAction(action, settings) {\r\n        let tmp = {}\r\n        for (let index = 0; index < settings.length; index++) {\r\n            let argument = settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmp[argument.id] = value\r\n        }\r\n        let result = await new Request().post({ settings: tmp, reference: this.state.module.reference }).fetch(\"/api/modules/\" + md5(this.state.module.id) + \"/actions/\" + action)\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n        } else {\r\n            if (result.data) {\r\n                this.setState({\r\n                    executeInformation: JSON.stringify(result.data)\r\n                })\r\n            }\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.module) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' >\r\n                                {this.state.module.id}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.module.module}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            {\r\n                                this.state.module.actions.map(action => {\r\n                                    return (\r\n                                        <Paper style={{ marginTop: 10, marginBottom: 10, display: 'flex', flexDirection: 'column', padding: 10 }}>\r\n                                            <Button onClick={() => { this.executeAction(action.id, action.settings) }} variant='outlined' style={{ width: '250px', height: '100%' }} >\r\n                                                {action.name}\r\n                                            </Button>\r\n                                            {\r\n                                                action.settings.length > 0 ?\r\n                                                    <div style={{ display: 'flex', flexDirection: 'row', marginTop: 10, marginBottom: 10 }}>\r\n                                                        {\r\n                                                            action.settings.map(setting => {\r\n                                                                return <Action orientation={'vertical'} setState={this.setState.bind(this)} action={setting} />\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                    : null\r\n                                            }\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.state.executeInformation.length > 0 ?\r\n                                <div style={{ padding: 10 }}>\r\n                                    <Alert severity=\"success\" action={\r\n                                        <IconButton onClick={() => { this.setState({ executeInformation: \"\" }) }} style={{ alignSelf: 'start' }} color=\"inherit\" size=\"small\">\r\n                                            <Close />\r\n                                        </IconButton>\r\n                                    }>\r\n                                        <JSONPretty id=\"json-pretty\" data={JSON.parse(this.state.executeInformation)}></JSONPretty>\r\n                                    </Alert>\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Paper>\r\n                    <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        { this.state.message }\r\n                    </AlertComponent>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <AlertComponent onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </AlertComponent>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail","import React from 'react'\r\nimport {IconButton, Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead } from '@material-ui/core'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Category, DevicesOther, Store } from '@material-ui/icons'\r\n\r\nclass Configuration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            pageSmartobject: 0,\r\n            pageModule: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            modules: [],\r\n            smartobjects: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        if (resultModule.error) {\r\n            this.setState({ enabled: true, message: resultModule.code + \" : \" + resultModule.message })\r\n        } else if (resultSmartobject.error) {\r\n            this.setState({ enabled: true, message: resultSmartobject.code + \" : \" + resultSmartobject.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", modules: resultModule.data, smartobjects: resultSmartobject.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Identifiant\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.smartobjects.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\r\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.id}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center'}}>\r\n                <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/market/module\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Store />\r\n                                </IconButton>\r\n                            </Link>\r\n                            </Paper>\r\n                    </div>\r\n                        <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.smartobjects.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.pageSmartobject}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ pageSmartobject: page }) }}\r\n                    />\r\n                </div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Identifiant\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.modules.slice(this.state.pageSmartobject * 10, (this.state.pageSmartobject + 1) * 10).map((pmodule) => (\r\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.id}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.name}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/market/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <IconButton style={{ borderRadius: 0 }}>\r\n                                    {this.state.id != \"smartobject\" ? <DevicesOther/> : <Category />}\r\n                                </IconButton>\r\n                            </Link>\r\n                            </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.modules.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.pageModule}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ pageModule: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Configuration","import React from 'react'\r\nimport { IconButton, Typography, TablePagination, TableRow, Table, TableCell, TableContainer, TableBody, Paper, TableHead, Button } from '@material-ui/core'\r\n\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Category, DevicesOther, Close, GetApp } from '@material-ui/icons'\r\n\r\nclass Configuration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: props.match.params.id,\r\n            enabled: false,\r\n            message: \"\",\r\n            markets: [],\r\n            pageMarket: 0,\r\n            severity: \"error\"\r\n        }\r\n    }\r\n\r\n    async install(pPackage) {\r\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/install\")\r\n        if (result.error) {\r\n            this.setState({ severity: \"error\",enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({severity: \"info\", enabled: true, message: pPackage + \" was installed\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async uninstall(pPackage) {\r\n        let result = await new Request().post({ package: pPackage }).fetch(\"/api/markets/uninstall\")\r\n        if (result.error) {\r\n            this.setState({severity: \"error\", enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({severity: \"info\", enabled: true, message: pPackage + \" was removed\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.match.params.id != this.state.id) {\r\n            this.setState({\r\n                id: this.props.match.params.id\r\n            }, () => { this.componentDidMount() })\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultModule = await new Request().get().fetch(\"/api/configurations/module\")\r\n        let resultSmartobject = await new Request().get().fetch(\"/api/configurations/smartobject\")\r\n        let result = await fetch(\"https://market.intendant.io\")\r\n        let resultMarket = await result.json()\r\n        resultMarket = resultMarket.map(market => {\r\n            market.alreadyInstall = false\r\n            return market\r\n        })\r\n        resultModule.data.forEach(pModule => {\r\n            resultMarket = resultMarket.map(market => {\r\n                if (market.package == pModule.id) {\r\n                    market.alreadyInstall = true\r\n                }\r\n\r\n                return market\r\n            })\r\n        })\r\n        resultSmartobject.data.forEach(pModule => {\r\n            resultMarket = resultMarket.map(market => {\r\n                if (market.package == pModule.id) {\r\n                    market.alreadyInstall = true\r\n                }\r\n\r\n                return market\r\n            })\r\n        })\r\n        this.setState({ markets: resultMarket.filter(market => { return market.type == this.state.id }) })\r\n        if (resultModule.error) {\r\n            this.setState({ severity: \"error\",enabled: true, message: resultModule.code + \" : \" + resultModule.message })\r\n        } else if (resultSmartobject.error) {\r\n            this.setState({ severity: \"error\",enabled: true, message: resultSmartobject.code + \" : \" + resultSmartobject.message })\r\n        } else {\r\n            this.setState({ modules: resultModule.data, smartobjects: resultSmartobject.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Name\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Typography variant='body1'>\r\n                                        Dependencies\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell align='center'>\r\n                                    <Typography variant='body1'>\r\n                                        Action\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.markets.slice(this.state.pageMarket * 10, (this.state.pageMarket + 1) * 10).map((pmodule) => (\r\n                                <TableRow hover key={pmodule.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            {pmodule.name}\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"left\">\r\n                                        <Typography variant='body1'>\r\n                                            None\r\n                                        </Typography>\r\n                                    </TableCell><TableCell align=\"center\">\r\n                                        <Typography variant='body1'>\r\n                                            {\r\n                                                pmodule.alreadyInstall ?\r\n                                                    <Button size='small' startIcon={<Close />} onClick={() => {this.uninstall(pmodule.package)}} variant=\"outlined\" >\r\n                                                        Remove\r\n                                                    </Button>\r\n                                                    :\r\n                                                    <Button size='small' startIcon={<GetApp />} onClick={() => {this.install(pmodule.package)}} variant=\"outlined\" disableElevation  >\r\n                                                        Install\r\n                                                    </Button>\r\n                                            }\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to={this.state.id == \"smartobject\" ? \"/market/module\" : \"/market/smartobject\"} style={{ textDecoration: 'none', color: 'white' }}>\r\n                                <IconButton style={{ borderRadius: 0 }}>\r\n                                    {this.state.id != \"smartobject\" ? <DevicesOther /> : <Category />}\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.markets.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.pageMarket}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ pageMarket: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={this.state.severity}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Configuration","import React from 'react'\r\nimport { Add } from '@material-ui/icons'\r\nimport { Typography, Paper, TableBody, TableContainer , TableHead ,TableCell, Table, TableRow, TablePagination, IconButton  } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\"\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass Widget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            widgets: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/widgets\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", widgets: result.data })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableBody>\r\n                            {this.state.widgets.slice(this.state.page * 10, (this.state.page + 1) * 10).map((widget) => (\r\n                                <Link to={\"/widget/\" + widget.id} style={{ textDecoration: 'none', color: 'white', display: 'contents' }}>\r\n                                    <TableRow hover key={widget.reference} style={{ cursor: 'pointer' }}>\r\n                                    <TableCell align=\"left\">\r\n                                        <img style={{ width: 30, height: 30, filter: 'invert(100%)'  }} src={process.env.PUBLIC_URL + \"/ressource/icon/\" + widget.icon + \".svg\"} />\r\n                                    </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {widget.reference}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map(content => {\r\n                                                return content.content.split(\"\\n\").map(_content => {\r\n                                                    return (\r\n                                                        <Typography variant='body1' style={{ fontWeight: content.type.reference == 'title' ? 'bold' : 'normal' }}>\r\n                                                            {_content}\r\n                                                        </Typography>\r\n                                                    )\r\n                                                })\r\n                                            })}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Typography variant='body1'>\r\n                                                {widget.icon}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </Link>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n                        <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                            <Link to=\"/widget/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                <IconButton style={{ borderRadius: 0 }}>\r\n                                    <Add />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Paper>\r\n                    </div>\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={this.state.widgets.length}\r\n                        rowsPerPage={10}\r\n                        page={this.state.page}\r\n                        rowsPerPageOptions={[]}\r\n                        onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                    />\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    { this.state.message }\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Widget","import React from 'react'\r\nimport Alert from '../../../components/Alert'\r\nimport Action from '../../../components/Action'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nimport { Popover, InputAdornment, TableRow, Table, MenuItem, FormControl, TableCell, IconButton, Typography, InputLabel, Button, TextField, Paper, TableBody, TableContainer, TableHead, Divider, Select } from '@material-ui/core'\r\nimport { Close, Add, List } from '@material-ui/icons'\r\nimport IconList from '../../../components/IconList'\r\n\r\nclass NewWidget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            popup: false,\r\n            content: null,\r\n            description: \"\",\r\n            image: \"\",\r\n            sources: [],\r\n            contentSources: [],\r\n            source: null,\r\n            action: null,\r\n            widgetReference: \"\",\r\n            reference: \"\",\r\n            icon: \"\",\r\n            type: \"title\",\r\n            types: [],\r\n            contents: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/smartobjects\")\r\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\r\n        let resultSource = await Source.getSource([\"smartobject\",\"module\"])\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else if (resultConfiguration.error) {\r\n            this.setState({ enabled: true, message: resultConfiguration.code + \" : \" + resultConfiguration.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", loading: false, sources: resultSource.data, type: false, types: resultConfiguration.data.contents.types })\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) {\r\n                this.setState({ action: action })\r\n            }\r\n        })\r\n    }\r\n\r\n    setType(id) {\r\n        this.state.types.map(type => {\r\n            if (type.id == id) {\r\n                this.setState({ type: type })\r\n            }\r\n        })\r\n    }\r\n\r\n    async save() {\r\n        if (this.state.widgetReference.length == 0 || this.state.contentSources.length == 0 || this.state.icon.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let authorization = localStorage.getItem(\"authorization\")\r\n        let server = localStorage.getItem(\"server\")\r\n        let result = await fetch(server + \"/api/widgets\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + authorization\r\n            },\r\n            body: JSON.stringify({\r\n                reference: this.state.widgetReference,\r\n                sources: this.state.contentSources,\r\n                contents: this.state.contents,\r\n                icon: this.state.icon\r\n            })\r\n        })\r\n        let resultJSON = await result.json()\r\n        if (resultJSON.error) {\r\n            this.setState({ enabled: true, message: resultJSON.code + \" : \" + resultJSON.message })\r\n        } else {\r\n            this.props.history.push('/widget')\r\n        }\r\n    }\r\n\r\n\r\n    insertContent() {\r\n        let contents = this.state.contents\r\n        contents.push({ type: this.state.type, content: this.state.content })\r\n        this.setState({ contents: contents, content: \"\" })\r\n    }\r\n\r\n    insertSource() {\r\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let find = false\r\n        let contentSources = this.state.contentSources\r\n        contentSources.forEach(contentSource => {\r\n            if (contentSource.reference == this.state.reference) {\r\n                find = true\r\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\r\n            }\r\n        })\r\n        if (find) {\r\n            return\r\n        }\r\n        let tmpsettings = []\r\n        let action = this.state.action\r\n        for (let index = 0; index < action.settings.length; index++) {\r\n            let argument = action.settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmpsettings.push({ reference: argument.id, value: value })\r\n        }\r\n        contentSources.push({\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: tmpsettings,\r\n            reference: this.state.reference\r\n        })\r\n        this.setState({\r\n            contentSources: contentSources,\r\n            action: null,\r\n            source: null,\r\n            reference: \"\"\r\n        })\r\n    }\r\n\r\n    delete(index) {\r\n        let contents = []\r\n        this.state.contents.forEach((content, pindex) => {\r\n            if (pindex != index) { contents.push(content) }\r\n        })\r\n        this.setState({ contents: contents })\r\n    }\r\n\r\n    deleteContent(index) {\r\n        let contentSources = []\r\n        this.state.contentSources.forEach((content, pindex) => {\r\n            if (pindex != index) { contentSources.push(content) }\r\n        })\r\n        this.setState({ contentSources: contentSources })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, marginBottom: 10, justifyContent: 'left' }}>\r\n                    <div style={{ padding: 10 }}>\r\n                        <Typography variant='h4' > Widget </Typography>\r\n                    </div>\r\n                    <Divider />\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <TextField\r\n                            onChange={(event) => { this.setState({ widgetReference: event.target.value }) }}\r\n                            multiline\r\n                            value={this.state.widgetReference}\r\n                            label=\"Reference\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            style={{ marginLeft: 10 }}\r\n                            onChange={(event) => { this.setState({ icon: event.target.value }) }}\r\n                            multiline\r\n                            value={this.state.icon}\r\n                            label=\"Icon\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={() => { this.setState({ popup: true }) }} style={{ margin: 0, padding: 0 }}>\r\n                                            <List />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                        <Popover\r\n                            open={this.state.popup}\r\n                            onClose={() => { this.setState({ popup: false }) }}\r\n                            anchorOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                            transformOrigin={{ vertical: 'top', horizontal: 'center', }}\r\n                        >\r\n                            <IconList onSelect={(icon) => { this.setState({ popup: false, icon: icon }) }} />\r\n\r\n                        </Popover>\r\n                    </div>\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <Typography variant='h5' > Source </Typography>\r\n                        <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align='left'>\r\n                                                <Typography variant='subtitle1'> Source </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='subtitle1'> Argument </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            this.state.contentSources.map((contentSource, index) => {\r\n                                                return (\r\n                                                    <TableRow >\r\n                                                        <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                            <Typography variant='subtitle1'> {contentSource.reference} </Typography>\r\n                                                            <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\r\n                                                            <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"left\">\r\n                                                            <Typography variant='subtitle1'>\r\n                                                                {JSON.stringify(contentSource.arguments)}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">\r\n                                                            <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\r\n                                                                <Close />\r\n                                                            </IconButton>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        <TableRow  >\r\n                                            <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.setState({ reference: event.target.value }) }}\r\n                                                    style={{ width: '100%' }}\r\n                                                    multiline\r\n                                                    value={this.state.reference}\r\n                                                    label=\"Reference\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                                <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                    <InputLabel>Source</InputLabel>\r\n                                                    <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                                        {\r\n                                                            this.state.sources.map(source => {\r\n                                                                return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                                {\r\n                                                    this.state.source ?\r\n                                                        <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                            <InputLabel>Action</InputLabel>\r\n                                                            <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                                {\r\n                                                                    this.state.source.actions.map(action => {\r\n                                                                        return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" style={{ width: '40%' }}>\r\n                                                {\r\n                                                    this.state.action && this.state.action.settings.length > 0 ?\r\n                                                        <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\r\n                                                            <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\r\n                                                                {\r\n                                                                    this.state.action.settings.map(setting => {\r\n                                                                        return <Action orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                        <Typography variant='h5' > Content </Typography>\r\n                        <div style={{ marginTop: 10, marginBottom: 10 }}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align='left'>\r\n                                                <Typography variant='subtitle1'> Type </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <Typography variant='subtitle1'> Affichage </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.contents.sort((a, b) => { return a.type.rank > b.type.rank }).map((content, index) => (\r\n                                            <TableRow >\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1'> {content.type.name} </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1'> {content.content} </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.delete(index) }} style={{ borderRadius: 2 }}>\r\n                                                        <Close />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        <TableRow  >\r\n                                            <TableCell align=\"left\">\r\n                                                <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\r\n                                                    <InputLabel>Type</InputLabel>\r\n                                                    <Select value={this.state.type.id} onChange={(event) => { this.setType( event.target.value ) }} label=\"Type\" >\r\n                                                        {\r\n                                                            this.state.types.map(type => {\r\n                                                                return <MenuItem value={type.id} >{type.name}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <TextField\r\n                                                    onChange={(event) => { this.setState({ content: event.target.value }) }}\r\n                                                    style={{ width: '100%' }}\r\n                                                    multiline\r\n                                                    value={this.state.content}\r\n                                                    label=\"Name\"\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <IconButton onClick={() => { this.insertContent() }} style={{ borderRadius: 2 }}>\r\n                                                    <Add />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </div>\r\n                    </div>\r\n                    <Button style={{ marginTop: 5, marginBottom: 5 }} onClick={() => { this.save() }} variant='outlined'>\r\n                        Save\r\n                    </Button>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewWidget","import React from 'react'\r\nimport Action from '../../../components/Action'\r\nimport { FormControl, Select, InputLabel, MenuItem, Paper, Typography, Divider, IconButton, TextField, TableCell, TableBody, TableContainer, TableHead, Table, TableRow } from '@material-ui/core'\r\nimport { Close, Add, Delete, ArrowUpward, ArrowDownward } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\nimport Source from '../../../utils/Source'\r\n\r\nclass Widget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            id: props.match.params.id,\r\n            contentSources: [],\r\n            reference: '',\r\n            source: null,\r\n            action: null,\r\n            type: \"title\",\r\n            content: \"\",\r\n            sources: [],\r\n            types: [],\r\n            widget: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/widgets/\" + this.state.id)\r\n        let resultConfiguration = await new Request().get().fetch(\"/api/configurations/widget\")\r\n        let resultSource = await Source.getSource([\"smartobject\", \"module\"])\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else if (resultSource.error) {\r\n            this.setState({ enabled: true, message: resultSource.code + \" : \" + resultSource.message })\r\n        } else if (resultConfiguration.error) {\r\n            this.setState({ enabled: true, message: resultConfiguration.code + \" : \" + resultConfiguration.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", loading: false, widget: result.data, sources: resultSource.data, types: resultConfiguration.data.contents.types})\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        let result = await new Request().delete({}).fetch(\"/api/widgets/\" + this.state.widget.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.props.history.push('/widget')\r\n        }\r\n    }\r\n\r\n    async deleteSource(source) {\r\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.widget.id + \"/sources/\" + source)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async insertSource() {\r\n        if (this.state.action == null || this.state.source == null || this.state.reference.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing parameters\" })\r\n            return\r\n        }\r\n        let find = false\r\n        this.state.widget.sources.forEach(contentSource => {\r\n            if (contentSource.reference == this.state.reference) {\r\n                find = true\r\n                this.setState({ enabled: true, message: \"Duplicate reference\" })\r\n            }\r\n        })\r\n        if (find) {\r\n            return\r\n        }\r\n        let tmpsettings = []\r\n        let action = this.state.action\r\n        for (let index = 0; index < action.settings.length; index++) {\r\n            let argument = action.settings[index];\r\n            let value = this.state[\"argument-\" + argument.id]\r\n            if (value == undefined) {\r\n                value = argument.default\r\n            }\r\n            tmpsettings.push({ reference: argument.id, value: value })\r\n        }\r\n        let result = await new Request().post({\r\n            source: this.state.source,\r\n            action: this.state.action,\r\n            arguments: tmpsettings,\r\n            reference: this.state.reference\r\n        }).fetch(\"/api/widgets/\" + this.state.id + \"/sources\")\r\n\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ action: null, source: null, reference: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    setSource(id) {\r\n        this.state.sources.map(source => {\r\n            if (source.id == id) { this.setState({ source: source, action: null }) }\r\n        })\r\n    }\r\n\r\n\r\n    setAction(id) {\r\n        this.state.source.actions.map(action => {\r\n            if (action.id == id) {\r\n                this.setState({ action: action })\r\n            }\r\n        })\r\n    }\r\n\r\n    async setContent() {\r\n        let result = await new Request().post({type: this.state.type, content: this.state.content}).fetch(\"/api/widgets/\" + this.state.id + \"/contents\")\r\n        if(result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ content: \"\" })\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async deleteContent(id) {\r\n        let result = await new Request().delete().fetch(\"/api/widgets/\" + this.state.id + \"/contents/\" + id)\r\n        if(result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async update(content) {\r\n        let widget = this.state.widget\r\n        let contents = widget.contents.map(pContent => {\r\n            if (pContent.id == content.id) {\r\n                pContent.native = content.native\r\n            }\r\n            return pContent\r\n        })\r\n        widget.contents = contents\r\n        this.setState({ widget: widget })\r\n        let result = await new Request().put({ content: content }).fetch(\"/api/widgets/\" + this.state.widget.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.widget) {\r\n            return (\r\n                <div>\r\n                    <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                        <div style={{ padding: 10 }}>\r\n                            <Typography variant='h4' style={{ fontSize: 25 }}>\r\n                                {this.state.widget.reference}\r\n                            </Typography>\r\n                            <Typography variant='subtitle1' >\r\n                                {this.state.widget.icon}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Source\r\n                            </Typography>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align='left' >\r\n                                                    <Typography variant='subtitle1'>Reference</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left'>\r\n                                                    <Typography variant='subtitle1' >Source</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='subtitle1' >Argument</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.widget.sources.map((source, index) => {\r\n                                                    return (\r\n                                                        <TableRow >\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.reference}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\">\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.object}\r\n                                                                </Typography>\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {source.action}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {\r\n                                                                        source.arguments.map(argument => {\r\n                                                                            return (\r\n                                                                                <Typography variant='body1'>{argument.reference + \" : \" + argument.value}</Typography>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteSource(source.id) }} style={{ borderRadius: 3 }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.contentSources.map((contentSource, index) => {\r\n                                                    return (\r\n                                                        <TableRow >\r\n                                                            <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                                <Typography variant='subtitle1'> {contentSource.reference} </Typography>\r\n                                                                <Typography variant='subtitle1'> {contentSource.source.name} </Typography>\r\n                                                                <Typography variant='subtitle1'> {contentSource.action.name} </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\">\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {JSON.stringify(contentSource.arguments)}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteContent(index) }} style={{ borderRadius: 2 }}>\r\n                                                                    <Close />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <TableRow  >\r\n                                                <TableCell align=\"left\" style={{ width: '30%' }}>\r\n                                                    <TextField\r\n                                                        onChange={(event) => { this.setState({ reference: event.target.value }) }}\r\n                                                        style={{ width: '100%' }}\r\n                                                        multiline\r\n                                                        value={this.state.reference}\r\n                                                        label=\"Reference\"\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                    <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                        <InputLabel>Source</InputLabel>\r\n                                                        <Select placeholder='Source' value={this.state.source ? this.state.source.id : null} onChange={(event) => { this.setSource(event.target.value) }} label=\"Source\" >\r\n                                                            {\r\n                                                                this.state.sources.map(source => {\r\n                                                                    return <MenuItem value={source.id} >{source.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                    {\r\n                                                        this.state.source ?\r\n                                                            <FormControl variant=\"outlined\" style={{ marginTop: 5, marginBottom: 5, width: '100%' }} >\r\n                                                                <InputLabel>Action</InputLabel>\r\n                                                                <Select placeholder='Action' style={{ width: '100%' }} value={this.state.action ? this.state.action.id : null} onChange={(event) => { this.setAction(event.target.value) }} label=\"Source\" >\r\n                                                                    {\r\n                                                                        this.state.source.actions.map(action => {\r\n                                                                            return <MenuItem value={action.id} >{action.name}</MenuItem>\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Select>\r\n                                                            </FormControl>\r\n                                                            : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ width: '40%' }}>\r\n                                                    {\r\n                                                        this.state.action && this.state.action.settings.length > 0 ?\r\n                                                            <div style={{ marginLeft: 5, marginBottom: 5, marginTop: 5, borderStyle: 'solid', paddingLeft: 10, paddingRight: 10, borderRadius: 3, borderWidth: 0.25, borderColor: 'rgba(255, 255, 255, 0.23)', width: '100%' }}>\r\n                                                                <div style={{ display: 'flex', paddingTop: 10, paddingBottom: 10, flexDirection: 'column' }}>\r\n                                                                    {\r\n                                                                        this.state.action.settings.map(setting => {\r\n                                                                            return <Action orientation='horizontal' setState={this.setState.bind(this)} action={setting} />\r\n                                                                        })\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.insertSource() }} style={{ borderRadius: 2 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ padding: 10, paddingBottom: 0 }}>\r\n                            <Typography variant='h5' >\r\n                                Content\r\n                            </Typography>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', paddingTop: 10 }} >\r\n                                <TableContainer component={Paper}>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align='left' style={{width: '15%'}} >\r\n                                                    <Typography variant='subtitle1'>Type</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left' style={{ width: '80%' }}>\r\n                                                    <Typography variant='subtitle1' >content</Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align='left' style={{width: '20%'}}>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {\r\n                                                this.state.widget.contents.sort((a,b) => { return a.type.rank > b.type.rank }).map((content, index) => {\r\n                                                    return (\r\n                                                        <TableRow >\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <Typography variant='subtitle1'>\r\n                                                                    {content.type.name}\r\n                                                                </Typography>\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"left\" >\r\n                                                                <TextField\r\n                                                                    style={{ width: '100%', marginBottom: 5 }}\r\n                                                                    onChange={(event) => { content.native = event.target.value; this.update(content) }}\r\n                                                                    multiline\r\n                                                                    value={content.native}\r\n                                                                    variant=\"outlined\"\r\n                                                                />\r\n                                                                {\r\n                                                                    content.content.split(\"\\n\").map(_content => {\r\n                                                                        return (\r\n                                                                            <Typography variant='body1' style={{ fontWeight: _content.type == 'title' ? 'bold' : 'normal' }}>\r\n                                                                                {_content}\r\n                                                                            </Typography>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">\r\n                                                                <IconButton onClick={() => { this.deleteContent(content.id) }} style={{ borderRadius: 3 }}>\r\n                                                                    <Delete />\r\n                                                                </IconButton>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <TableRow  >\r\n                                                <TableCell align=\"left\">\r\n                                                    <FormControl variant=\"outlined\" style={{ marginRight: 10, width: '100%' }} >\r\n                                                        <InputLabel>Type</InputLabel>\r\n                                                        <Select value={this.state.type} onChange={(event) => { this.setState({ type: event.target.value }) }} label=\"Type\" >\r\n                                                            {\r\n                                                                this.state.types.map(type => {\r\n                                                                    return <MenuItem value={type.id} >{type.name}</MenuItem>\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <TextField\r\n                                                        onChange={(event) => { this.setState({ content: event.target.value }) }}\r\n                                                        style={{ width: '100%' }}\r\n                                                        multiline\r\n                                                        value={this.state.content}\r\n                                                        label=\"Name\"\r\n                                                        variant=\"outlined\"\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.setContent() }} style={{ borderRadius: 2 }}>\r\n                                                        <Add />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                    <Paper style={{ width: 'min-content', marginTop: 10, alignContent: 'center', justifyContent: 'center', alignSelf: 'center' }} >\r\n                        <IconButton onClick={() => { this.delete() }} style={{ borderRadius: 5 }}>\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Widget","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Moment from 'moment'\r\nimport { Add, Delete, Settings } from '@material-ui/icons'\r\nimport { FormControl, Button, MenuItem, Select, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, IconButton } from '@material-ui/core'\r\nimport Request from '../../../utils/Request'\r\nimport Alert from '../../../components/Alert'\r\n\r\nclass Smartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: 0,\r\n            enabled: false,\r\n            message: \"\",\r\n            users: [],\r\n            profiles: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/users\")\r\n        let resultProfile = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: result.code + \" : \" + result.message\r\n            })\r\n        } else if (resultProfile.error) {\r\n            this.setState({\r\n                enabled: true,\r\n                message: resultProfile.code + \" : \" + resultProfile.message\r\n            })\r\n        } else {\r\n            this.setState({\r\n                enabled: false,\r\n                message: \"\",\r\n                users: result.data,\r\n                profiles: resultProfile.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async delete(id) {\r\n        let result = await new Request().delete().fetch(\"/api/users/\" + id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    async updateProfile(user, profile) {\r\n        let result = await new Request().put({\r\n            login: user.login,\r\n            profile: profile\r\n        }).fetch(\"/api/users/\" + user.id)\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.componentDidMount()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Paper style={{ display: 'flex', padding: 10, alignContent: 'center', justifyContent: 'center', alignItems: 'center', alignSelf: 'center' }}>\r\n                            <Typography variant='subtitle1' style={{ fontSize: 18 }} >\r\n                                Chargement des smartobject\r\n                            </Typography>\r\n                        </Paper>\r\n                        :\r\n                        <div>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        {this.state.users.sort((a, b) => {\r\n                                            return a.profile > b.profile\r\n                                        }).slice(this.state.page * 10, (this.state.page + 1) * 10).map((user) => (\r\n                                            <TableRow hover key={user.id} style={{ cursor: 'pointer' }}>\r\n                                                <TableCell align=\"left\">\r\n                                                    <Typography variant='body1'>\r\n                                                        {\r\n                                                            user.login\r\n                                                        }\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <FormControl variant=\"outlined\"  >\r\n                                                        <Select disabled={user.login == 'admin'} value={user.profile} onChange={(event) => { this.updateProfile(user, event.target.value) }} >\r\n                                                            {\r\n                                                                this.state.profiles.map(profile => {\r\n                                                                    return (\r\n                                                                        <MenuItem value={profile.id} >{profile.name}</MenuItem>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton onClick={() => { this.props.history.push('/user/' + user.id +  \"/password\") }} style={{ borderRadius: 3 }}>\r\n                                                        <Settings />\r\n                                                    </IconButton>\r\n                                                    <IconButton onClick={() => { this.delete(user.id) }} style={{ borderRadius: 3 }}>\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\r\n                                <Paper style={{ width: 50, height: 50, marginTop: 10, padding: 5, marginBottom: 10, textAlign: 'center', justifyContent: 'space-around', alignContent: 'center', alignItems: 'center', display: 'flex', flexDirection: 'row' }}>\r\n                                    <Link to=\"/user/new\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                                        <IconButton style={{ borderRadius: 0 }}>\r\n                                            <Add />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Paper>\r\n                                <TablePagination\r\n                                    component=\"div\"\r\n                                    count={this.state.users.length}\r\n                                    rowsPerPage={10}\r\n                                    page={this.state.page}\r\n                                    rowsPerPageOptions={[]}\r\n                                    onChangePage={(event, page) => { this.setState({ page: page }) }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Smartobject","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewSmartobject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            message: \"\",\r\n            profiles: [],\r\n            profile: 1,\r\n            login: \"\",\r\n            password: \"\",\r\n            confirmationPassword: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let result = await new Request().get().fetch(\"/api/profiles\")\r\n        if (result.error) {\r\n            this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n        } else {\r\n            this.setState({ enabled: false, message: \"\", profiles: result.data })\r\n        }\r\n    }\r\n\r\n    async add() {\r\n        if(this.state.login.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing login\" })\r\n        } else if(this.state.password.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing password\" })\r\n        } else if(this.state.password != this.state.confirmationPassword) {\r\n                this.setState({ enabled: true, message: \"Passwords are not the same\" })\r\n            } else {\r\n            let result = await new Request().post({login: this.state.login, password: this.state.password, profile: this.state.profile}).fetch(\"/api/users\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/user')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField placeholder='login' variant=\"outlined\" value={this.state.login} onChange={(event) => { this.setState({ login: event.currentTarget.value }) }} />\r\n                            <TextField type='password' placeholder='password' variant=\"outlined\" value={this.state.password} style={{ marginTop: 10 }} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\r\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\r\n                        <FormControl variant=\"outlined\" style={{ width: '100%', marginTop: 10 }} >\r\n                                <Select value={this.state.profile} onChange={(event) => { this.setState({ profile: event.target.value }) }} >\r\n                                    {\r\n                                        this.state.profiles.map(profile => {\r\n                                            return (\r\n                                                <MenuItem value={profile.id} >{profile.name}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.add() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSmartobject","import React from 'react'\r\nimport { IconButton, TextField, Select, MenuItem, FormControl, InputLabel, Typography, Paper } from '@material-ui/core'\r\nimport { Save } from '@material-ui/icons'\r\nimport Alert from '../../../components/Alert'\r\nimport Request from '../../../utils/Request'\r\n\r\nclass NewPassword extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            enabled: false,\r\n            id: props.match.params.id,\r\n            message: \"\",\r\n            confirmationPassword: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n\r\n    async changePassword() {\r\n        if(this.state.password.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing password\" })\r\n        } else if(this.state.confirmationPassword.length == 0) {\r\n            this.setState({ enabled: true, message: \"Missing confirmation password\" })\r\n        } else if(this.state.password != this.state.confirmationPassword) {\r\n            this.setState({ enabled: true, message: \"Passwords are not the same\" })\r\n        } else {\r\n            let result = await new Request().post({password: this.state.password}).fetch(\"/api/users/\" + this.state.id + \"/password\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.history.push('/user')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper elevation={2} style={{ padding: 10, justifyContent: 'left' }}>\r\n                    <div style={{ flexDirection: 'row', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'start', flexDirection: 'column', alignSelf: 'start', alignContent: 'start', alignItems: 'start', padding: 10 }}>\r\n                            <TextField placeholder='password' type='password' variant=\"outlined\" value={this.state.password} onChange={(event) => { this.setState({ password: event.currentTarget.value }) }} />\r\n                            <TextField placeholder='password confirmation' type='password' variant=\"outlined\" value={this.state.confirmationPassword} style={{marginTop: 10}} onChange={(event) => { this.setState({ confirmationPassword: event.currentTarget.value }) }} />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper style={{ width: 'min-content', height: 'min-content', padding: 2, alignContent: 'center', alignItems: 'center', justifyContent: 'center', alignSelf: 'center', marginTop: 5 }}>\r\n                    <IconButton onClick={() => { this.changePassword() }} style={{ borderRadius: 0 }} variant='outlined'>\r\n                        <Save />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPassword","import React from 'react'\r\nimport { Drawer, List, Typography, Divider, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\r\nimport {ShoppingCart, DevicesOther, ExitToApp, AccountTree, Category, DeviceHub, Https, Extension, Settings, Person} from '@material-ui/icons'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    render() {\r\n        if(this.props.isMobile) {\r\n            return null\r\n        }\r\n        return (\r\n            <Drawer variant=\"persistent\" anchor=\"left\" open={true} style={{ width: 240 }} >\r\n                <div style={{ width: 240 }}>\r\n                    <List>\r\n                        <div style={{display:'flex', justifyContent:'flex-start', padding: 5, alignContent:'center', alignSelf:'center', alignItems:'center'}}>\r\n                        <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '7vh', width: '7vh', borderRadius: 7, marginLeft: 15 }} />\r\n                        <div>\r\n                        <Typography variant='h5' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 15, paddingLeft: 10 }}>\r\n                            Intendant\r\n                        </Typography>\r\n                        <Typography variant='subtitle1' style={{ textAlign: 'start', fontWeight: 'bold', paddingTop: 0, paddingBottom: 15, paddingLeft: 10 }}>\r\n                            Administration\r\n                        </Typography>\r\n                        </div>  \r\n                            </div>\r\n                    \r\n                        <Divider />\r\n                        <Link to=\"/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"smartobject\"}>\r\n                                <ListItemIcon>\r\n                                    <DevicesOther />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Smartobject\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/module\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"module\"}>\r\n                                <ListItemIcon>\r\n                                    <Category />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Module\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/widget\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"widget\"} >\r\n                                <ListItemIcon>\r\n                                    <Extension />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Widget\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/process\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"process\"} >\r\n                                <ListItemIcon>\r\n                                    <DeviceHub />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Process\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/routine\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"configuration\"} >\r\n                                <ListItemIcon>\r\n                                    <AccountTree />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Routine\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/authorization\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"authorization\"} >\r\n                                <ListItemIcon>\r\n                                    <Https />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Authorization\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/user\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"user\"} >\r\n                                <ListItemIcon>\r\n                                    <Person />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"User\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/market/smartobject\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"market\"} >\r\n                                <ListItemIcon>\r\n                                    <ShoppingCart />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Market\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/configuration\" style={{ textDecoration: 'none', color: 'white' }}>\r\n                            <ListItem button key={\"configuration\"} >\r\n                                <ListItemIcon>\r\n                                    <Settings />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\"Configuration\"} />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider />\r\n                        <ListItem button key={\"disconnect\"} onClick={() => {this.props.onDisconnect()}} >\r\n                            <ListItemIcon>\r\n                                <ExitToApp />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"Disconnect\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\nimport { Toolbar, AppBar } from '@material-ui/core'\r\nimport SmartObject from './contents/SmartObject/List'\r\nimport DetailSmartObject from './contents/SmartObject/Detail'\r\nimport NewSmartObject from './contents/SmartObject/New'\r\nimport Authorization from './contents/Authorization/List'\r\nimport ListProcess from './contents/Process/List'\r\nimport NewProcess from './contents/Process/New'\r\nimport DetailProcess from './contents/Process/Detail'\r\nimport Routine from './contents/Routine/List'\r\nimport NewRoutine from './contents/Routine/New'\r\nimport DetailRoutine from './contents/Routine/Detail'\r\nimport Module from './contents/Module/List'\r\nimport DetailModule from './contents/Module/Detail'\r\nimport Configuration from './contents/Configuration/List'\r\nimport Market from './contents/Market/List'\r\nimport Widget from './contents/Widget/List'\r\nimport NewWidget from './contents/Widget/New'\r\nimport DetailWidget from './contents/Widget/Detail'\r\nimport User from './contents/User/List'\r\nimport NewUser from './contents/User/New'\r\nimport NewPassword from './contents/User/NewPassword'\r\nimport Sidebar from '../components/Sidebar'\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\n\r\nclass Main extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n\r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router basename='/admin'>\r\n                <Sidebar isMobile={this.state.isMobile} onDisconnect={() => { this.props.onDisconnect() }} />\r\n                <main style={{ padding: 20, width: this.state.isMobile ? '95vw' :  '80vw', height: '100vh' }} >\r\n                    <div style={{ marginLeft: this.state.isMobile ? 0 : 240, marginTop: this.state.isMobile ? 0 : 32 }}>\r\n                        <Switch>\r\n                            <Route exact path=\"/smartobject\" component={SmartObject} />\r\n                            <Route exact path=\"/smartobject/new\" component={NewSmartObject} />\r\n                            <Route exact path=\"/smartobject/:id\" component={DetailSmartObject} />\r\n                            <Route exact path=\"/module\" component={Module} />\r\n                            <Route exact path=\"/module/:id\" component={DetailModule} />\r\n                            <Route exact path=\"/routine\" component={Routine} />\r\n                            <Route exact path=\"/routine/new\" component={NewRoutine} />\r\n                            <Route exact path=\"/routine/:id\" component={DetailRoutine} />\r\n                            <Route exact path=\"/widget\" component={Widget} />\r\n                            <Route exact path=\"/widget/new\" component={NewWidget} />\r\n                            <Route exact path=\"/widget/authorization\" component={Widget} />\r\n                            <Route exact path=\"/widget/:id\" component={DetailWidget} />\r\n                            <Route exact path=\"/process\" component={ListProcess} />\r\n                            <Route exact path=\"/process/new\" component={NewProcess} />\r\n                            <Route exact path=\"/process/:id\" component={DetailProcess} />\r\n                            <Route exact path=\"/user\" component={User} />\r\n                            <Route exact path=\"/user/new\" component={NewUser} />\r\n                            <Route exact path=\"/user/:id/password\" component={NewPassword} />\r\n                            <Route exact path=\"/configuration\" component={Configuration} />\r\n                            <Route exact path=\"/market/:id\" component={Market} />\r\n                            <Route exact path=\"/authorization\" component={Authorization} />\r\n                        </Switch>\r\n                    </div>\r\n                </main>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport Package from '../../package.json'\r\nimport { Paper, TextField, Button, Typography } from '@material-ui/core'\r\nimport Alert from '../components/Alert'\r\nimport Main from './Main'\r\nimport Request from '../utils/Request'\r\n\r\nclass GetStarted extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            authentification: true,\r\n            enabled: false,\r\n            message: \"\",\r\n            password: \"\",\r\n            confirmePassword: \"\",\r\n            login: \"admin\",\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n    \r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n\r\n    async register() {\r\n        if (this.state.password == this.state.confirmePassword) {\r\n            let result = await new Request().put({ password: this.state.password }).fetch(\"/api/getstarted\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                this.props.onFinish()\r\n            }\r\n        } else {\r\n            this.setState({ enabled: true, message: 'Password and password confirmation is not the same' })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '30vw', textAlign: 'center' }}>\r\n                <div >\r\n                    <img src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7 }} />\r\n                    <div style={{ fontSize: 70, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\r\n                        Intendant\r\n                    </div>\r\n                    <div style={{ fontSize: 14, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 30 }}>\r\n                        At the first launch, you must set the admin password\r\n                    </div>\r\n                </div>\r\n                <div noValidate autoComplete=\"off\" style={{ marginBottom: 10}}>\r\n                    <div style={{ marginTop: 10 }}>\r\n                        <TextField value={this.state.password} fullWidth label=\"Password\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\r\n                    </div>\r\n                    <div style={{ marginTop: 10 }}>\r\n                        <TextField value={this.state.confirmePassword} fullWidth label=\"Confirmation\" type='password' inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ confirmePassword: event.nativeEvent.target.value }) }} />\r\n                    </div>\r\n                    <div style={{  marginTop: 15, textAlign: 'end' }}>\r\n                        <Button variant='plain' onClick={() => { this.register() }}  >\r\n                            Let's get started\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                    {this.state.message}\r\n                </Alert>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GetStarted;\r\n","import React from 'react'\r\nimport Package from '../../package.json'\r\nimport { Paper, TextField, Button, Typography, Switch, IconButton } from '@material-ui/core'\r\nimport Alert from '../components/Alert'\r\nimport Main from './Main'\r\nimport GetStarted from './GetStarted'\r\nimport Request from '../utils/Request'\r\nimport { Settings } from '@material-ui/icons'\r\n\r\nclass Authentification extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            authentification: true,\r\n            enabled: false,\r\n            getStarted: false,\r\n            message: \"\",\r\n            password: \"\",\r\n            customAddress: false,\r\n            address: window.location.origin,\r\n            login: \"admin\",\r\n            isMobile: false\r\n        }\r\n    }\r\n\r\n\r\n    mediaQueries(query) {\r\n        let mediaMatch = window.matchMedia(query);\r\n        this.setState({ isMobile: mediaMatch.matches })\r\n        const handler = e => this.setState({ isMobile: e.matches })\r\n        mediaMatch.addListener(handler)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let service = localStorage.getItem(\"server\")\r\n        if (service) {\r\n            this.setState({ address: service.replace(\"http://\", \"\") })\r\n        }\r\n        this.mediaQueries('(max-width: 900px)')\r\n    }\r\n\r\n    async login() {\r\n        if (await this.checkServer()) {\r\n            let result = await new Request().post({ login: this.state.login, password: this.state.password }).fetch(\"/api/authentification\")\r\n            if (result.error) {\r\n                this.setState({ enabled: true, message: result.code + \" : \" + result.message })\r\n            } else {\r\n                localStorage.setItem(\"authorization\", result.token)\r\n                this.setState({ enabled: false, message: \"\", authentification: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    disconnect() {\r\n        localStorage.removeItem(\"authorization\")\r\n        this.setState({ authentification: true, password: \"\" })\r\n    }\r\n\r\n    async checkServer() {\r\n        let ok = true\r\n        let protocol = window.location.protocol + \"//\"\r\n        if(this.state.address.split(\"://\").length > 1) {\r\n            protocol = \"\"\r\n        }\r\n        try {\r\n            let result = await fetch(protocol + this.state.address + \"/api/ping\", {}, 2000)\r\n            let resultJSON = await result.json()\r\n            if (resultJSON.message != \"pong\" || resultJSON.code != \"ok\") {\r\n                this.setState({ enabled: true, message: 'Connection to server failed' })\r\n                ok = false\r\n            } else {\r\n                localStorage.setItem(\"server\",protocol + this.state.address)\r\n                if (resultJSON.getStarted) {\r\n                    this.setState({ getStarted: true })\r\n                    return false\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.setState({ enabled: true, message: 'Connection to server failed' })\r\n            ok = false\r\n        }\r\n        return ok\r\n    }\r\n\r\n    render() {\r\n        if (this.state.getStarted) {\r\n            return (\r\n                <GetStarted onFinish={() => { this.setState({ getStarted: false }) }} />\r\n            )\r\n        } else {\r\n            if (this.state.authentification) {\r\n                return (\r\n                    <Paper elevation={3} style={{ padding: 30, width: this.state.isMobile ? '400px' : '25vw', textAlign: 'center' }}>\r\n                        <div>\r\n                            <div style={{ marginBottom: 50 }}>\r\n                                <img  onClick={() => {this.setState({customAddress: !this.state.customAddress}) }}  src={process.env.PUBLIC_URL + \"/logo.svg\"} style={{ height: '15vh', width: '15vh', borderRadius: 7, cursor: 'pointer' }} />\r\n                                <div style={{ fontSize: 55, fontWeight: 'bold', marginTop: 0, lineHeight: 0.5 }}>\r\n                                    Intendant\r\n                                </div>\r\n                                <div style={{ fontSize: 20, fontWeight: 'bold', marginTop: 0, lineHeight: 1, marginTop: 15 }}>\r\n                                    Administration\r\n                                </div>\r\n                            </div>\r\n                            <form noValidate onSubmit={(e) => { e.preventDefault(); this.login() }} autoComplete=\"off\" style={{ marginBottom: 10 }}>\r\n                                {\r\n                                    this.state.customAddress ?\r\n                                        <div style={{ padding: 5 }}>\r\n                                            <TextField value={this.state.address} fullWidth label=\"Server address\" autoFocus onChange={(event) => { this.setState({ address: event.nativeEvent.target.value }) }} />\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                }\r\n\r\n                                <div style={{ padding: 5 }}>\r\n                                    <TextField value={this.state.login} fullWidth label=\"Login\" autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ login: event.nativeEvent.target.value }) }} />\r\n                                </div>\r\n                                <div style={{ padding: 5 }}>\r\n                                    <TextField value={this.state.password} fullWidth label=\"Password\" type='password' autoComplete=\"current-login\" inputProps={{ maxLength: 12 }} onChange={(event) => { this.setState({ password: event.nativeEvent.target.value }) }} />\r\n                                </div>\r\n                                <div style={{ padding: 5, marginTop: 5, textAlign: 'end' }}>\r\n                                    <Button type='submit' variant='plain' on onSubmit={() => { this.login() }} onClick={() => { this.login() }}  >\r\n                                        Connection\r\n                                    </Button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <Alert onClose={() => { this.setState({ enabled: false }) }} open={this.state.enabled} severity={\"error\"}>\r\n                            {this.state.message}\r\n                        </Alert>\r\n                    </Paper>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Main onDisconnect={() => { this.disconnect() }} />\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Authentification;\r\n","import Authentification from './screens/Authentification'\r\nimport Theme from './Theme'\r\nimport { ThemeProvider, CssBaseline, Box } from '@material-ui/core'\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={Theme} >\r\n      <CssBaseline />\r\n      <Box style={{ userSelect: 'none', outline: 'none', WebkitTapHighlightColor: 'rgba(41,108,71,0.33)', height: '100vh', width: '100wh', backgroundColor: Theme.palette.background.default, display: 'flex', flexDirection: 'column', alignSelf: 'center', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\r\n        <Authentification />\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}